{"version":3,"sources":["config/extendChart.js","theme.js","pages/_shared/Title.jsx","stores/_utils.js","stores/lessonStore.js","stores/notificationStore.js","socket.js","stores/auth.js","service.js","pages/_shared/PageContainer.jsx","pages/home/Activity.jsx","pages/home/Widget.jsx","pages/_shared/PercentageDoughnut.jsx","pages/home/index.jsx","assets/bartVis.png","pages/profile/ProfileHeader.jsx","pages/profile/AccountInformation.jsx","pages/profile/index.jsx","pages/_shared/PaperWithHeader.jsx","pages/_shared/ProgressBar.jsx","pages/class/Insights.jsx","pages/class/Course.jsx","pages/class/Courses.jsx","pages/class/Student.jsx","pages/class/Students.jsx","pages/_shared/TabContent.jsx","pages/_shared/Breadcrumbs.jsx","pages/class/index.jsx","pages/lesson/Doughnut.jsx","pages/lesson/Histogram.jsx","pages/lesson/InsightsAfter.jsx","pages/lesson/Activity.jsx","pages/lesson/InsightsDuring.jsx","pages/lesson/Insights.jsx","pages/lesson/LessonContent.jsx","pages/lesson/index.jsx","pages/student/Lesson.jsx","pages/student/Course.jsx","pages/student/Courses.jsx","pages/student/ProfileHeader.jsx","pages/student/Progress.jsx","pages/student/index.jsx","pages/studentLesson/QuestionAttempts.jsx","pages/studentLesson/index.jsx","pages/questionGroup/BarGraph.jsx","pages/questionGroup/Doughnut.jsx","pages/questionGroup/Tile.jsx","pages/questionGroup/Insights.jsx","pages/_shared/questionTypes/MultipleChoice.jsx","pages/_shared/questionTypes/MultipleChoiceGroup.jsx","pages/_shared/questionTypes/Open.jsx","pages/_shared/questionTypes/DivideTheWord.jsx","pages/_shared/questionTypes/clickTheRightWords.jsx","pages/_shared/QuestionGroup.jsx","pages/questionGroup/Question.jsx","pages/questionGroup/CustomTitle.jsx","pages/questionGroup/AnswerHighlight.jsx","pages/questionGroup/AnswersMultipleChoice.jsx","pages/questionGroup/index.jsx","pages/students/index.jsx","routes.js","pages/_shared/MenuItem.jsx","Menu.jsx","Notifications.jsx","AppBar.jsx","Dashboard.jsx","assets/loginBanner.jpg","pages/login/index.jsx","stores/questionStore.js","stores/studentStore.js","App.js","index.js"],"names":["extendChart","originalDoughnutDraw","Chart","controllers","doughnut","prototype","draw","helpers","extend","apply","this","arguments","chart","config","options","elements","center","text","color","ctx","width","height","fontSize","toFixed","font","textBaseline","fillStyle","textX","Math","round","measureText","textY","fillText","createMuiTheme","widget","primary","main","secondary","tertiary","Title","props","Typography","component","variant","style","textAlign","gutterBottom","children","utils","addDuration","lessonAttempts","map","lessonAttempt","duration","questionGroupAttempts","reduce","acc","curr","timeElapsedSeconds","addPerformance","correct","incorrect","missed","performance","total","min","addInformation","questionAttempts","forEach","qa","answers","answerAttempt","correctAnswers","question","type","console","log","data","q","index","push","value","isCorrect","content","attempt","includes","length","answer","addQuestionGroupAverages","lesson","questionGroup","questionGroups","isCompleted","completions","elapsedTime","averageScore","averageElapsedTime","addQuestionGroupAttemptStats","addQuestionAttemptInformation","questionType","questions","qga","studentName","student","name","studentId","id","j","slice","convertCategoryToString","category","loading","popLoad","pushLoad","setlesson","clearLesson","setlessonAttempts","clearLessonAttempts","loadLesson","lessonId","a","service","response","body","refreshLessonAttempts","lessonIdToRefresh","loadLessonAttempts","isRefresh","loadedLessonAttempts","onNewQuestionAttempts","makeObservable","observable","action","isLoading","computed","accumulator","amountNotifications","notifications","pushAmountNotifications","popAmountNotifications","pushAccumulator","pushNotification","notification","setAmountNotifications","setNotifications","deleteNotification","notificationIndex","splice","restoreIndices","restoredNotifications","i","socket","io","auth","token","jscookie","get","subscribe","eventName","callback","on","info","lessonStore","notificationStore","message","classId","obj","unsubscribe","off","disconnect","connect","isConnected","connected","error","success","setError","setTimeout","setSuccess","login","email","password","logout","cookie","remove","handleResponse","req","authStore","loadStudents","query","request","loadClass","loadCourses","loadClasses","loadQuestionAttemptsID","questionId","post","send","loadStudent","loadQuestionAttempts","loadQuestionGroupAttempts","questionGroupId","pageSize","loadQuestionGroups","ids","JSON","stringify","loadLessonCategories","loadStudentCategories","updateQuestion","patch","useStyles","makeStyles","theme","container","paddingTop","spacing","paddingBottom","PageContainer","classes","Container","maxWidth","className","columns","field","headerName","flex","renderCell","params","date","row","updatedAt","substring","valueGetter","QuestionGroup","prefix","datagrid","marginTop","cursor","Activity","history","useHistory","useState","setQuestionGroupAttempts","setLoading","useCallback","useEffect","CircularProgress","Grid","item","xs","autoHeight","rows","onRowClick","event","padding","display","flexDirection","justifyContent","widgetLeft","fontWeight","widgetRight","Widget","md","Card","backgroundColor","CardActionArea","onClick","CardContent","left","right","paper","overflow","PercentageDoughnut","useTheme","title","titleColor","Paper","Dashboard","setClassList","datasets","cutoutPercentage","tooltips","enabled","hover","mode","responsive","avatar","ProfileHeader","lg","Avatar","src","Link","href","preventDefault","marginRight","root","divider","marginBottom","account","margin","label","alignItems","header","AccountInformation","Divider","TextField","disabled","fullWidth","Profile","paperheader","borderBottomLeftRadius","borderBottomRightRadius","borderTopLeftRadius","borderTopRightRadius","papercontent","PaperWithHeader","headercolor","headertitle","calculateRGB","percentage","floor","rgb","join","borderRadius","bar","colorPrimary","ProgessBar","Box","mr","LinearProgress","minWidth","correctness","learning_process","recognizing_morphemes_sentence","meaning_morphemes","splitsing_morphemes","create_morphemes_prefix","background_morphemes","recognizing_morphemes_text","intuition","create_alternative_morphemes","create_morphemes_suffix","create_new_morphemes","Insights","topResults","bottomResults","categories","sortModel","sort","ProgressBar","key","Course","lessons","location","useLocation","goToLesson","pathname","List","subheader","ListSubheader","ListItem","button","ListItemText","inline","ListItemSecondaryAction","IconButton","edge","aria-label","pagination","Courses","courses","courseFilterValue","setCourseFilterValue","courseFilterInputValue","setCourseFilterInputValue","shownCourses","Autocomplete","onChange","newValue","inputValue","onInputChange","newInputValue","getOptionLabel","option","renderInput","course","getIcon","isBottom","Student","ListItemIcon","ListItemAvatar","alt","Students","students","page","setPage","studentFilterValue","setStudentFilterValue","studentFilterInputValue","setStudentFilterInputValue","start","shownStudents","bottom","Pagination","count","ceil","TabContent","CustomBreadcrumbs","crumbs","Breadcrumbs","crumb","path","handleClick","observer","studentStore","useParams","theClass","setTheClass","setCourses","setCategories","loadAll","promises","Promise","all","AppBar","position","Tabs","classTab","newTab","currentTab","newPath","replace","Tab","icon","fixedHeight","CustomDoughnut","completed","isStarted","started","notStarted","labels","fixedHeightPaper","clsx","Histogram","calculateProgress","Doughnut","getRows","gp","math","create","questionGroupIds","questionStore","ratioCorrect","ratioProgress","averageTime","loadQuestionGroupsWithAttempts","totalCorrect","totalNotComplete","totalComplete","totalScores","totalTime","elapsedTimes","qg","sortedTimes","b","median","std","rangeMin","rangeMax","time","parseInt","getAverageValues","getDoughnutData","ratio","String","totalSeconds","minutes","seconds","convertToMinutes","showCategory","setShowCategory","changeCategory","getQuestionGroupIds","e","direction","paddingRight","Button","paddingLeft","typeLabels","open","clickTheRightWords","multipleChoice","divideTheWord","combineAndFillInTheBlanks","lessonTab","Lesson","expanded","setExpanded","Accordion","TransitionProps","unmountOnExit","AccordionSummary","expandIcon","aria-controls","AccordionDetails","background","marginLeft","createRow","courseName","lessonName","Progress","TableContainer","Table","TableHead","TableRow","TableCell","align","TableBody","rowSpan","setStudent","palette","border","boxShadow","shadows","top","transform","QuestionAttempts","modalOpen","setModalOpen","modalContent","setModalContent","Body","React","forwardRef","ref","Fragment","Modal","onClose","aria-labelledby","aria-describedby","handleModalOpen","StudentLesson","loadQuestionAttemptsWithInfo","getLabels","amountQuestions","BarGraph","questionIds","distributions","correctPerQuestion","Array","fill","incorrectPerQuestion","missedPerQuestion","questionGroupAttempt","questionAttempt","indexCorrect","findIndex","el","indexIncorrect","indexMissed","calculateDistribution","card","widgetTop","widgetBottom","Tile","number","amountLessons","popover","pointerEvents","RemoveButton","htmlFor","MultipleChoice","instruction","originalData","save","setIsBlocking","dataCopy","setData","popoverText","setPopoverText","anchorEl","setAnchorEl","editing","setEditing","handlePopoverOpen","currentTarget","handlePopoverClose","Boolean","Popover","anchorOrigin","vertical","horizontal","transformOrigin","disableRestoreFocus","FormControl","FormLabel","RadioGroup","FormControlLabel","control","Radio","checked","newCorrectOption","newOptions","newData","editCorrect","optionToEdit","target","editOption","placeholder","optionToRemove","filter","removeOption","onMouseEnter","onMouseLeave","aria-owns","undefined","aria-haspopup","MultipleChoiceGroup","word","morphemes","morpheme","Open","multiline","insertDividers","spread","pre","DivideTheWord","correctAnswer","ClickTheRightWords","Question","isBlocking","el1","el2","saveQuestion","when","setQuestionGroup","CustomTitle","getColor","AnswerHighlight","questionName","flexGrow","grid","wrap","filterValue","setFilterValue","filterInputValue","setFilterInputValue","getRowsFilter","getOptions","onClickStudent","onFilterInputChange","onFilterChange","categoryQuestions","nameQuestionGroup","defaultExpanded","item2","index2","Answers","AnswersMultipleChoice","QuestionStats","questionGroupTab","routes","exact","Component","LessonView","Class","setStudents","components","ColumnMenuIcon","useTreeItemStyles","grey","typography","fontWeightMedium","fontWeightRegular","group","selected","labelRoot","labelIcon","labelText","MenuItem","LabelIcon","labelInfo","bgColor","other","TreeItem","drawer","logoutButton","Menu","classList","dialogOpen","setDialogOpen","handleDialogOpen","handleDialogClose","Drawer","TreeView","defaultCollapseIcon","defaultExpandIcon","defaultEndIcon","onNodeSelect","nodeId","HomeRoundedIcon","SchoolRoundedIcon","classItem","GroupRoundedIcon","NoMeetingRoomRoundedIcon","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","StyledMenu","withStyles","getContentAnchorEl","StyledMenuItem","common","white","setClasses","handleClose","Badge","badgeContent","keepMounted","onClickNotification","appBar","zIndex","transition","transitions","easing","sharp","leavingScreen","appBarShift","enteringScreen","icons","CustomAppBar","Toolbar","toolbar","goBack","noWrap","appBarSpacer","mixins","render","match","rest","Object","keys","param","Copyright","Date","getFullYear","image","backgroundImage","loginBanner","backgroundRepeat","backgroundSize","backgroundPosition","form","submit","setEmail","setPassword","sm","elevation","square","noValidate","required","autoComplete","autoFocus","Checkbox","mt","setTopResults","setBottomResults","distribution","computeDistribution","cutoffValue","max","updateBottomStudents","currentTotal","_","mergeWith","obj1","obj2","isNumber","totalPoints","some","defaults","global","plugins","colorschemes","scheme","Classic10","Alert","ErrorPopup","Snackbar","severity","SuccessPopup","LoginPage","App","ThemeProvider","CssBaseline","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.ee6355b6.chunk.js","sourcesContent":["import { Chart } from 'react-chartjs-2';\r\n\r\nconst extendChart = () => {\r\n  const originalDoughnutDraw = Chart.controllers.doughnut.prototype.draw;\r\n  Chart.helpers.extend(Chart.controllers.doughnut.prototype, {\r\n    draw: function () {\r\n      originalDoughnutDraw.apply(this, arguments);\r\n\r\n      if (this.chart.config.options.elements.center) {\r\n        const chart = this.chart.chart;\r\n        const { text, color } = this.chart.config.options.elements.center;\r\n        const { ctx, width, height } = chart;\r\n        const fontSize = (height / 114).toFixed(2);\r\n        ctx.font = fontSize + 'em Verdana';\r\n        ctx.textBaseline = 'middle';\r\n        ctx.fillStyle = color;\r\n\r\n        const textX = Math.round((width - ctx.measureText(text).width) / 2);\r\n        const textY = height / 2;\r\n\r\n        ctx.fillText(text, textX, textY);\r\n      }\r\n    },\r\n  });\r\n};\r\n\r\nexport default extendChart;\r\n","import { createMuiTheme } from '@material-ui/core/styles';\r\n\r\nexport default createMuiTheme({\r\n  widget: {\r\n    primary: {\r\n      main: '#729ece',\r\n    },\r\n    secondary: {\r\n      main: '#ff9e4a',\r\n    },\r\n    tertiary: {\r\n      main: '#67bf5c',\r\n    },\r\n  },\r\n});\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst Title = (props) => {\r\n  return (\r\n    <Typography\r\n      component=\"h2\"\r\n      variant=\"h6\"\r\n      style={{ color: props.color, textAlign: 'center' }}\r\n      gutterBottom\r\n    >\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n};\r\n\r\nTitle.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Title;\r\n","const addDuration = (lessonAttempts) => {\r\n  return lessonAttempts.map((lessonAttempt) => {\r\n    const duration = lessonAttempt.questionGroupAttempts.reduce(\r\n      (acc, curr) => acc + curr.timeElapsedSeconds,\r\n      0\r\n    );\r\n    lessonAttempt.duration = Math.round(duration / 60);\r\n    return lessonAttempt;\r\n  });\r\n};\r\n\r\nconst addPerformance = (lessonAttempts) => {\r\n  return lessonAttempts.map((lessonAttempt) => {\r\n    const { correct, incorrect } = lessonAttempt.questionGroupAttempts.reduce(\r\n      (acc, curr) => {\r\n        acc.correct += curr.correct;\r\n        acc.incorrect += curr.incorrect + curr.missed;\r\n        return acc;\r\n      },\r\n      { correct: 0, incorrect: 0 }\r\n    );\r\n\r\n    lessonAttempt.correct = correct;\r\n    lessonAttempt.incorrect = incorrect;\r\n\r\n    // unroundedGrade could be NaN if both correct and incorrect are 0\r\n    const total = correct + incorrect;\r\n    let performance;\r\n    if (total === 0) {\r\n      performance = 10;\r\n    } else {\r\n      performance = Math.min(Math.round((correct / total) * 9 + 1), 10);\r\n    }\r\n    lessonAttempt.performance = performance;\r\n\r\n    return lessonAttempt;\r\n  });\r\n};\r\n\r\nconst addQuestionGroupAttemptStats = (questionGroup) => {\r\n  const { elapsedTime, total } = questionGroup.questionGroupAttempts.reduce(\r\n    (acc, curr) => {\r\n      if (curr.isCompleted) {\r\n        acc.elapsedTime += curr.timeElapsedSeconds;\r\n        acc.total += 1;\r\n      }\r\n      return acc;\r\n    },\r\n    { elapsedTime: 0, total: 0 }\r\n  );\r\n  questionGroup.averageElapsedTime = Math.round(elapsedTime / total);\r\n  return questionGroup;\r\n};\r\n\r\nconst addInformation = (questionAttempts) => {\r\n  questionAttempts.forEach((qa) => {\r\n    const answers = [];\r\n    let answerAttempt = '';\r\n    let correct = 0;\r\n    let incorrect = 0;\r\n    let missed = 0;\r\n    const correctAnswers = [];\r\n    if (qa.question.type === 'multipleChoice') {\r\n      console.log(qa);\r\n      qa.question.data.options.forEach((q, index) => {\r\n        answers.push(q.value);\r\n        if (q.isCorrect) {\r\n          correctAnswers.push(index);\r\n        }\r\n      });\r\n\r\n      if (qa.content !== []) {\r\n        qa.content.forEach((attempt, index) => {\r\n          if (correctAnswers.includes(attempt)) {\r\n            correct += 1;\r\n          } else {\r\n            incorrect += 1;\r\n          }\r\n          answerAttempt += answers[index];\r\n        });\r\n        missed += correctAnswers.length - qa.content.length;\r\n      } else {\r\n        answerAttempt = qa.content;\r\n        correct = incorrect = missed = 0;\r\n      }\r\n    } else {\r\n      answerAttempt = qa.content;\r\n    }\r\n    qa.correct = correct;\r\n    qa.incorrect = incorrect;\r\n    qa.missed = missed;\r\n    qa.answer = answerAttempt;\r\n  });\r\n  return questionAttempts;\r\n};\r\n\r\nconst addQuestionAttemptInformation = (questionGroup) => {\r\n  const questionType = questionGroup.questions[0].type;\r\n  if (!questionType || questionType !== 'multipleChoice') {\r\n    return questionGroup;\r\n  }\r\n\r\n  const answers = [];\r\n  questionGroup.questions.forEach((q) => {\r\n    answers.push(q.data.options);\r\n  });\r\n\r\n  console.log(answers);\r\n  let acc = 0;\r\n  questionGroup.questionGroupAttempts.forEach((qga) => {\r\n    if (qga.isCompleted) {\r\n      const studentName = qga.lessonAttempts.student.name;\r\n      const studentId = qga.lessonAttempts.student.id;\r\n\r\n      qga.questionAttempts.forEach((qa) => {\r\n        let correct = 0;\r\n        let incorrect = 0;\r\n        let missed = 0;\r\n        let answer = '';\r\n        const answerAttempt = qa.content;\r\n        if (answerAttempt.length !== 0) {\r\n          for (\r\n            let j = 0;\r\n            j < answers[acc % qga.questionAttempts.length].length;\r\n            j++\r\n          ) {\r\n            const isCorrect =\r\n              answers[acc % qga.questionAttempts.length][j].isCorrect;\r\n            const value = answers[acc % qga.questionAttempts.length][j].value;\r\n            if (answerAttempt.includes(j)) {\r\n              answer += value + ', ';\r\n              if (isCorrect) {\r\n                correct += 1;\r\n              } else {\r\n                incorrect += 1;\r\n              }\r\n            } else if (!answerAttempt.includes(j) && isCorrect) {\r\n              missed += 1;\r\n            }\r\n          }\r\n        } else {\r\n          missed += 1;\r\n        }\r\n\r\n        qa.studentName = studentName;\r\n        qa.studentId = studentId;\r\n        qa.answer = answer.slice(0, -2); //Remove last comma and whitespace\r\n        qa.correct = correct;\r\n        qa.incorrect = incorrect;\r\n        qa.missed = missed;\r\n      });\r\n      acc += 1;\r\n    }\r\n  });\r\n\r\n  return questionGroup;\r\n};\r\n\r\nconst addQuestionGroupAverages = (lesson, questionGroup) => {\r\n  lesson.questionGroups = lesson.questionGroups.map((questionGroup) => {\r\n    const { correct, total, completions, elapsedTime } =\r\n      questionGroup.questionGroupAttempts.reduce(\r\n        (acc, curr) => {\r\n          if (curr.isCompleted) {\r\n            acc.correct += curr.correct;\r\n            acc.total += curr.correct + curr.incorrect + curr.missed;\r\n            acc.completions += 1;\r\n            acc.elapsedTime += curr.timeElapsedSeconds;\r\n          }\r\n          return acc;\r\n        },\r\n        {\r\n          correct: 0,\r\n          total: 0,\r\n          completions: 0,\r\n          elapsedTime: 0,\r\n        }\r\n      );\r\n    let averageScore = Math.round((correct / total) * 100) / 10;\r\n    if (!averageScore) {\r\n      averageScore = 0;\r\n    }\r\n    let averageElapsedTime = Math.round(elapsedTime / completions);\r\n    if (!averageElapsedTime) {\r\n      averageElapsedTime = 0;\r\n    }\r\n\r\n    return { ...questionGroup, averageScore, completions, averageElapsedTime };\r\n  });\r\n\r\n  return lesson;\r\n};\r\n\r\nconst convertCategoryToString = (category) => {\r\n  switch (category) {\r\n    case 'learning_process':\r\n      return 'Leerproces';\r\n    case 'recognizing_morphemes_sentence':\r\n      return 'Herkennen morfemen in een zin';\r\n    case 'meaning_morphemes':\r\n      return 'Betekenis morfemen';\r\n    case 'splitsing_morphemes':\r\n      return 'Splits morfemen';\r\n    case 'create_morphemes_prefix':\r\n      return 'Creëren morfemen (voorvoegsel)';\r\n    case 'background_morphemes':\r\n      return 'Alternatieve betekenis morfemen';\r\n    case 'recognizing_morphemes_text':\r\n      return 'Herkennen morfemen in een tekst';\r\n    case 'intuition':\r\n      return 'Intuïtie';\r\n    case 'create_alternative_morphemes':\r\n      return 'Creëren alternatieve morfemen';\r\n    case 'create_morphemes_suffix':\r\n      return 'Creëren morfemen (achtervoegsel)';\r\n    case 'create_new_morphemes':\r\n      return 'Creëren nieuwe morfemen';\r\n    default:\r\n      return null;\r\n  }\r\n};\r\n\r\nconst utils = {\r\n  addDuration,\r\n  addPerformance,\r\n  addInformation,\r\n  addQuestionGroupAverages,\r\n  addQuestionGroupAttemptStats,\r\n  addQuestionAttemptInformation,\r\n  convertCategoryToString,\r\n};\r\n\r\nexport default utils;\r\n","import { action, makeObservable, observable, computed } from 'mobx';\r\nimport service from '../service';\r\nimport utils from './_utils';\r\n\r\n// Tutorial on mobx state management: https://blog.logrocket.com/introduction-to-mobx-with-react/\r\nclass LessonStore {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      lesson: observable,\r\n      lessonAttempts: observable,\r\n      loading: observable,\r\n      loadLesson: action,\r\n      loadLessonAttempts: action,\r\n      refreshLessonAttempts: action,\r\n      questionGroup: observable,\r\n      popLoad: action,\r\n      pushLoad: action,\r\n      setlesson: action,\r\n      setlessonAttempts: action,\r\n      clearLesson: action,\r\n      isLoading: computed,\r\n    });\r\n  }\r\n\r\n  lesson = null;\r\n  lessonAttempts = [];\r\n  questionGroup = [];\r\n  loading = 0;\r\n\r\n  popLoad = () => (this.loading -= 1);\r\n  pushLoad = () => (this.loading += 1);\r\n\r\n  setlesson = (lesson) => (this.lesson = lesson);\r\n  clearLesson = () => (this.lesson = null);\r\n\r\n  setlessonAttempts = (lessonAttempts) =>\r\n    (this.lessonAttempts = lessonAttempts);\r\n  clearLessonAttempts = () => (this.lessonAttempts = null);\r\n\r\n  loadLesson = async (lessonId) => {\r\n    if (this.lesson?.id === lessonId) {\r\n      return;\r\n    }\r\n    this.pushLoad();\r\n    const response = await service.loadLesson(lessonId);\r\n    if (!response) {\r\n      return;\r\n    }\r\n    // Calculate average score... not pretty. Do this in the backend query at some point\r\n    const lesson = utils.addQuestionGroupAverages(\r\n      response.body.data,\r\n      this.questionGroup\r\n    );\r\n    this.setlesson(lesson);\r\n    this.popLoad();\r\n  };\r\n\r\n  refreshLessonAttempts = async () => {\r\n    console.log('GONNA REFRESH');\r\n    if (!this.lessonAttempts.length) {\r\n      console.log('no lesson attempts, returning');\r\n      return;\r\n    }\r\n    const lessonIdToRefresh = this.lessonAttempts[0]?.lessonId;\r\n    if (!lessonIdToRefresh) {\r\n      console.log('no lesson id to refresh, returning');\r\n      return;\r\n    }\r\n    console.log('refreshing', lessonIdToRefresh);\r\n    await this.loadLessonAttempts(lessonIdToRefresh, true);\r\n  };\r\n\r\n  loadLessonAttempts = async (lessonId, isRefresh = false) => {\r\n    if (\r\n      this.lessonAttempts?.length &&\r\n      this.lessonAttempts[0]?.lessonId === lessonId &&\r\n      !isRefresh\r\n    ) {\r\n      return;\r\n    }\r\n    this.pushLoad();\r\n    const response = await service.loadLessonAttempts(lessonId);\r\n    if (!response) {\r\n      return;\r\n    }\r\n    let loadedLessonAttempts = response.body.data;\r\n    loadedLessonAttempts = utils.addDuration(loadedLessonAttempts);\r\n    loadedLessonAttempts = utils.addPerformance(loadedLessonAttempts);\r\n    this.setlessonAttempts(loadedLessonAttempts);\r\n    this.popLoad();\r\n  };\r\n\r\n  onNewQuestionAttempts = (data) => {\r\n    console.log('NEW', data);\r\n  };\r\n\r\n  get isLoading() {\r\n    return this.loading > 0;\r\n  }\r\n}\r\n\r\nexport default new LessonStore();\r\n","import { action, makeObservable, observable } from 'mobx';\r\n\r\nclass NotificationStore {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      accumulator: observable,\r\n      pushAccumulator: action,\r\n      amountNotifications: observable,\r\n      pushNotification: action,\r\n      notifications: observable,\r\n      setNotifications: action,\r\n      setAmountNotifications: action,\r\n      pushAmountNotifications: action,\r\n      popAmountNotifications: action,\r\n      deleteNotification: action,\r\n    });\r\n  }\r\n\r\n  accumulator = 0;\r\n  amountNotifications = 0;\r\n  notifications = [];\r\n\r\n  pushAmountNotifications = () => (this.amountNotifications += 1);\r\n\r\n  popAmountNotifications = () => (this.amountNotifications -= 1);\r\n\r\n  pushAccumulator = () => (this.accumulator += 1);\r\n\r\n  pushNotification = (notification) => this.notifications.push(notification);\r\n\r\n  setAmountNotifications = (amountNotifications) =>\r\n    (this.amountNotifications = amountNotifications);\r\n\r\n  setNotifications = (notifications) => (this.notifications = notifications);\r\n\r\n  deleteNotification = (notificationIndex) => {\r\n    this.notifications.splice(notificationIndex, 1);\r\n    this.restoreIndices();\r\n  };\r\n\r\n  restoreIndices = () => {\r\n    let restoredNotifications = this.notifications;\r\n    for (let i = 0; i < this.notifications.length; i++) {\r\n      restoredNotifications[i].index = i;\r\n    }\r\n    this.setNotifications(restoredNotifications);\r\n  };\r\n}\r\n\r\nexport default new NotificationStore();\r\n","import { io } from 'socket.io-client';\r\nimport jscookie from 'js-cookie';\r\nimport lessonStore from '../src/stores/lessonStore';\r\nimport notificationStore from '../src/stores/notificationStore';\r\n\r\nconst socket = io({\r\n  auth: {\r\n    token: jscookie.get('token'),\r\n  },\r\n});\r\n\r\nconst onDisconnect = () => console.info('Socket disconnected');\r\nconst onConnect = () => console.info('Socket connected');\r\nconst onReconnect = () => console.info('Socket reconnected');\r\nconst subscribe = (eventName, callback) => {\r\n  socket.on(eventName, callback);\r\n  console.info(`Socket started listening to ${eventName}`);\r\n};\r\n\r\nconst unsubscribe = (eventName) => {\r\n  socket.off(eventName);\r\n  console.info(`Socket stopped listening to ${eventName}`);\r\n};\r\n\r\nconst isConnected = () => socket.connected;\r\n\r\nconst connect = () => {\r\n  socket.connect();\r\n  console.log('Socket connected');\r\n};\r\n\r\nconst disconnect = () => {\r\n  socket.disconnect();\r\n  console.log('Socket disconnected');\r\n};\r\n\r\nsubscribe('connect', onConnect);\r\nsubscribe('reconnect', onReconnect);\r\nsubscribe('disconnect', onDisconnect);\r\nsubscribe('newQuestionAttempts', lessonStore.refreshLessonAttempts);\r\nsubscribe('notification', (data) => {\r\n  notificationStore.pushNotification({\r\n    id: data.message,\r\n    classId: '638ff1eb-f3cf-4934-a292-02df28dee3d9',\r\n    category: 'classes',\r\n    value: data.message,\r\n    index: notificationStore.notifications.length,\r\n  });\r\n});\r\n\r\nconst obj = { subscribe, unsubscribe, disconnect, connect, isConnected };\r\n\r\nexport default obj;\r\n","import { action, makeObservable, observable } from 'mobx';\r\nimport cookie from 'js-cookie';\r\nimport service from '../service';\r\nimport socket from '../socket';\r\n\r\n// Tutorial on mobx state management: https://blog.logrocket.com/introduction-to-mobx-with-react/\r\nclass AuthStore {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      error: observable,\r\n      success: observable,\r\n      login: action,\r\n      logout: action,\r\n      setError: action,\r\n    });\r\n  }\r\n\r\n  error = null;\r\n  success = null;\r\n\r\n  setError = (error) => {\r\n    this.error = error;\r\n    setTimeout(() => {\r\n      this.error = null;\r\n    }, 4000);\r\n  };\r\n\r\n  setSuccess = (success) => {\r\n    this.success = success;\r\n    setTimeout(() => {\r\n      this.success = null;\r\n    }, 4000);\r\n  };\r\n\r\n  login = async (email, password) => {\r\n    const response = await service.login(email, password);\r\n    if (!response) {\r\n      return false;\r\n    }\r\n    socket.connect();\r\n    return true;\r\n  };\r\n\r\n  logout = () => {\r\n    cookie.remove('token');\r\n    socket.disconnect();\r\n  };\r\n}\r\n\r\nexport default new AuthStore();\r\n","import request from 'superagent';\r\nimport authStore from './stores/auth';\r\n\r\nconst handleResponse = async (req) => {\r\n  try {\r\n    const response = await req;\r\n    return response;\r\n  } catch (error) {\r\n    authStore.setError(\r\n      `Er is iets mis gegaan: ${\r\n        error.response.body?.message ||\r\n        error.response.body?.error ||\r\n        error.response.error ||\r\n        'server error'\r\n      }`\r\n    );\r\n    return null;\r\n  }\r\n};\r\n\r\nconst loadStudents = async (query) => {\r\n  const req = request.get(`/api/v1/students`).query(query);\r\n  const response = await handleResponse(req);\r\n  return response;\r\n};\r\n\r\nconst loadClass = async (classId) => {\r\n  const req = request.get(`/api/v1/classes/${classId}`);\r\n  const response = await handleResponse(req);\r\n  return response;\r\n};\r\n\r\nconst loadCourses = async (query) => {\r\n  const req = request.get(`/api/v1/courses`).query(query);\r\n  const response = await handleResponse(req);\r\n  return response;\r\n};\r\n\r\nconst loadClasses = async () => {\r\n  const req = request.get('/api/v1/classes');\r\n  const response = await handleResponse(req);\r\n  return response;\r\n};\r\n\r\nconst loadLessonAttempts = async (lessonId) => {\r\n  const req = request.get(`/api/v1/lessonAttempts`).query({ lessonId });\r\n  const response = await handleResponse(req);\r\n  return response;\r\n};\r\n\r\nconst loadQuestionAttemptsID = async (questionId) => {\r\n  const req = request.get(`/api/v1/questionAttempts/${questionId}`);\r\n  const response = await handleResponse(req);\r\n  return response;\r\n};\r\n\r\nconst loadLesson = async (lessonId) => {\r\n  const req = request.get(`/api/v1/lessons/${lessonId}`);\r\n  const response = await handleResponse(req);\r\n  return response;\r\n};\r\n\r\nconst login = async (email, password) => {\r\n  const req = request.post('/api/v1/auth/login').send({\r\n    email,\r\n    password,\r\n  });\r\n  const response = await handleResponse(req);\r\n  return response;\r\n};\r\n\r\nconst loadStudent = async (id) => {\r\n  const req = request.get(`/api/v1/students/${id}`);\r\n  const response = await handleResponse(req);\r\n  return response;\r\n};\r\n\r\nconst loadQuestionAttempts = async ({ studentId, lessonId }) => {\r\n  const req = request\r\n    .get('/api/v1/questionAttempts')\r\n    .query({ studentId, lessonId });\r\n  const response = await handleResponse(req);\r\n  return response;\r\n};\r\n\r\nconst loadQuestionGroupAttempts = async ({ questionGroupId, pageSize }) => {\r\n  const req = request\r\n    .get('/api/v1/questionGroupAttempts')\r\n    .query({ questionGroupId, pageSize });\r\n  const response = await handleResponse(req);\r\n  return response;\r\n};\r\n\r\nconst loadQuestionGroups = async (ids) => {\r\n  const req = request\r\n    .get(`/api/v1/questionGroup/`)\r\n    .query({ ids: JSON.stringify(ids) });\r\n  const response = await handleResponse(req);\r\n\r\n  return response;\r\n};\r\n\r\nconst loadLessonCategories = async (id) => {\r\n  const req = request.get(`/api/v1/classes/${id}/categories`);\r\n  const response = await handleResponse(req);\r\n  return response;\r\n};\r\n\r\nconst loadStudentCategories = async (id) => {\r\n  const req = request.get(`/api/v1/students/${id}/categories`);\r\n  const response = await handleResponse(req);\r\n  return response;\r\n};\r\n\r\nconst updateQuestion = async (id, data) => {\r\n  const req = request.patch(`/api/v1/question/${id}`).send({ data });\r\n  const response = await handleResponse(req);\r\n  return response;\r\n};\r\n\r\nconst service = {\r\n  loadStudents,\r\n  loadStudent,\r\n  loadClass,\r\n  loadCourses,\r\n  loadClasses,\r\n  loadLessonAttempts,\r\n  loadQuestionAttempts,\r\n  loadQuestionAttemptsID,\r\n  loadLesson,\r\n  login,\r\n  loadQuestionGroupAttempts,\r\n  loadQuestionGroups,\r\n  loadLessonCategories,\r\n  loadStudentCategories,\r\n  updateQuestion,\r\n};\r\n\r\nexport default service;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n}));\r\n\r\nconst PageContainer = (props) => {\r\n  const { children } = props;\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Container maxWidth=\"lg\" className={classes.container}>\r\n      {children}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default PageContainer;\r\n","import React, { useState, useEffect, useCallback } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport { useHistory } from 'react-router-dom';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport DoneRoundedIcon from '@material-ui/icons/DoneRounded';\r\nimport CloseRoundedIcon from '@material-ui/icons/CloseRounded';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport Title from '../_shared/Title';\r\nimport service from '../../service';\r\nimport PageContainer from '../_shared/PageContainer';\r\n\r\nconst convertDateToReadableString = (date) => {\r\n  return `${date.substring(0, 10)} ${date.substring(11, 19)}`;\r\n};\r\n\r\nconst columns = [\r\n  {\r\n    field: 'updatedAt',\r\n    headerName: 'Datum',\r\n    flex: 0.2,\r\n    renderCell: (params) => convertDateToReadableString(params.row.updatedAt),\r\n  },\r\n  {\r\n    field: 'student',\r\n    headerName: 'Leerling',\r\n    flex: 0.2,\r\n    valueGetter: (params) => params.row.lessonAttempts.student.name,\r\n  },\r\n  {\r\n    field: 'lesson',\r\n    headerName: 'Les',\r\n    flex: 0.2,\r\n    valueGetter: (params) => params.row.QuestionGroup.lesson.prefix,\r\n  },\r\n  {\r\n    field: 'question',\r\n    headerName: 'Vraag',\r\n    flex: 0.2,\r\n    valueGetter: (params) => params.row.QuestionGroup.index + 1,\r\n  },\r\n  {\r\n    field: 'isCompleted',\r\n    headerName: 'Voltooid',\r\n    flex: 0.2,\r\n    renderCell: (params) =>\r\n      params.row.isCompleted ? <DoneRoundedIcon /> : <CloseRoundedIcon />,\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  datagrid: {\r\n    marginTop: '1rem',\r\n    '& .MuiDataGrid-row:hover': {\r\n      cursor: 'pointer',\r\n    },\r\n  },\r\n}));\r\n\r\nconst Activity = (props) => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [questionGroupAttempts, setQuestionGroupAttempts] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const loadQuestionGroupAttempts = useCallback(async () => {\r\n    setLoading(true);\r\n\r\n    const response = await service.loadQuestionGroupAttempts({ pageSize: 10 });\r\n    if (!response) {\r\n      return;\r\n    }\r\n\r\n    setQuestionGroupAttempts(response.body.data);\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    loadQuestionGroupAttempts();\r\n\r\n    return () => {\r\n      setQuestionGroupAttempts([]);\r\n    };\r\n  }, [loadQuestionGroupAttempts]);\r\n\r\n  if (loading) {\r\n    return <CircularProgress />;\r\n  }\r\n\r\n  const onClickStudent = (event) =>\r\n    history.push(`/dashboard/students/${event.row.lessonAttempts.student.id}`);\r\n\r\n  return (\r\n    <PageContainer>\r\n      <Title>Recente leerlingen activiteit</Title>\r\n      <Grid item xs={12}>\r\n        <DataGrid\r\n          className={classes.datagrid}\r\n          autoHeight\r\n          rows={questionGroupAttempts}\r\n          columns={columns}\r\n          pageSize={5}\r\n          onRowClick={onClickStudent}\r\n        />\r\n      </Grid>\r\n    </PageContainer>\r\n  );\r\n};\r\n\r\nexport default Activity;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  widget: {\r\n    height: 150,\r\n    padding: theme.spacing(3),\r\n    color: 'white',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n  },\r\n  widgetLeft: {\r\n    textAlign: 'right',\r\n    fontWeight: 400,\r\n  },\r\n  widgetRight: {\r\n    textAlign: 'left',\r\n    fontWeight: 100,\r\n  },\r\n}));\r\n\r\nconst Widget = (props) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid item xs={12} md={4}>\r\n      <Card style={{ backgroundColor: props.color }}>\r\n        <CardActionArea onClick={props.onClick}>\r\n          <CardContent>\r\n            <Grid container spacing={3} className={classes.widget}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"h2\" className={classes.widgetLeft}>\r\n                  {props.left}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"h5\" className={classes.widgetRight}>\r\n                  {props.right}\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </CardContent>\r\n        </CardActionArea>\r\n      </Card>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nWidget.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Widget;\r\n","import React from 'react';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { Doughnut } from 'react-chartjs-2';\r\n\r\nimport Title from './Title';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n}));\r\n\r\nconst PercentageDoughnut = (props) => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  const { title, data, options, titleColor } = props;\r\n  const color = titleColor ? titleColor : theme.widget.primary.main;\r\n\r\n  return (\r\n    <Grid item xs={12} md={4}>\r\n      <Paper className={classes.paper}>\r\n        <Title color={color}>{title}</Title>\r\n        <Doughnut data={data} options={options} />\r\n      </Paper>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nPercentageDoughnut.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default PercentageDoughnut;\r\n","import React, { useState, useEffect, useCallback } from 'react';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport Activity from './Activity';\r\nimport Widget from './Widget';\r\nimport PercentageDoughnut from '../_shared/PercentageDoughnut';\r\nimport service from '../../service';\r\nimport PageContainer from '../_shared/PageContainer';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n}));\r\n\r\nconst Dashboard = (props) => {\r\n  const theme = useTheme();\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [, setClassList] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const loadClasses = useCallback(async () => {\r\n    setLoading(true);\r\n\r\n    const response = await service.loadClasses();\r\n    if (!response) {\r\n      return;\r\n    }\r\n\r\n    setClassList(response.body.data);\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    loadClasses();\r\n  }, [loadClasses]);\r\n\r\n  if (loading) {\r\n    return <CircularProgress />;\r\n  }\r\n\r\n  const data = ({ color, variant }) => ({\r\n    datasets: [\r\n      {\r\n        data: [100 - variant * 25, variant * 25],\r\n        backgroundColor: ['rgb(0, 0, 0, 0)', color],\r\n      },\r\n    ],\r\n  });\r\n\r\n  const options = ({ color, text }) => ({\r\n    cutoutPercentage: 75,\r\n    tooltips: { enabled: false },\r\n    hover: { mode: null },\r\n    responsive: true,\r\n    elements: {\r\n      center: {\r\n        text,\r\n        color: color || '#FFFFFF',\r\n      },\r\n    },\r\n  });\r\n\r\n  return (\r\n    <PageContainer>\r\n      <Grid container spacing={3}>\r\n        {/* Widgets with general information */}\r\n        <Widget\r\n          left={6}\r\n          right=\"lessen\"\r\n          color={theme.widget.primary.main}\r\n          onClick={() => history.push('/dashboard/lessons')}\r\n        />\r\n        <Widget\r\n          left={206}\r\n          right=\"leerlingen\"\r\n          color={theme.widget.secondary.main}\r\n          onClick={() => history.push('/dashboard/students')}\r\n        />\r\n        <Widget\r\n          left={25}\r\n          right=\"na te kijken opdrachten\"\r\n          color={theme.widget.tertiary.main}\r\n          onClick={() => history.push('/dashboard/tasks')}\r\n        />\r\n        {/* Average percentage statistics */}\r\n        <PercentageDoughnut\r\n          title=\"Gemiddelde correctheid\"\r\n          data={data({ color: theme.widget.primary.main, variant: 1 })}\r\n          options={options({ color: theme.widget.primary.main, text: '25%' })}\r\n        />\r\n        <PercentageDoughnut\r\n          title=\"Gemiddelde voortgang\"\r\n          data={data({ color: theme.widget.secondary.main, variant: 2 })}\r\n          options={options({ color: theme.widget.secondary.main, text: '50%' })}\r\n        />\r\n        <PercentageDoughnut\r\n          title=\"Opdrachten nagekeken\"\r\n          data={data({ color: theme.widget.tertiary.main, variant: 3 })}\r\n          options={options({ color: theme.widget.tertiary.main, text: '75%' })}\r\n        />\r\n        {/* Recent activity */}\r\n        <Grid item xs={12}>\r\n          <Paper className={classes.paper}>\r\n            <Activity />\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </PageContainer>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","export default __webpack_public_path__ + \"static/media/bartVis.cee2b69e.png\";","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Link from '@material-ui/core/Link';\r\n\r\nimport avatar from '../../assets/bartVis.png';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  avatar: {\r\n    width: theme.spacing(24),\r\n    height: theme.spacing(24),\r\n  },\r\n  email: {\r\n    color: 'blue',\r\n    fontWeight: 'bold',\r\n  },\r\n}));\r\n\r\nconst ProfileHeader = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const preventDefault = (event) => event.preventDefault();\r\n\r\n  return (\r\n    <Grid container>\r\n      <Grid item xs={12} lg={3}>\r\n        <Avatar src={avatar} className={classes.avatar} />\r\n      </Grid>\r\n      <Grid item xs={12} lg={9}>\r\n        <Typography variant=\"h3\">Bert Vis</Typography>\r\n        <Link href={`mailto:${'b.vis@outlook.com'}`} onClick={preventDefault}>\r\n          <Typography\r\n            className={classes.email}\r\n            style={{ display: 'inline-block', marginRight: 8 }}\r\n          >\r\n            b.vis@outlook.com\r\n          </Typography>\r\n        </Link>\r\n        <Typography style={{ display: 'inline-block' }}>- Docent</Typography>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default ProfileHeader;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(4, 4, 0, 4),\r\n  },\r\n  divider: {\r\n    marginTop: theme.spacing(4),\r\n    marginBottom: theme.spacing(4),\r\n  },\r\n  account: {\r\n    margin: theme.spacing(4),\r\n  },\r\n  label: {\r\n    height: '100%',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  header: {\r\n    fontWeight: 'bold',\r\n  },\r\n}));\r\n\r\nconst AccountInformation = (props) => {\r\n  const classes = useStyles();\r\n\r\n  // TODO: contains mocked data, need to retrieve this via store\r\n  return (\r\n    <Grid container>\r\n      <Grid item xs={12} className={classes.divider}>\r\n        <Typography variant=\"h5\" className={classes.header}>\r\n          Account Informatie\r\n        </Typography>\r\n        <Divider />\r\n        <Grid container className={classes.account}>\r\n          <Grid item xs={12} md={3}>\r\n            <Typography className={classes.label}>Gebruikersnaam</Typography>\r\n          </Grid>\r\n          <Grid item xs={12} md={9}>\r\n            <TextField\r\n              disabled\r\n              value={'bertvis1971'}\r\n              className={classes.fullWidth}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container className={classes.account}>\r\n          <Grid item xs={12} md={3}>\r\n            <Typography className={classes.label}>E-mailadres</Typography>\r\n          </Grid>\r\n          <Grid item xs={12} md={9}>\r\n            <TextField\r\n              disabled\r\n              value={'b.vis@outlook.com'}\r\n              className={classes.fullWidth}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container className={classes.account}>\r\n          <Grid item xs={12} md={3}>\r\n            <Typography className={classes.label}>Wachtwoord</Typography>\r\n          </Grid>\r\n          <Grid item xs={12} md={9}>\r\n            <TextField\r\n              disabled\r\n              type=\"password\"\r\n              value={'superuser'}\r\n              className={classes.fullWidth}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default AccountInformation;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport PageContainer from '../_shared/PageContainer';\r\nimport ProfileHeader from './ProfileHeader';\r\nimport AccountInformation from './AccountInformation';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(4, 4, 0, 4),\r\n  },\r\n}));\r\n\r\nconst Profile = (props) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <PageContainer>\r\n      <Paper className={classes.root}>\r\n        <ProfileHeader />\r\n        <AccountInformation />\r\n      </Paper>\r\n    </PageContainer>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paperheader: {\r\n    textAlign: 'center',\r\n    color: 'white',\r\n    borderBottomLeftRadius: 0,\r\n    borderBottomRightRadius: 0,\r\n    borderTopLeftRadius: 4,\r\n    borderTopRightRadius: 4,\r\n  },\r\n  papercontent: {\r\n    borderBottomLeftRadius: 4,\r\n    borderBottomRightRadius: 4,\r\n    borderTopLeftRadius: 0,\r\n    borderTopRightRadius: 0,\r\n  },\r\n}));\r\n\r\nconst PaperWithHeader = (props) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid item xs={12} md={6}>\r\n      <Paper\r\n        className={classes.paperheader}\r\n        style={{ backgroundColor: props.headercolor }}\r\n      >\r\n        <Typography>{props.headertitle}</Typography>\r\n      </Paper>\r\n      <Paper\r\n        className={classes.papercontent}\r\n        style={props.height ? { height: props.height } : {}}\r\n      >\r\n        {props.children}\r\n      </Paper>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nPaperWithHeader.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default PaperWithHeader;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nconst calculateRGB = (percentage) => {\r\n  const shade = 0.8;\r\n  const color = Math.floor(\r\n    (percentage <= 50 ? percentage / 50 : (100 - percentage) / 50) * 255\r\n  );\r\n  const rgb = (percentage <= 50\r\n    ? [255, color, 0]\r\n    : [color, 255, 0]\r\n  ).map((color) => Math.round(color * shade));\r\n  return `rgb(${rgb.join(',')})`;\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: 20,\r\n    borderRadius: 5,\r\n    margin: theme.spacing(1),\r\n  },\r\n  bar: (props) => ({\r\n    borderRadius: 5,\r\n    backgroundColor: calculateRGB(props.value),\r\n  }),\r\n  colorPrimary: {\r\n    backgroundColor: '#DDDDDD',\r\n  },\r\n}));\r\n\r\nconst ProgessBar = (props) => {\r\n  const classes = useStyles(props);\r\n\r\n  return (\r\n    <Box>\r\n      <Typography>{props.title}</Typography>\r\n      <Box display=\"flex\" alignItems=\"center\">\r\n        <Box width=\"100%\" mr={1}>\r\n          <LinearProgress\r\n            variant=\"determinate\"\r\n            classes={{\r\n              root: classes.root,\r\n              colorPrimary: classes.colorPrimary,\r\n              bar: classes.bar,\r\n            }}\r\n            {...props}\r\n          />\r\n        </Box>\r\n        <Box minWidth={35}>\r\n          <Typography variant=\"body2\" color=\"textSecondary\">{`${Math.round(\r\n            props.value\r\n          )}%`}</Typography>\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nProgessBar.propTypes = {\r\n  value: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default ProgessBar;\r\n","import React from 'react';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport PaperWithHeader from '../_shared/PaperWithHeader';\r\nimport ProgressBar from '../_shared/ProgressBar';\r\nimport PageContainer from '../_shared/PageContainer';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  widget: {\r\n    padding: theme.spacing(3),\r\n  },\r\n  paper: {\r\n    borderBottomLeftRadius: 4,\r\n    borderBottomRightRadius: 4,\r\n    borderTopLeftRadius: 0,\r\n    borderTopRightRadius: 0,\r\n    height: 230,\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nconst columns = [\r\n  {\r\n    field: 'student',\r\n    headerName: 'Naam',\r\n    flex: 0.65,\r\n    valueGetter: (params) => params.row.name,\r\n  },\r\n  {\r\n    field: 'correctness',\r\n    headerName: 'Gem. correctheid',\r\n    flex: 0.5,\r\n    valueGetter: (params) => params.row.correctness,\r\n  },\r\n];\r\n\r\n// TODO: this is duplicate code! Make sure to create store for this and then call shared _utils.js\r\nconst convertCategoryToString = (category) => {\r\n  const conversion = {\r\n    learning_process: 'Leerproces',\r\n    recognizing_morphemes_sentence: 'Herkennen morfemen in een zin',\r\n    meaning_morphemes: 'Betekenis morfemen',\r\n    splitsing_morphemes: 'Splits morfemen',\r\n    create_morphemes_prefix: 'Creëren morfemen (voorvoegsel)',\r\n    background_morphemes: 'Alternatieve betekenis morfemen',\r\n    recognizing_morphemes_text: 'Herkennen morfemen in een tekst',\r\n    intuition: 'Intuïtie',\r\n    create_alternative_morphemes: 'Creëren alternatieve morfemen',\r\n    create_morphemes_suffix: 'Creëren morfemen (achtervoegsel)',\r\n    create_new_morphemes: 'Creëren nieuwe morfemen',\r\n  };\r\n\r\n  return conversion[category];\r\n};\r\n\r\nconst Insights = (props) => {\r\n  const { topResults, bottomResults, categories } = props;\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <PageContainer>\r\n      <Grid container spacing={2} className={classes.widget}>\r\n        <PaperWithHeader\r\n          headercolor={theme.widget.primary.main}\r\n          headertitle=\"Benedengemiddelde prestaties\"\r\n          height={370}\r\n        >\r\n          <DataGrid\r\n            pageSize={5}\r\n            rows={bottomResults}\r\n            columns={columns}\r\n            sortModel={[\r\n              {\r\n                field: 'correctness',\r\n                sort: 'asc',\r\n              },\r\n            ]}\r\n          />\r\n        </PaperWithHeader>\r\n        <PaperWithHeader\r\n          headercolor={theme.widget.primary.main}\r\n          headertitle=\"Bovengemiddelde prestaties\"\r\n          height={370}\r\n        >\r\n          <DataGrid\r\n            rows={topResults}\r\n            pageSize={5}\r\n            sortModel={[\r\n              {\r\n                field: 'correctness',\r\n                sort: 'desc',\r\n              },\r\n            ]}\r\n            columns={columns}\r\n          />\r\n        </PaperWithHeader>\r\n      </Grid>\r\n      <Grid container spacing={3} className={classes.widget}>\r\n        <PaperWithHeader\r\n          headercolor={theme.widget.secondary.main}\r\n          headertitle=\"Probleem categorieën\"\r\n        >\r\n          <Paper className={classes.paper}>\r\n            {categories.slice(0, 3).map((category, index) => (\r\n              <ProgressBar\r\n                key={category.key}\r\n                title={`${index + 1}. ${convertCategoryToString(category.key)}`}\r\n                value={category.correctness}\r\n              />\r\n            ))}\r\n          </Paper>\r\n        </PaperWithHeader>\r\n        <PaperWithHeader\r\n          headercolor={theme.widget.secondary.main}\r\n          headertitle=\"Top categorieën\"\r\n        >\r\n          <Paper className={classes.paper}>\r\n            {categories.slice(-3).map((category, index) => (\r\n              <ProgressBar\r\n                key={category.key}\r\n                title={`${index + 1}. ${convertCategoryToString(category.key)}`}\r\n                value={category.correctness}\r\n              />\r\n            ))}\r\n          </Paper>\r\n        </PaperWithHeader>\r\n      </Grid>\r\n    </PageContainer>\r\n  );\r\n};\r\n\r\nexport default Insights;\r\n","import React from 'react';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\r\n\r\nconst useStyles = makeStyles((theme) => ({}));\r\n\r\nconst Course = (props) => {\r\n  const { name, lessons } = props;\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n\r\n  const goToLesson = (id) =>\r\n    history.push(`${location.pathname}/lessons/${id}/lesson_insights`);\r\n\r\n  return (\r\n    <List\r\n      subheader={\r\n        <ListSubheader component=\"div\" id=\"nested-list-subheader\">\r\n          {name}\r\n        </ListSubheader>\r\n      }\r\n    >\r\n      {lessons.map((lesson) => (\r\n        <ListItem\r\n          component=\"div\"\r\n          alignItems=\"flex-start\"\r\n          key={lesson.id}\r\n          button\r\n          onClick={() => goToLesson(lesson.id)}\r\n        >\r\n          <ListItemText\r\n            primary={`${lesson.prefix} - ${lesson.name}`}\r\n            secondary={\r\n              <Typography\r\n                component=\"span\"\r\n                variant=\"body2\"\r\n                className={classes.inline}\r\n                color=\"textPrimary\"\r\n              ></Typography>\r\n            }\r\n          />\r\n          <ListItemSecondaryAction>\r\n            <IconButton\r\n              edge=\"end\"\r\n              aria-label=\"comments\"\r\n              onClick={() => goToLesson(lesson.id)}\r\n            >\r\n              <ArrowForwardIosIcon />\r\n            </IconButton>\r\n          </ListItemSecondaryAction>\r\n        </ListItem>\r\n      ))}\r\n    </List>\r\n  );\r\n};\r\n\r\nexport default Course;\r\n","import React, { useState } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Course from './Course';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  marginBottom: {\r\n    marginBottom: '1rem',\r\n  },\r\n  pagination: {\r\n    margin: '1rem auto',\r\n  },\r\n}));\r\n\r\nconst Courses = (props) => {\r\n  const { courses } = props;\r\n  const classes = useStyles();\r\n\r\n  const [courseFilterValue, setCourseFilterValue] = useState(null);\r\n  const [courseFilterInputValue, setCourseFilterInputValue] = useState('');\r\n\r\n  const onCourseFilterInputChange = (event, newInputValue) => {\r\n    setCourseFilterInputValue(newInputValue);\r\n  };\r\n\r\n  const onCourseFilterChange = (event, newValue) => {\r\n    setCourseFilterValue(newValue);\r\n  };\r\n\r\n  const shownCourses = courseFilterValue ? [courseFilterValue] : courses;\r\n\r\n  return (\r\n    <Grid container spacing={2}>\r\n      <Grid item xs={12}>\r\n        <Typography variant=\"h5\" className={classes.marginBottom}>\r\n          Lessen\r\n        </Typography>\r\n        <Autocomplete\r\n          value={courseFilterValue}\r\n          onChange={onCourseFilterChange}\r\n          inputValue={courseFilterInputValue}\r\n          onInputChange={onCourseFilterInputChange}\r\n          options={courses}\r\n          getOptionLabel={(option) => option.name}\r\n          renderInput={(params) => (\r\n            <TextField {...params} label=\"Les zoeken\" variant=\"outlined\" />\r\n          )}\r\n        />\r\n        <Divider style={{ margin: '1rem 0' }} />\r\n        <Paper>\r\n          <List className={classes.root}>\r\n            {shownCourses.map((course) => (\r\n              <Course key={course.id} {...course} />\r\n            ))}\r\n          </List>\r\n        </Paper>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Courses;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\n\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\r\nimport EmojiObjectsIcon from '@material-ui/icons/EmojiObjects';\r\n\r\nconst useStyles = makeStyles((theme) => ({}));\r\n\r\nconst getIcon = (isBottom) => {\r\n  return isBottom ? <EmojiObjectsIcon style={{ color: 'orange' }} /> : null;\r\n};\r\n\r\nconst Student = (props) => {\r\n  const { id, name, email, onClick, isBottom } = props;\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <ListItem\r\n      component=\"div\"\r\n      alignItems=\"flex-start\"\r\n      key={id}\r\n      button\r\n      style={{ alignItems: 'center' }}\r\n      onClick={onClick}\r\n    >\r\n      <ListItemIcon>{getIcon(isBottom)}</ListItemIcon>{' '}\r\n      <ListItemAvatar>\r\n        <Avatar alt=\"Travis Howard\" />\r\n      </ListItemAvatar>\r\n      <ListItemText\r\n        primary={name}\r\n        secondary={\r\n          <Typography\r\n            component=\"span\"\r\n            variant=\"body2\"\r\n            className={classes.inline}\r\n            color=\"textPrimary\"\r\n          >\r\n            {email || 'geen email'}\r\n          </Typography>\r\n        }\r\n      />\r\n      <ListItemSecondaryAction>\r\n        <IconButton edge=\"end\" aria-label=\"comments\">\r\n          <ArrowForwardIosIcon />\r\n        </IconButton>\r\n      </ListItemSecondaryAction>\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nexport default Student;\r\n","import React, { useState } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useHistory } from 'react-router-dom';\r\nimport List from '@material-ui/core/List';\r\nimport Student from './Student';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\n\r\nconst PAGE_SIZE = 20;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  marginTop: {\r\n    marginTop: '1rem',\r\n  },\r\n  marginBottom: {\r\n    marginBottom: '1rem',\r\n  },\r\n}));\r\n\r\nconst Students = (props) => {\r\n  const { students } = props;\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [page, setPage] = useState(0);\r\n  const [studentFilterValue, setStudentFilterValue] = useState(null);\r\n  const [studentFilterInputValue, setStudentFilterInputValue] = useState('');\r\n\r\n  const onStudentFilterInputChange = (event, newInputValue) => {\r\n    setStudentFilterInputValue(newInputValue);\r\n  };\r\n\r\n  const onStudentFilterChange = (event, newValue) => {\r\n    setStudentFilterValue(newValue);\r\n  };\r\n\r\n  const onChangePage = (event, value) => {\r\n    setPage(value - 1);\r\n  };\r\n\r\n  const start = page * PAGE_SIZE;\r\n\r\n  const shownStudents = studentFilterValue\r\n    ? [studentFilterValue]\r\n    : students.slice(start, start + PAGE_SIZE);\r\n\r\n  const onClick = (studentId) =>\r\n    history.push(`/dashboard/students/${studentId}`);\r\n\r\n  return (\r\n    <Grid container spacing={2}>\r\n      <Grid item xs={12}>\r\n        <Typography variant=\"h5\" className={classes.marginBottom}>\r\n          Leerlingen\r\n        </Typography>\r\n        <Autocomplete\r\n          value={studentFilterValue}\r\n          onChange={onStudentFilterChange}\r\n          inputValue={studentFilterInputValue}\r\n          onInputChange={onStudentFilterInputChange}\r\n          options={students}\r\n          getOptionLabel={(option) => option.name}\r\n          renderInput={(params) => (\r\n            <TextField {...params} label=\"Leerling zoeken\" variant=\"outlined\" />\r\n          )}\r\n        />\r\n        <Divider style={{ margin: '1rem 0' }} />\r\n        <Paper>\r\n          <List className={classes.root}>\r\n            {shownStudents.map((student) => (\r\n              <Student\r\n                key={student.id}\r\n                {...student}\r\n                isBottom={student.bottom}\r\n                onClick={() => onClick(student.id)}\r\n              />\r\n            ))}\r\n          </List>\r\n        </Paper>\r\n        {studentFilterValue ? null : (\r\n          <Pagination\r\n            className={classes.marginTop}\r\n            count={Math.ceil(students.length / PAGE_SIZE)}\r\n            color=\"primary\"\r\n            onChange={onChangePage}\r\n          />\r\n        )}\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Students;\r\n","const TabContent = (props) => {\r\n  const { value, index, children } = props;\r\n  if (value !== index) {\r\n    return null;\r\n  }\r\n  return children;\r\n};\r\n\r\nexport default TabContent;\r\n","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\r\nimport Link from '@material-ui/core/Link';\r\n\r\nconst CustomBreadcrumbs = (props) => {\r\n  const { crumbs } = props;\r\n  const history = useHistory();\r\n\r\n  const handleClick = (event, crumb) => {\r\n    event.preventDefault();\r\n    history.push(crumb.path);\r\n  };\r\n\r\n  return (\r\n    <Breadcrumbs aria-label=\"breadcrumb\" style={{ marginBottom: '1rem' }}>\r\n      <Typography variant=\"body2\">Locatie:</Typography>\r\n      {crumbs.map((crumb) => (\r\n        <Link\r\n          key={crumb.path}\r\n          component=\"button\"\r\n          color=\"inherit\"\r\n          onClick={(event) => handleClick(event, crumb)}\r\n        >\r\n          {crumb.name}\r\n        </Link>\r\n      ))}\r\n    </Breadcrumbs>\r\n  );\r\n};\r\n\r\nexport default CustomBreadcrumbs;\r\n","import React, { useState, useEffect, useCallback } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { useParams, useHistory, useLocation } from 'react-router-dom';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport MenuBookIcon from '@material-ui/icons/MenuBook';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\r\nimport service from '../../service';\r\nimport Insights from './Insights';\r\nimport Courses from './Courses';\r\nimport Students from './Students';\r\nimport PageContainer from '../_shared/PageContainer';\r\nimport TabContent from '../_shared/TabContent';\r\nimport Breadcrumbs from '../_shared/Breadcrumbs';\r\nimport socket from '../../socket';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  marginBottom: {\r\n    marginBottom: '1rem',\r\n  },\r\n  pagination: {\r\n    margin: '1rem auto',\r\n  },\r\n}));\r\n\r\nconst Lesson = (props) => {\r\n  const { crumbs, studentStore } = props;\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const params = useParams();\r\n  const location = useLocation();\r\n  const [loading, setLoading] = useState(false);\r\n  const [theClass, setTheClass] = useState([]);\r\n  const [courses, setCourses] = useState([]);\r\n  const [categories, setCategories] = useState([]);\r\n\r\n  const classId = params.classId;\r\n\r\n  const loadStudents = useCallback(async () => {\r\n    await studentStore.loadStudents({ classId });\r\n  }, [studentStore, classId]);\r\n\r\n  const loadClass = useCallback(async () => {\r\n    const response = await service.loadClass(params.classId);\r\n    if (!response) return;\r\n    setTheClass(response.body.data);\r\n  }, [params.classId]);\r\n\r\n  const loadCourses = useCallback(async () => {\r\n    const response = await service.loadCourses({ classId });\r\n    if (!response) return;\r\n    setCourses(response.body.data);\r\n  }, [classId]);\r\n\r\n  const loadLessonCategories = useCallback(async () => {\r\n    const response = await service.loadLessonCategories(classId);\r\n    if (!response) return;\r\n    setCategories(response.body.data);\r\n  }, [classId]);\r\n\r\n  const loadAll = useCallback(async () => {\r\n    setLoading(true);\r\n    const promises = [\r\n      loadStudents(),\r\n      loadCourses(),\r\n      loadClass(),\r\n      loadLessonCategories(),\r\n    ];\r\n    await Promise.all(promises);\r\n    setLoading(false);\r\n  }, [loadClass, loadStudents, loadCourses, loadLessonCategories]);\r\n\r\n  const onClickTab = (event, newTab) => {\r\n    const currentTab = params.classTab;\r\n    const newPath = location.pathname.replace(currentTab, newTab);\r\n    history.push(newPath);\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadAll();\r\n    socket.subscribe('newQuestionAttempts_temp', () => {\r\n      loadAll();\r\n    });\r\n  }, [loadAll]);\r\n\r\n  if (loading || studentStore.isLoading) {\r\n    return <CircularProgress />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <AppBar position=\"static\">\r\n        <Tabs value={params.classTab} onChange={onClickTab}>\r\n          <Tab\r\n            label=\"Inzicht (klas)\"\r\n            value=\"class_insights\"\r\n            icon={<EqualizerIcon />}\r\n          />\r\n          <Tab label=\"Lessen\" value=\"class_lessons\" icon={<MenuBookIcon />} />\r\n          <Tab\r\n            label=\"Leerlingen\"\r\n            value=\"class_students\"\r\n            icon={<PeopleIcon />}\r\n          />\r\n        </Tabs>\r\n      </AppBar>\r\n      <PageContainer>\r\n        <Breadcrumbs crumbs={crumbs} />\r\n        <Grid item xs={12}>\r\n          <Typography variant=\"h4\" className={classes.marginBottom}>\r\n            {theClass.name}\r\n          </Typography>\r\n        </Grid>\r\n        <TabContent index=\"class_insights\" value={params.classTab}>\r\n          <Insights\r\n            topResults={studentStore.topResults}\r\n            bottomResults={studentStore.bottomResults}\r\n            categories={categories}\r\n          />\r\n        </TabContent>\r\n        <TabContent index=\"class_lessons\" value={params.classTab}>\r\n          <Courses courses={courses} />\r\n        </TabContent>\r\n        <TabContent index=\"class_students\" value={params.classTab}>\r\n          <Students\r\n            students={studentStore.students}\r\n            bottomResults={studentStore.bottomResults}\r\n          />\r\n        </TabContent>\r\n      </PageContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default observer(Lesson);\r\n","import React, { useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Title from '../_shared/Title';\r\nimport { Doughnut } from 'react-chartjs-2';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n  fixedHeight: {\r\n    height: 400,\r\n  },\r\n}));\r\n\r\nconst CustomDoughnut = (props) => {\r\n  const { lessonAttempts, title } = props;\r\n  const classes = useStyles();\r\n  const { started, completed, notStarted } = lessonAttempts.reduce(\r\n    (acc, curr) => {\r\n      if (curr.isCompleted) {\r\n        acc.completed += 1;\r\n      } else if (curr.isStarted) {\r\n        acc.started += 1;\r\n      } else {\r\n        acc.notStarted += 1;\r\n      }\r\n      return acc;\r\n    },\r\n    { started: 0, completed: 0, notStarted: 0 }\r\n  );\r\n\r\n  useEffect(() => {}, []);\r\n\r\n  const data = {\r\n    datasets: [\r\n      {\r\n        data: [notStarted, started, completed],\r\n      },\r\n    ],\r\n    labels: ['Niet begonnen', 'Begonnen', 'Voltooid'],\r\n  };\r\n\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  return (\r\n    <Paper className={fixedHeightPaper}>\r\n      <Title>{title}</Title>\r\n      <Doughnut data={data} />\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default CustomDoughnut;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Title from '../_shared/Title';\r\nimport { Bar } from 'react-chartjs-2';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n  fixedHeight: {\r\n    height: 400,\r\n  },\r\n}));\r\n\r\nconst Histogram = (props) => {\r\n  const { lessonAttempts, title } = props;\r\n  const classes = useStyles();\r\n  const gradeDistribution = lessonAttempts.reduce(\r\n    (acc, curr) => {\r\n      const index = curr.performance;\r\n      acc[index - 1] += 1;\r\n      return acc;\r\n    },\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\r\n  );\r\n\r\n  const data = {\r\n    datasets: [\r\n      {\r\n        label: 'Aantal leerlingen',\r\n        data: gradeDistribution,\r\n      },\r\n    ],\r\n    labels: ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10'],\r\n  };\r\n\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  return (\r\n    <Paper className={fixedHeightPaper}>\r\n      <Title>{title}</Title>\r\n      <Bar data={data} />\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default Histogram;\r\n","import React, { useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { observer } from 'mobx-react-lite';\r\nimport Doughnut from './Doughnut';\r\nimport Histogram from './Histogram';\r\n\r\nconst calculateProgress = (questionGroupAttempts = []) => {\r\n  const total = questionGroupAttempts.length;\r\n  const completed = questionGroupAttempts.reduce((acc, curr) => {\r\n    if (curr.isCompleted) {\r\n      acc += 1;\r\n    }\r\n\r\n    return acc;\r\n  }, 0);\r\n\r\n  return total !== 0 ? Math.floor((completed / total) * 100) : 100;\r\n};\r\n\r\nconst columns = [\r\n  {\r\n    field: 'name',\r\n    headerName: 'Naam',\r\n    flex: 0.2,\r\n    valueGetter: (params) => params.row.student.name,\r\n  },\r\n  {\r\n    field: 'progress',\r\n    headerName: 'Voortgang (%)',\r\n    flex: 0.1,\r\n    valueGetter: (params) =>\r\n      calculateProgress(params.row.questionGroupAttempts),\r\n  },\r\n  {\r\n    field: 'duration',\r\n    headerName: 'Tijdsduur (minuten)',\r\n    flex: 0.15,\r\n  },\r\n  { field: 'correct', headerName: 'Correct', flex: 0.1, type: 'number' },\r\n  { field: 'incorrect', headerName: 'Incorrect', flex: 0.1, type: 'number' },\r\n  { field: 'performance', headerName: 'Prestatie', flex: 0.1, type: 'number' },\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  datagrid: {\r\n    marginTop: '1rem',\r\n    '& .MuiDataGrid-row:hover': {\r\n      cursor: 'pointer',\r\n    },\r\n  },\r\n}));\r\n\r\nconst InsightsAfter = (props) => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const params = useParams();\r\n\r\n  const { lessonStore } = props;\r\n\r\n  useEffect(() => {\r\n    lessonStore.loadLessonAttempts(params.lessonId);\r\n  }, [lessonStore, params.lessonId]);\r\n\r\n  if (lessonStore.isLoading) {\r\n    return <CircularProgress />;\r\n  }\r\n\r\n  const onClickStudent = (event) =>\r\n    history.push(`/dashboard/students/${event.row.student.id}`);\r\n\r\n  return (\r\n    <Grid container spacing={2}>\r\n      <Grid item xs={12} md={6}>\r\n        <Doughnut\r\n          lessonAttempts={lessonStore.lessonAttempts}\r\n          title=\"Algemene voortgang\"\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} md={6}>\r\n        <Histogram\r\n          lessonAttempts={lessonStore.lessonAttempts}\r\n          title=\"Cijfer verdeling\"\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Paper>\r\n          <DataGrid\r\n            className={classes.datagrid}\r\n            autoHeight\r\n            rows={lessonStore.lessonAttempts}\r\n            columns={columns}\r\n            pageSize={12}\r\n            onRowClick={onClickStudent}\r\n          />\r\n        </Paper>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default observer(InsightsAfter);\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport DoneRoundedIcon from '@material-ui/icons/DoneRounded';\r\nimport CloseRoundedIcon from '@material-ui/icons/CloseRounded';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport { useHistory } from 'react-router-dom';\r\nimport PageContainer from '../_shared/PageContainer';\r\nimport Title from '../_shared/Title';\r\n\r\nconst convertDateToReadableString = (date) => {\r\n  return `${date.substring(0, 10)} ${date.substring(11, 19)}`;\r\n};\r\n\r\nconst columns = [\r\n  {\r\n    field: 'updatedAt',\r\n    headerName: 'Datum',\r\n    flex: 0.2,\r\n  },\r\n  {\r\n    field: 'student',\r\n    headerName: 'Leerling',\r\n    flex: 0.2,\r\n  },\r\n  {\r\n    field: 'question',\r\n    headerName: 'Opdracht',\r\n    flex: 0.2,\r\n  },\r\n  {\r\n    field: 'isCompleted',\r\n    headerName: 'Voltooid',\r\n    flex: 0.2,\r\n    renderCell: (params) =>\r\n      params.row.isCompleted ? <DoneRoundedIcon /> : <CloseRoundedIcon />,\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  datagrid: {\r\n    marginTop: '1rem',\r\n    '& .MuiDataGrid-row:hover': {\r\n      cursor: 'pointer',\r\n    },\r\n  },\r\n}));\r\n\r\nconst getRows = (questionGroups) => {\r\n  const rows = [];\r\n  questionGroups.forEach((gp) => {\r\n    const index = gp.index + 1;\r\n\r\n    gp.questionGroupAttempts.forEach((qga) => {\r\n      rows.push({\r\n        id: qga.id,\r\n        updatedAt: convertDateToReadableString(qga.updatedAt),\r\n        student: qga.lessonAttempts.student.name,\r\n        question: index,\r\n        isCompleted: qga.isCompleted,\r\n        lessonAttempts: qga.lessonAttempts,\r\n      });\r\n    });\r\n  });\r\n\r\n  return rows;\r\n};\r\nconst Activity = (props) => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const { questionGroups } = props;\r\n\r\n  const onClickStudent = (event) =>\r\n    history.push(`/dashboard/students/${event.row.lessonAttempts.student.id}`);\r\n\r\n  return (\r\n    <PageContainer>\r\n      <Title>Recente leerlingen activiteit</Title>\r\n      <Grid item xs={12}>\r\n        <DataGrid\r\n          className={classes.datagrid}\r\n          autoHeight\r\n          rows={getRows(questionGroups)}\r\n          columns={columns}\r\n          pageSize={5}\r\n          onRowClick={onClickStudent}\r\n        />\r\n      </Grid>\r\n    </PageContainer>\r\n  );\r\n};\r\n\r\nexport default Activity;\r\n","import React, { useState, useEffect, useCallback } from 'react';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { observer } from 'mobx-react-lite';\r\nimport Activity from './Activity';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport PercentageDoughnut from '../_shared/PercentageDoughnut';\r\nimport service from '../../service';\r\nimport { create, all } from 'mathjs';\r\nimport PaperWithHeader from '../_shared/PaperWithHeader';\r\nimport ProgressBar from '../_shared/ProgressBar';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  widget: {\r\n    padding: theme.spacing(3),\r\n  },\r\n  paper: {\r\n    borderBottomLeftRadius: 4,\r\n    borderBottomRightRadius: 4,\r\n    borderTopLeftRadius: 0,\r\n    borderTopRightRadius: 0,\r\n    height: 230,\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nconst convertCategoryToString = (category) => {\r\n  const conversion = {\r\n    learning_process: 'Leerproces',\r\n    recognizing_morphemes_sentence: 'Herkennen morfemen in een zin',\r\n    meaning_morphemes: 'Betekenis morfemen',\r\n    splitsing_morphemes: 'Splits morfemen',\r\n    create_morphemes_prefix: 'Creëren morfemen (voorvoegsel)',\r\n    background_morphemes: 'Alternatieve betekenis morfemen',\r\n    recognizing_morphemes_text: 'Herkennen morfemen in een tekst',\r\n    intuition: 'Intuïtie',\r\n    create_alternative_morphemes: 'Creëren alternatieve morfemen',\r\n    create_morphemes_suffix: 'Creëren morfemen (achtervoegsel)',\r\n    create_new_morphemes: 'Creëren nieuwe morfemen',\r\n  };\r\n\r\n  return conversion[category];\r\n};\r\n\r\nconst InsightsDuring = (props) => {\r\n  const math = create(all);\r\n  const { questionGroupIds, lessonId, classId, questionStore, studentStore } =\r\n    props;\r\n  const theme = useTheme();\r\n  const classes = useStyles();\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [categories, setCategories] = useState([]);\r\n  let ratioCorrect = 0;\r\n  let ratioProgress = 0;\r\n  let averageTime = 0;\r\n\r\n  const getAverageValues = () => {\r\n    let totalCorrect = 0;\r\n    let totalNotComplete = 0;\r\n    let totalComplete = 0;\r\n    let totalScores = 0;\r\n    let totalTime = 0;\r\n    let acc = 0;\r\n    let elapsedTimes = [];\r\n\r\n    if (questionStore.questionGroups) {\r\n      questionStore.questionGroups.forEach((qg) => {\r\n        qg.questionGroupAttempts.forEach((qga) => {\r\n          if (qga.lessonAttempts.lessonId === lessonId) {\r\n            if (qga.isCompleted) {\r\n              totalComplete += 1;\r\n              totalCorrect += qga.correct;\r\n              totalScores += qga.correct + qga.incorrect + qga.missed;\r\n              elapsedTimes.push(qga.timeElapsedSeconds);\r\n            } else {\r\n              totalNotComplete += 1;\r\n            }\r\n          }\r\n        });\r\n      });\r\n\r\n      ratioCorrect = Math.round((totalCorrect / totalScores) * 100);\r\n      ratioProgress = Math.round(\r\n        (totalComplete / (totalComplete + totalNotComplete)) * 100\r\n      );\r\n\r\n      const sortedTimes = elapsedTimes.sort((a, b) => a - b);\r\n      const median = math.median(sortedTimes);\r\n      const std = math.std(sortedTimes);\r\n      const rangeMin = median - std;\r\n      const rangeMax = median + std;\r\n      for (const time in sortedTimes) {\r\n        if (time >= rangeMin && time <= rangeMax) {\r\n          totalTime += parseInt(time);\r\n          acc += 1;\r\n        }\r\n      }\r\n      averageTime = totalTime / acc;\r\n    }\r\n  };\r\n\r\n  const loadLessonCategories = useCallback(async () => {\r\n    const response = await service.loadLessonCategories(classId);\r\n    if (!response) return;\r\n    setCategories(response.body.data);\r\n  }, [classId]);\r\n\r\n  const loadStudents = useCallback(async () => {\r\n    await studentStore.loadStudents({ classId });\r\n  }, [studentStore, classId]);\r\n\r\n  const loadQuestionGroups = useCallback(async () => {\r\n    await questionStore.loadQuestionGroupsWithAttempts(questionGroupIds);\r\n  }, [questionStore, questionGroupIds]);\r\n\r\n  const loadAll = useCallback(async () => {\r\n    setLoading(true);\r\n    const promises = [\r\n      loadStudents(),\r\n      loadQuestionGroups(),\r\n      loadLessonCategories(),\r\n    ];\r\n    await Promise.all(promises);\r\n    setLoading(false);\r\n  }, [loadStudents, loadQuestionGroups, loadLessonCategories]);\r\n\r\n  useEffect(() => {\r\n    loadAll();\r\n  }, [loadAll]);\r\n\r\n  if (questionStore.isLoading || loading) {\r\n    return <CircularProgress />;\r\n  }\r\n\r\n  getAverageValues();\r\n\r\n  const convertToMinutes = (totalSeconds) => {\r\n    const minutes = Math.floor(totalSeconds / 60);\r\n    const seconds = totalSeconds % 60;\r\n    return `${minutes} min. ${seconds} sec.`;\r\n  };\r\n\r\n  const calculateRGB = (percentage) => {\r\n    const shade = 0.8;\r\n    const color = Math.floor(\r\n      (percentage <= 50 ? percentage / 50 : (100 - percentage) / 50) * 255\r\n    );\r\n    const rgb = (percentage <= 50 ? [255, color, 0] : [color, 255, 0]).map(\r\n      (color) => Math.round(color * shade)\r\n    );\r\n    return `rgb(${rgb.join(',')})`;\r\n  };\r\n\r\n  const getDoughnutData = (ratio) => {\r\n    return {\r\n      datasets: [\r\n        {\r\n          data: [100 - ratio, ratio],\r\n          backgroundColor: ['rgb(0, 0, 0, 0)', calculateRGB(ratio)],\r\n        },\r\n      ],\r\n    };\r\n  };\r\n\r\n  const getContent = () => {\r\n    return questionStore.questionGroups ? (\r\n      <Activity\r\n        questionGroups={questionStore.questionGroups}\r\n        lessonId={lessonId}\r\n        {...props}\r\n      />\r\n    ) : null;\r\n  };\r\n\r\n  const options = ({ color, text }) => ({\r\n    cutoutPercentage: 75,\r\n    tooltips: { enabled: false },\r\n    hover: { mode: null },\r\n    responsive: true,\r\n    elements: {\r\n      center: {\r\n        text,\r\n        color: color || '#FFFFFF',\r\n      },\r\n    },\r\n  });\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      {/* Average percentage statistics */}\r\n      <PercentageDoughnut\r\n        title=\"Gemiddelde correctheid\"\r\n        data={getDoughnutData(ratioCorrect)}\r\n        options={options({\r\n          color: 'black',\r\n          text: String(ratioCorrect) + '%',\r\n        })}\r\n      />\r\n      <PercentageDoughnut\r\n        title=\"Gemiddelde voortgang\"\r\n        data={getDoughnutData(ratioProgress)}\r\n        options={options({\r\n          color: 'black',\r\n          text: String(ratioProgress) + '%',\r\n        })}\r\n        titleColor={theme.widget.secondary.main}\r\n      />\r\n      <PercentageDoughnut\r\n        title=\"Gemiddelde tijdsduur\"\r\n        data={getDoughnutData({\r\n          averageTime,\r\n        })}\r\n        options={options({\r\n          color: 'black',\r\n          text: convertToMinutes(averageTime),\r\n        })}\r\n        titleColor={theme.widget.tertiary.main}\r\n      />\r\n      <Grid container spacing={3} className={classes.widget}>\r\n        <PaperWithHeader\r\n          headercolor={theme.widget.secondary.main}\r\n          headertitle=\"Top categorieën\"\r\n        >\r\n          <Paper className={classes.paper}>\r\n            {categories.slice(0, 3).map((category, index) => (\r\n              <ProgressBar\r\n                key={category.key}\r\n                title={`${index + 1}. ${convertCategoryToString(category.key)}`}\r\n                value={category.correctness}\r\n              />\r\n            ))}\r\n          </Paper>\r\n        </PaperWithHeader>\r\n        <PaperWithHeader\r\n          headercolor={theme.widget.secondary.main}\r\n          headertitle=\"Probleem categorieën\"\r\n        >\r\n          <Paper className={classes.paper}>\r\n            {categories.slice(-3).map((category, index) => (\r\n              <ProgressBar\r\n                key={category.key}\r\n                title={`${index + 1}. ${convertCategoryToString(category.key)}`}\r\n                value={category.correctness}\r\n              />\r\n            ))}\r\n          </Paper>\r\n        </PaperWithHeader>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Paper>{getContent()}</Paper>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default observer(InsightsDuring);\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport { observer } from 'mobx-react-lite';\r\n\r\nimport InsightsAfter from './InsightsAfter';\r\nimport InsightsDuring from './InsightsDuring';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst Lesson = (props) => {\r\n  const [showCategory, setShowCategory] = useState('after');\r\n  const { lessonStore } = props;\r\n  const params = useParams();\r\n\r\n  useEffect(() => {\r\n    lessonStore.loadLesson(params.lessonId);\r\n  }, [lessonStore, params.lessonId]);\r\n\r\n  if (lessonStore.isLoading) {\r\n    return <CircularProgress />;\r\n  }\r\n  const changeCategory = () => {\r\n    setShowCategory(showCategory === 'during' ? 'after' : 'during');\r\n  };\r\n\r\n  const getQuestionGroupIds = () => {\r\n    if (lessonStore.lesson) {\r\n      const ids = lessonStore.lesson.questionGroups.map((e) => e.id);\r\n      return ids;\r\n    }\r\n  };\r\n\r\n  const getContent = () => {\r\n    return showCategory === 'after' ? (\r\n      <InsightsAfter {...props} />\r\n    ) : (\r\n      <InsightsDuring\r\n        questionGroupIds={getQuestionGroupIds()}\r\n        lessonId={params.lessonId}\r\n        classId={params.classId}\r\n        {...props}\r\n      />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Grid container spacing={2}>\r\n      <Grid\r\n        container\r\n        spacing={2}\r\n        style={{ justifyContent: 'center', display: 'flex' }}\r\n      >\r\n        <Grid\r\n          item\r\n          xs={4}\r\n          style={{\r\n            display: 'flex',\r\n            direction: 'row',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            paddingBottom: '2rem',\r\n            paddingTop: '2rem',\r\n          }}\r\n        >\r\n          <Grid item style={{ paddingRight: '1rem' }}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color={showCategory === 'during' ? 'primary' : 'default'}\r\n              onClick={changeCategory}\r\n            >\r\n              Tijdens de les\r\n            </Button>\r\n          </Grid>\r\n          <Grid item style={{ paddingLeft: '1rem' }}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color={showCategory === 'after' ? 'primary' : 'default'}\r\n              onClick={changeCategory}\r\n            >\r\n              Achteraf\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        {getContent()}\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default observer(Lesson);\r\n","import React, { useEffect } from 'react';\r\nimport { useParams, useHistory, useLocation } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\n\r\nconst typeLabels = {\r\n  open: 'Open',\r\n  clickTheRightWords: 'Selecteer het correcte antwoord',\r\n  multipleChoice: 'Meerkeuze',\r\n  divideTheWord: 'Verdeel het woord',\r\n  combineAndFillInTheBlanks: 'Combineer en vul in',\r\n};\r\n\r\nconst columns = [\r\n  {\r\n    field: 'name',\r\n    headerName: 'Naam',\r\n\r\n    flex: 0.2,\r\n  },\r\n  {\r\n    field: 'index',\r\n    headerName: 'Opdrachtnummer',\r\n    flex: 0.1,\r\n    type: 'number',\r\n    valueGetter: (params) => params.value + 1,\r\n  },\r\n  {\r\n    field: 'questionGroups',\r\n    headerName: 'Vragen',\r\n    flex: 0.1,\r\n    valueGetter: (params) => params.row.questions.length,\r\n    type: 'number',\r\n  },\r\n  {\r\n    field: 'type',\r\n    headerName: 'Type',\r\n    flex: 0.2,\r\n    valueGetter: (params) => {\r\n      const type = params.row.questions[0].type;\r\n      const label = typeLabels[type] || type;\r\n      return label;\r\n    },\r\n  },\r\n  {\r\n    field: 'averageScore',\r\n    headerName: 'Gem. score (%)',\r\n    flex: 0.1,\r\n    type: 'number',\r\n  },\r\n  {\r\n    field: 'averageElapsedTime',\r\n    headerName: 'Gem. tijdsduur (sec)',\r\n    flex: 0.1,\r\n    type: 'number',\r\n  },\r\n  {\r\n    field: 'completions',\r\n    headerName: 'Klaar',\r\n    flex: 0.1,\r\n    type: 'number',\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  datagrid: {\r\n    marginTop: '1rem',\r\n    '& .MuiDataGrid-row:hover': {\r\n      cursor: 'pointer',\r\n    },\r\n  },\r\n}));\r\n\r\nconst LessonContent = (props) => {\r\n  const { lessonStore } = props;\r\n  const location = useLocation();\r\n  const classes = useStyles();\r\n  const params = useParams();\r\n  const history = useHistory();\r\n\r\n  const onClickStudent = (event) =>\r\n    history.push(\r\n      `${location.pathname}/questionGroups/${event.row.id}/question_group_insights`\r\n    );\r\n\r\n  useEffect(() => {\r\n    lessonStore.loadLesson(params.lessonId);\r\n  }, [lessonStore, params.lessonId]);\r\n\r\n  if (lessonStore.isLoading || !lessonStore.lesson) {\r\n    return <CircularProgress />;\r\n  }\r\n\r\n  return (\r\n    <DataGrid\r\n      className={classes.datagrid}\r\n      autoHeight\r\n      rows={lessonStore.lesson.questionGroups}\r\n      columns={columns}\r\n      pageSize={12}\r\n      onRowClick={onClickStudent}\r\n      sortModel={[\r\n        {\r\n          field: 'index',\r\n          sort: 'asc',\r\n        },\r\n      ]}\r\n    />\r\n  );\r\n};\r\n\r\nexport default observer(LessonContent);\r\n","import React from 'react';\r\nimport { useParams, useHistory, useLocation } from 'react-router-dom';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { observer } from 'mobx-react-lite';\r\nimport Insights from './Insights';\r\nimport Questions from './LessonContent';\r\nimport TabContent from '../_shared/TabContent';\r\nimport Breadcrumbs from '../_shared/Breadcrumbs';\r\nimport PageContainer from '../_shared/PageContainer';\r\n\r\nconst Lesson = (props) => {\r\n  const { crumbs } = props;\r\n  const history = useHistory();\r\n  const params = useParams();\r\n  const location = useLocation();\r\n\r\n  const onClickTab = (event, newTab) => {\r\n    const currentTab = params.lessonTab;\r\n    const newPath = location.pathname.replace(currentTab, newTab);\r\n    history.push(newPath);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <AppBar position=\"static\">\r\n        <Tabs value={params.lessonTab} onChange={onClickTab}>\r\n          <Tab\r\n            label=\"Inzicht (les)\"\r\n            value=\"lesson_insights\"\r\n            icon={<EqualizerIcon />}\r\n          />\r\n          <Tab\r\n            label=\"Opdrachten\"\r\n            value=\"lesson_questions\"\r\n            icon={<EditIcon />}\r\n          />\r\n        </Tabs>\r\n      </AppBar>\r\n\r\n      <PageContainer maxWidth=\"lg\">\r\n        <Breadcrumbs crumbs={crumbs} />\r\n        <TabContent index=\"lesson_insights\" value={params.lessonTab}>\r\n          <Insights {...props} />\r\n        </TabContent>\r\n        <TabContent index=\"lesson_questions\" value={params.lessonTab}>\r\n          <Questions {...props} />\r\n        </TabContent>\r\n      </PageContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default observer(Lesson);\r\n","import React from 'react';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\r\n\r\nconst Lesson = (props) => {\r\n  const { name, id, prefix } = props;\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const onClick = () => history.push(`${location.pathname}/lessons/${id}`);\r\n\r\n  return (\r\n    <ListItem\r\n      component=\"div\"\r\n      alignItems=\"flex-start\"\r\n      key={id}\r\n      button\r\n      onClick={onClick}\r\n    >\r\n      <ListItemText primary={`${prefix} - ${name}`} />\r\n      <ListItemSecondaryAction>\r\n        <IconButton edge=\"end\" aria-label=\"comments\">\r\n          <ArrowForwardIosIcon />\r\n        </IconButton>\r\n      </ListItemSecondaryAction>\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nexport default Lesson;\r\n","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport Lesson from './Lesson';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  fullWidth: {\r\n    width: '100%',\r\n  },\r\n}));\r\n\r\nconst Course = (props) => {\r\n  const { name, id, lessons } = props;\r\n  const classes = useStyles();\r\n  const [expanded, setExpanded] = useState(true);\r\n  const onChange = () => setExpanded(!expanded);\r\n  return (\r\n    <ListItem component=\"div\" alignItems=\"flex-start\" key={id}>\r\n      <Accordion\r\n        className={classes.fullWidth}\r\n        TransitionProps={{ unmountOnExit: true }}\r\n        expanded={expanded}\r\n        onChange={onChange}\r\n      >\r\n        <AccordionSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel1a-content\"\r\n          id=\"panel1a-header\"\r\n        >\r\n          <Typography>{name}</Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n          <List\r\n            subheader={\r\n              <ListSubheader component=\"div\" id=\"nested-list-subheader\">\r\n                Lessen\r\n              </ListSubheader>\r\n            }\r\n            style={{ width: '100%' }}\r\n          >\r\n            {lessons.map((lesson) => (\r\n              <Lesson key={lesson.id} {...lesson} />\r\n            ))}\r\n          </List>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nexport default Course;\r\n","import React from 'react';\r\nimport List from '@material-ui/core/List';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport Course from './Course';\r\n\r\nconst Courses = (props) => {\r\n  const { courses } = props;\r\n  return (\r\n    <List\r\n      subheader={\r\n        <ListSubheader component=\"div\" id=\"nested-list-subheader\">\r\n          Cursussen\r\n        </ListSubheader>\r\n      }\r\n    >\r\n      {courses.map((course) => (\r\n        <Course key={course.id} {...course} />\r\n      ))}\r\n    </List>\r\n  );\r\n};\r\n\r\nexport default Courses;\r\n","import React from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  title: {\r\n    textAlign: 'center',\r\n    background: 'black',\r\n    color: 'white',\r\n    alignItems: 'baseline',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n  },\r\n}));\r\n\r\nconst ProfileHeader = (props) => {\r\n  const { name } = props;\r\n  const classes = useStyles();\r\n  return (\r\n    <Paper className={classes.title}>\r\n      <Typography style={{ variant: 'h5' }}> Naam Leerling: </Typography>\r\n      <Typography style={{ variant: 'h6', marginLeft: '10%' }}>\r\n        {name}\r\n      </Typography>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default ProfileHeader;\r\n","import React from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport RestoreIcon from '@material-ui/icons/Restore';\r\n\r\nconst createRow = (courseName, lessonName, category) => ({\r\n  courseName,\r\n  lessonName,\r\n  category,\r\n});\r\n\r\nconst getIcon = (category) => {\r\n  switch (category) {\r\n    case 'progress':\r\n      return <RestoreIcon style={{ color: 'orange' }} />;\r\n    case 'completed':\r\n      return <DoneIcon style={{ color: 'green' }} />;\r\n    default:\r\n      return <ClearIcon style={{ color: 'red' }} />;\r\n  }\r\n};\r\n\r\nconst getRows = (courses) => {\r\n  const rows = [];\r\n\r\n  courses.forEach((course) => {\r\n    const courseName = course.name;\r\n    course.lessons.forEach((lesson) => {\r\n      const lessonName = lesson.name;\r\n      lesson.lessonAttempts.forEach((lessonAttempt) => {\r\n        if (lessonAttempt.isStarted && lessonAttempt.isCompleted) {\r\n          rows.push(createRow(courseName, lessonName, 'completed'));\r\n        } else if (lessonAttempt.isStarted && !lessonAttempt.isCompleted) {\r\n          rows.push(createRow(courseName, lessonName, 'progress'));\r\n        } else {\r\n          rows.push(createRow(courseName, lessonName, 'notstarted'));\r\n        }\r\n      });\r\n    });\r\n  });\r\n  return rows;\r\n};\r\n\r\nconst Progress = (props) => {\r\n  const { courses } = props;\r\n  const rows = getRows(courses);\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table aria-label=\"spanning table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell align=\"left\">Cursus</TableCell>\r\n            <TableCell align=\"left\">Les</TableCell>\r\n            <TableCell align=\"left\">Voortgang</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map((row, index) => (\r\n            <TableRow key={index}>\r\n              {index === 0 ? (\r\n                <TableCell rowSpan={rows.length}> {row.courseName}</TableCell>\r\n              ) : null}\r\n\r\n              <TableCell align=\"left\">{row.lessonName}</TableCell>\r\n              <TableCell> {getIcon(row.category)} </TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\nexport default Progress;\r\n","import React, { useState, useEffect, useCallback } from 'react';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { useParams } from 'react-router-dom';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport PageContainer from '../_shared/PageContainer';\r\nimport service from '../../service';\r\nimport Courses from './Courses';\r\nimport ProfileHeader from './ProfileHeader';\r\nimport Progress from './Progress';\r\nimport PaperWithHeader from '../_shared/PaperWithHeader';\r\nimport ProgressBar from '../_shared/ProgressBar';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  widget: {\r\n    height: 230,\r\n    padding: theme.spacing(3),\r\n    marginBottom: theme.spacing(12),\r\n  },\r\n  paper: {\r\n    borderBottomLeftRadius: 4,\r\n    borderBottomRightRadius: 4,\r\n    borderTopLeftRadius: 0,\r\n    borderTopRightRadius: 0,\r\n    height: 230,\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\n// TODO: this is duplicate code! Make sure to create store for this and then call shared _utils.js\r\nconst convertCategoryToString = (category) => {\r\n  const conversion = {\r\n    learning_process: 'Leerproces',\r\n    recognizing_morphemes_sentence: 'Herkennen morfemen in een zin',\r\n    meaning_morphemes: 'Betekenis morfemen',\r\n    splitsing_morphemes: 'Splits morfemen',\r\n    create_morphemes_prefix: 'Creëren morfemen (voorvoegsel)',\r\n    background_morphemes: 'Alternatieve betekenis morfemen',\r\n    recognizing_morphemes_text: 'Herkennen morfemen in een tekst',\r\n    intuition: 'Intuïtie',\r\n    create_alternative_morphemes: 'Creëren alternatieve morfemen',\r\n    create_morphemes_suffix: 'Creëren morfemen (achtervoegsel)',\r\n    create_new_morphemes: 'Creëren nieuwe morfemen',\r\n  };\r\n\r\n  return conversion[category];\r\n};\r\n\r\nconst Student = (props) => {\r\n  const classes = useStyles();\r\n  const params = useParams();\r\n  const theme = useTheme();\r\n  const [loading, setLoading] = useState(false);\r\n  const [student, setStudent] = useState([]);\r\n  const [courses, setCourses] = useState([]);\r\n  const [categories, setCategories] = useState([]);\r\n\r\n  const loadCourses = useCallback(async () => {\r\n    const studentId = params.studentId;\r\n    const response = await service.loadCourses({ studentId });\r\n    if (!response) {\r\n      return;\r\n    }\r\n    setCourses(response.body.data);\r\n  }, [params.studentId]);\r\n\r\n  const loadStudent = useCallback(async () => {\r\n    const studentId = params.studentId;\r\n    const response = await service.loadStudent(studentId);\r\n    if (!response) {\r\n      return;\r\n    }\r\n    setStudent(response.body.data);\r\n  }, [params.studentId]);\r\n\r\n  const loadStudentCategories = useCallback(async () => {\r\n    const studentId = params.studentId;\r\n    const response = await service.loadStudentCategories(studentId);\r\n    if (!response) {\r\n      return;\r\n    }\r\n    setCategories(response.body.data);\r\n  }, [params.studentId]);\r\n\r\n  const loadAll = useCallback(async () => {\r\n    setLoading(true);\r\n\r\n    const promises = [loadCourses(), loadStudent(), loadStudentCategories()];\r\n    await Promise.all(promises);\r\n\r\n    setLoading(false);\r\n  }, [loadCourses, loadStudent, loadStudentCategories]);\r\n\r\n  useEffect(() => {\r\n    loadAll();\r\n  }, [loadAll]);\r\n\r\n  if (loading) {\r\n    return <CircularProgress />;\r\n  }\r\n\r\n  return (\r\n    <PageContainer>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12}>\r\n          <ProfileHeader {...student} />\r\n        </Grid>\r\n        <Grid container spacing={3} className={classes.widget}>\r\n          <Grid item xs={12}>\r\n            <Progress courses={courses} />\r\n          </Grid>\r\n\r\n          <PaperWithHeader\r\n            headercolor={theme.widget.secondary.main}\r\n            headertitle=\"Top categorieën\"\r\n          >\r\n            <Paper className={classes.paper}>\r\n              {categories.slice(0, 3).map((category, index) => (\r\n                <ProgressBar\r\n                  key={category.key}\r\n                  title={`${index + 1}. ${convertCategoryToString(\r\n                    category.key\r\n                  )}`}\r\n                  value={category.correctness}\r\n                />\r\n              ))}\r\n            </Paper>\r\n          </PaperWithHeader>\r\n          <PaperWithHeader\r\n            headercolor={theme.widget.secondary.main}\r\n            headertitle=\"Probleem categorieën\"\r\n          >\r\n            <Paper className={classes.paper}>\r\n              {categories.slice(-3).map((category, index) => (\r\n                <ProgressBar\r\n                  key={category.key}\r\n                  title={`${index + 1}. ${convertCategoryToString(\r\n                    category.key\r\n                  )}`}\r\n                  value={category.correctness}\r\n                />\r\n              ))}\r\n            </Paper>\r\n          </PaperWithHeader>\r\n          <Grid item xs={12}>\r\n            <Courses courses={courses} />\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </PageContainer>\r\n  );\r\n};\r\n\r\nexport default observer(Student);\r\n","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Modal from '@material-ui/core/Modal';\r\n\r\nimport Title from '../_shared/Title';\r\n\r\nconst convertDateToReadableString = (date) => {\r\n  return `${date.substring(0, 10)} ${date.substring(11, 19)}`;\r\n};\r\n\r\nconst columns = [\r\n  {\r\n    field: 'updatedAt',\r\n    headerName: 'Datum',\r\n    flex: 0.2,\r\n    renderCell: (params) => convertDateToReadableString(params.row.updatedAt),\r\n  },\r\n  {\r\n    field: 'questionGroup',\r\n    headerName: 'Vraag groep',\r\n    flex: 0.4,\r\n    valueGetter: (params) => params.row.question.questions.name,\r\n  },\r\n  {\r\n    field: 'questionGroupIndex',\r\n    headerName: 'Vraag groep index',\r\n    flex: 0.2,\r\n    valueGetter: (params) => params.row.question.questions.index + 1,\r\n  },\r\n  {\r\n    field: 'question',\r\n    headerName: 'Vraag nummer',\r\n    flex: 0.2,\r\n    valueGetter: (params) => params.row.question.index + 1,\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    position: 'absolute',\r\n    width: 400,\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n  },\r\n  datagrid: {\r\n    marginTop: '1rem',\r\n    '& .MuiDataGrid-row:hover': {\r\n      cursor: 'pointer',\r\n    },\r\n  },\r\n}));\r\n\r\nconst QuestionAttempts = (props) => {\r\n  const classes = useStyles();\r\n  const { questionAttempts } = props;\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const [modalContent, setModalContent] = useState({});\r\n\r\n  const handleModalOpen = (event) => {\r\n    setModalContent(event.row);\r\n    setModalOpen(true);\r\n  };\r\n\r\n  const handleModalClose = () => {\r\n    setModalOpen(false);\r\n    setModalContent({});\r\n  };\r\n\r\n  const Body = React.forwardRef((props, ref) => (\r\n    <div {...props} className={classes.paper} ref={ref}>\r\n      <h2 id=\"simple-modal-title\">Antwoord</h2>\r\n      <p id=\"simple-modal-description\">{JSON.stringify(modalContent.answer)}</p>\r\n    </div>\r\n  ));\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Modal\r\n        open={modalOpen}\r\n        onClose={handleModalClose}\r\n        aria-labelledby=\"simple-modal-title\"\r\n        aria-describedby=\"simple-modal-description\"\r\n      >\r\n        <Body />\r\n      </Modal>\r\n      <Title>Antwoorden</Title>\r\n      <Grid item xs={12}>\r\n        <DataGrid\r\n          className={classes.datagrid}\r\n          autoHeight\r\n          rows={questionAttempts}\r\n          columns={columns}\r\n          pageSize={5}\r\n          onRowClick={(event) => handleModalOpen(event)}\r\n        />\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default QuestionAttempts;\r\n","import React, { useEffect, useCallback } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\n// import BarGraph from './BarGraph'; // TODO (working on this): IF we want to implement all question types\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport PageContainer from '../_shared/PageContainer';\r\nimport QuestionAttempts from './QuestionAttempts';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n}));\r\n\r\nconst StudentLesson = (props) => {\r\n  const { questionStore } = props;\r\n  const classes = useStyles();\r\n  const params = useParams();\r\n\r\n  const loadAll = useCallback(async () => {\r\n    await questionStore.loadQuestionAttemptsWithInfo(\r\n      params.studentId,\r\n      params.lessonId\r\n    );\r\n  }, [questionStore, params.studentId, params.lessonId]);\r\n\r\n  useEffect(() => {\r\n    loadAll();\r\n  }, [loadAll]);\r\n\r\n  if (questionStore.isLoading) {\r\n    return <CircularProgress />;\r\n  }\r\n\r\n  return (\r\n    <PageContainer>\r\n      {/* / TODO (working on this): IF we want to implement all question types\r\n      <Grid item xs={12} md={12}>\r\n        <BarGraph\r\n          questionAttempts={questionStore.questionAttempts}\r\n          title=\"Correctheid verdeling per vraag\"\r\n        />\r\n      </Grid> */}\r\n      <Grid item xs={12}>\r\n        <Paper className={classes.paper}>\r\n          <QuestionAttempts questionAttempts={questionStore.questionAttempts} />\r\n        </Paper>\r\n      </Grid>\r\n    </PageContainer>\r\n  );\r\n};\r\n\r\nexport default StudentLesson;\r\n","import React from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport Title from '../_shared/Title';\r\n\r\nconst calculateDistribution = (\r\n  questionGroupAttempts,\r\n  amountQuestions,\r\n  questionIds\r\n) => {\r\n  const correctPerQuestion = Array(amountQuestions).fill(0);\r\n  const incorrectPerQuestion = Array(amountQuestions).fill(0);\r\n  const missedPerQuestion = Array(amountQuestions).fill(0);\r\n\r\n  questionGroupAttempts.forEach((questionGroupAttempt) => {\r\n    if (questionGroupAttempt.isCompleted) {\r\n      questionGroupAttempt.questionAttempts.forEach((questionAttempt) => {\r\n        const indexCorrect = questionIds.findIndex(\r\n          (el) => el === questionAttempt.questionId && questionAttempt.correct\r\n        );\r\n        correctPerQuestion[indexCorrect] += 1;\r\n        const indexIncorrect = questionIds.findIndex(\r\n          (el) => el === questionAttempt.questionId && questionAttempt.incorrect\r\n        );\r\n        incorrectPerQuestion[indexIncorrect] += 1;\r\n        const indexMissed = questionIds.findIndex(\r\n          (el) => el === questionAttempt.questionId && questionAttempt.missed\r\n        );\r\n        missedPerQuestion[indexMissed] += 1;\r\n      });\r\n    }\r\n  });\r\n  return [correctPerQuestion, incorrectPerQuestion, missedPerQuestion];\r\n};\r\n\r\nconst getLabels = (amountQuestions) => {\r\n  const labels = [];\r\n  for (let i = 0; i < amountQuestions; i++) {\r\n    labels.push('Vraag ' + parseInt(i + 1));\r\n  }\r\n  return labels;\r\n};\r\n\r\nconst BarGraph = (props) => {\r\n  const { questionGroup, title } = props;\r\n  const amountQuestions = questionGroup.questions.length;\r\n  const questionIds = [];\r\n  questionGroup.questions.forEach((question) => {\r\n    questionIds.push(question.id);\r\n  });\r\n\r\n  const distributions = calculateDistribution(\r\n    questionGroup.questionGroupAttempts,\r\n    amountQuestions,\r\n    questionIds\r\n  );\r\n  const data = {\r\n    datasets: [\r\n      {\r\n        label: 'Aantal juiste antwoorden',\r\n        data: distributions[0],\r\n      },\r\n      {\r\n        label: 'Aantal incorrect antwoorden',\r\n        data: distributions[1],\r\n      },\r\n      {\r\n        label: 'Aantal gemiste antwoorden',\r\n        data: distributions[2],\r\n      },\r\n    ],\r\n    labels: getLabels(amountQuestions),\r\n  };\r\n\r\n  return (\r\n    <Paper>\r\n      <Title>{title}</Title>\r\n      <Bar data={data} />\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default BarGraph;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Title from '../_shared/Title';\r\nimport { Doughnut } from 'react-chartjs-2';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    textAlign: 'center',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n  fixedHeight: {\r\n    height: 400,\r\n  },\r\n}));\r\n\r\nconst CustomDoughnut = (props) => {\r\n  const { questionGroupAttempts, title } = props;\r\n  const classes = useStyles();\r\n  let correct = 0;\r\n  let incorrect = 0;\r\n  let missed = 0;\r\n  questionGroupAttempts.forEach((qga) => {\r\n    qga.questionAttempts.forEach((qa) => {\r\n      correct += qa.correct;\r\n      incorrect += qa.incorrect;\r\n      missed += qa.missed;\r\n    });\r\n  });\r\n\r\n  const data = {\r\n    datasets: [\r\n      {\r\n        data: [correct, incorrect, missed],\r\n      },\r\n    ],\r\n    labels: ['Correct', 'Incorrect', 'Gemist'],\r\n  };\r\n\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  return (\r\n    <Paper className={fixedHeightPaper}>\r\n      <Title>{title}</Title>\r\n      <Doughnut data={data} />\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default CustomDoughnut;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Typography } from '@material-ui/core';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport PropTypes from 'prop-types';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    height: 180,\r\n    display: 'flex',\r\n    width: 600,\r\n  },\r\n  widget: {\r\n    height: '100%',\r\n    color: 'white',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    textAlign: 'center',\r\n\r\n    padding: theme.spacing(2),\r\n  },\r\n  widgetTop: {\r\n    fontWeight: 400,\r\n    padding: theme.spacing(2),\r\n  },\r\n  widgetBottom: {\r\n    fontWeight: 100,\r\n    padding: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst Tile = (props) => {\r\n  const { questionGroup, title, number, color } = props;\r\n  const classes = useStyles();\r\n  const amountLessons = questionGroup.questions.length;\r\n  const averageElapsedTime = questionGroup.averageElapsedTime;\r\n  const value = number === 1 ? amountLessons : averageElapsedTime + ' sec.';\r\n\r\n  return (\r\n    <Card style={{ backgroundColor: color }} className={classes.card}>\r\n      <CardActionArea onClick={props.onClick}>\r\n        <CardContent>\r\n          <Grid container spacing={1} className={classes.widget}>\r\n            <Typography variant=\"h5\" className={classes.widgetTop}>\r\n              {title}\r\n            </Typography>\r\n            <Typography variant=\"h5\" className={classes.widgetBottom}>\r\n              {value}\r\n            </Typography>\r\n          </Grid>\r\n        </CardContent>\r\n      </CardActionArea>\r\n    </Card>\r\n  );\r\n};\r\n\r\nTile.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Tile;\r\n","import React, { useEffect, useCallback } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport BarGraph from './BarGraph';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Doughnut from './Doughnut';\r\nimport Tile from './Tile';\r\nimport { observer } from 'mobx-react-lite';\r\n\r\nconst Insights = (props) => {\r\n  const { questionStore } = props;\r\n  const theme = useTheme();\r\n  const params = useParams();\r\n\r\n  const loadAll = useCallback(async () => {\r\n    await questionStore.loadQuestionGroupsWithAttempts(params.questionGroupId);\r\n  }, [questionStore, params.questionGroupId]);\r\n\r\n  useEffect(() => {\r\n    loadAll();\r\n  }, [loadAll]);\r\n\r\n  if (questionStore.isLoading || !questionStore.questionGroups) {\r\n    return <CircularProgress />;\r\n  }\r\n\r\n  return (\r\n    <Grid container spacing={2}>\r\n      <Grid item xs={12} md={6}>\r\n        <Doughnut\r\n          questionGroupAttempts={\r\n            questionStore.questionGroups[0].questionGroupAttempts\r\n          }\r\n          title=\"Correctheid verdeling van de vragen\"\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} md={6} style={{ padding: '1rem' }}>\r\n        <Tile\r\n          questionGroup={questionStore.questionGroups[0]}\r\n          title=\"Totaal aantal vragen: \"\r\n          number={1}\r\n          color={theme.widget.tertiary.main}\r\n        />\r\n        <Tile\r\n          questionGroup={questionStore.questionGroups[0]}\r\n          title=\"Gemiddelde tijdsduur vragengroep: \"\r\n          number={2}\r\n          color={theme.widget.secondary.main}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} md={12}>\r\n        <BarGraph\r\n          questionGroup={questionStore.questionGroups[0]}\r\n          title=\"Correctheid verdeling per vraag\"\r\n        />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default observer(Insights);\r\n","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport CancelRoundedIcon from '@material-ui/icons/CancelRounded';\r\nimport ClearRoundedIcon from '@material-ui/icons/ClearRounded';\r\nimport CheckCircleRoundedIcon from '@material-ui/icons/CheckCircleRounded';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Popover from '@material-ui/core/Popover';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  fullWidth: {\r\n    width: '100%',\r\n  },\r\n  popover: {\r\n    pointerEvents: 'none',\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst RemoveButton = ({ onClick }) => (\r\n  <label htmlFor=\"icon-button-file\">\r\n    <IconButton\r\n      color=\"primary\"\r\n      aria-label=\"upload picture\"\r\n      component=\"span\"\r\n      onClick={onClick}\r\n    >\r\n      <ClearRoundedIcon />\r\n    </IconButton>\r\n  </label>\r\n);\r\n\r\nconst MultipleChoice = (props) => {\r\n  const classes = useStyles();\r\n  const { id, instruction, data: originalData, save, setIsBlocking } = props;\r\n  const dataCopy = { ...originalData };\r\n  const [data, setData] = useState(dataCopy);\r\n  const [popoverText, setPopoverText] = useState('');\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [editing, setEditing] = useState(false);\r\n\r\n  const addOption = () => {\r\n    setIsBlocking(true);\r\n    const newOption = { isCorrect: false, value: '' };\r\n    const newOptions = [...data.options, newOption];\r\n    const newData = { ...data, options: newOptions };\r\n    setData(newData);\r\n  };\r\n\r\n  const removeOption = (optionToRemove) => {\r\n    setIsBlocking(true);\r\n    const newOptions = data.options.filter(\r\n      (option) => option !== optionToRemove\r\n    );\r\n    const newData = { ...data, options: newOptions };\r\n    setData(newData);\r\n  };\r\n\r\n  const editOption = (optionToEdit, event) => {\r\n    setIsBlocking(true);\r\n    const newOptions = data.options.map((option) => {\r\n      if (option === optionToEdit) {\r\n        return { ...option, value: event.target.value };\r\n      }\r\n      return option;\r\n    });\r\n    const newData = { ...data, options: newOptions };\r\n    setData(newData);\r\n  };\r\n\r\n  const editCorrect = (newCorrectOption, event) => {\r\n    setIsBlocking(true);\r\n    const newOptions = data.options.map((option) => {\r\n      if (option === newCorrectOption) {\r\n        return { ...newCorrectOption, isCorrect: !option.isCorrect };\r\n      }\r\n      return option;\r\n    });\r\n    const newData = { ...data, options: newOptions };\r\n    setData(newData);\r\n  };\r\n\r\n  const enableEdit = () => setEditing(true);\r\n\r\n  const saveEdit = () => {\r\n    handlePopoverClose();\r\n    setEditing(false);\r\n    save(data);\r\n    setIsBlocking(false);\r\n  };\r\n\r\n  const cancelEdit = () => {\r\n    handlePopoverClose();\r\n    setEditing(false);\r\n    setData(originalData);\r\n    setIsBlocking(false);\r\n  };\r\n\r\n  const handlePopoverOpen = (event, message) => {\r\n    setPopoverText(message);\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handlePopoverClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const open = Boolean(anchorEl);\r\n\r\n  return (\r\n    <>\r\n      <Popover\r\n        id=\"mouse-over-popover\"\r\n        className={classes.popover}\r\n        classes={{\r\n          paper: classes.paper,\r\n        }}\r\n        open={open}\r\n        anchorEl={anchorEl}\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'left',\r\n        }}\r\n        transformOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'left',\r\n        }}\r\n        onClose={handlePopoverClose}\r\n        disableRestoreFocus\r\n      >\r\n        <Typography>{popoverText}</Typography>\r\n      </Popover>\r\n      <ListItem component=\"div\" alignItems=\"flex-start\" key={id}>\r\n        <Grid container>\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"body1\" className={classes.marginBottom}>\r\n              {instruction}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Typography>{data.value}</Typography>\r\n          </Grid>\r\n          <Grid item xs={10}>\r\n            <FormControl component=\"fieldset\">\r\n              <FormLabel component=\"legend\">\r\n                Selecteer het juiste antwoord\r\n              </FormLabel>\r\n              <RadioGroup>\r\n                {data.options.map((option, index) => (\r\n                  <div key={index}>\r\n                    <FormControlLabel\r\n                      value={option.value}\r\n                      control={\r\n                        <Radio\r\n                          color=\"primary\"\r\n                          checked={option.isCorrect}\r\n                          onClick={(event) => editCorrect(option, event)}\r\n                        />\r\n                      }\r\n                      label={\r\n                        editing ? (\r\n                          <TextField\r\n                            value={option.value}\r\n                            onChange={(event) => editOption(option, event)}\r\n                            placeholder=\"Nieuw antwoord\"\r\n                          />\r\n                        ) : (\r\n                          option.value\r\n                        )\r\n                      }\r\n                      disabled={!editing}\r\n                    />\r\n                    {editing && (\r\n                      <RemoveButton onClick={() => removeOption(option)} />\r\n                    )}\r\n                  </div>\r\n                ))}\r\n              </RadioGroup>\r\n              {editing ? (\r\n                <label htmlFor=\"icon-button-file\">\r\n                  <IconButton\r\n                    color=\"primary\"\r\n                    aria-label=\"upload picture\"\r\n                    component=\"span\"\r\n                    onClick={addOption}\r\n                  >\r\n                    <AddCircleIcon />\r\n                  </IconButton>\r\n                  Antwoord toevoegen\r\n                </label>\r\n              ) : null}\r\n            </FormControl>\r\n          </Grid>\r\n          {editing ? (\r\n            <>\r\n              <Grid item xs={1}>\r\n                <IconButton\r\n                  color=\"primary\"\r\n                  aria-label=\"upload picture\"\r\n                  component=\"span\"\r\n                  onClick={saveEdit}\r\n                  onMouseEnter={(e) =>\r\n                    handlePopoverOpen(e, 'Aanpassingen opslaan')\r\n                  }\r\n                  onMouseLeave={handlePopoverClose}\r\n                  aria-owns={open ? 'mouse-over-popover' : undefined}\r\n                  aria-haspopup=\"true\"\r\n                >\r\n                  <CheckCircleRoundedIcon />\r\n                </IconButton>\r\n              </Grid>\r\n              <Grid item xs={1}>\r\n                <IconButton\r\n                  color=\"secondary\"\r\n                  component=\"span\"\r\n                  onClick={cancelEdit}\r\n                  onMouseEnter={(e) =>\r\n                    handlePopoverOpen(e, 'Aanpassingen ongedaan maken')\r\n                  }\r\n                  onMouseLeave={handlePopoverClose}\r\n                  aria-owns={open ? 'mouse-over-popover' : undefined}\r\n                  aria-haspopup=\"true\"\r\n                >\r\n                  <CancelRoundedIcon />\r\n                </IconButton>\r\n              </Grid>\r\n            </>\r\n          ) : (\r\n            <Grid item xs={2}>\r\n              <IconButton\r\n                color=\"primary\"\r\n                onClick={enableEdit}\r\n                onMouseEnter={(e) => handlePopoverOpen(e, 'Vraag aanpassen')}\r\n                onMouseLeave={handlePopoverClose}\r\n                aria-owns={open ? 'mouse-over-popover' : undefined}\r\n                aria-haspopup=\"true\"\r\n              >\r\n                <EditIcon />\r\n              </IconButton>\r\n            </Grid>\r\n          )}\r\n        </Grid>\r\n      </ListItem>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MultipleChoice;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  fullWidth: {\r\n    width: '100%',\r\n  },\r\n}));\r\n\r\nconst MultipleChoiceGroup = (props) => {\r\n  const { id, index, data } = props;\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <ListItem component=\"div\" alignItems=\"flex-start\" key={id}>\r\n      <Grid container>\r\n        <Grid item xs={12} md={6} className={classes.fullWidth}>\r\n          <Typography>{`${index + 1}. ${data.word}`}</Typography>\r\n        </Grid>\r\n        {(data.morphemes || []).map((morpheme, index) => (\r\n          <Grid item xs={12} key={morpheme.value}>\r\n            <Typography>{morpheme.value}</Typography>\r\n            <RadioGroup>\r\n              {morpheme.options.map((option, index) => (\r\n                <div key={index}>\r\n                  <FormControlLabel\r\n                    value={option.value}\r\n                    disabled\r\n                    control={\r\n                      <Radio color=\"primary\" checked={option.isCorrect} />\r\n                    }\r\n                    label={\r\n                      <TextField\r\n                        value={option.value}\r\n                        placeholder=\"Nieuw antwoord\"\r\n                        disabled\r\n                      />\r\n                    }\r\n                  />\r\n                </div>\r\n              ))}\r\n            </RadioGroup>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nexport default MultipleChoiceGroup;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  fullWidth: {\r\n    width: '100%',\r\n  },\r\n}));\r\n\r\nconst Open = (props) => {\r\n  const { id } = props;\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <ListItem component=\"div\" alignItems=\"flex-start\" key={id}>\r\n      <Grid container>\r\n        <Grid item xs={12} md={6} className={classes.fullWidth}>\r\n          <Typography variant=\"body1\">\r\n            {`${props.index + 1}. ${props.instruction}`}\r\n          </Typography>\r\n          <TextField\r\n            disabled\r\n            multiline\r\n            rows={4}\r\n            className={classes.fullWidth}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nexport default Open;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  fullWidth: {\r\n    width: '100%',\r\n  },\r\n}));\r\n\r\nconst insertDividers = (word, answer, divider = ' | ') => {\r\n  const spread = divider.length;\r\n\r\n  answer.forEach((slice, index) => {\r\n    const pre = word.slice(0, slice + index * spread);\r\n    const post = word.slice(slice + index * spread);\r\n    word = `${pre}${divider}${post}`;\r\n  });\r\n\r\n  return word;\r\n};\r\n\r\nconst DivideTheWord = (props) => {\r\n  const { id, data } = props;\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <ListItem component=\"div\" alignItems=\"flex-start\" key={id}>\r\n      <Grid container>\r\n        <Grid item xs={12} md={6} className={classes.fullWidth}>\r\n          <Typography variant=\"body1\">{`${props.index + 1}. ${\r\n            data.word\r\n          }`}</Typography>\r\n          <Typography>\r\n            {insertDividers(data.word, data.correctAnswer)}\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nexport default DivideTheWord;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  fullWidth: {\r\n    width: '100%',\r\n  },\r\n}));\r\n\r\nconst ClickTheRightWords = (props) => {\r\n  const { id } = props;\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <ListItem component=\"div\" alignItems=\"flex-start\" key={id}>\r\n      <Grid container>\r\n        <Grid item xs={12}>\r\n          <Typography variant=\"body1\" className={classes.marginBottom}>\r\n            {/* {instruction} */}\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Typography>Oh oh, dit wordt nog niet ondersteund.</Typography>\r\n        </Grid>\r\n      </Grid>\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nexport default ClickTheRightWords;\r\n","import React, { useState } from 'react';\r\nimport { Prompt } from 'react-router-dom';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport MultipleChoice from '../_shared/questionTypes/MultipleChoice';\r\nimport MultipleChoiceGroup from '../_shared/questionTypes/MultipleChoiceGroup';\r\nimport Open from '../_shared/questionTypes/Open';\r\nimport DivideTheWord from '../_shared/questionTypes/DivideTheWord';\r\nimport ClickTheRightWords from '../_shared/questionTypes/clickTheRightWords';\r\n\r\nconst Question = (props) => {\r\n  const { type } = props;\r\n  switch (type) {\r\n    case 'multipleChoice':\r\n      return <MultipleChoice {...props} />;\r\n    case 'multipleChoiceGroup':\r\n      return <MultipleChoiceGroup {...props} />;\r\n    case 'open':\r\n      return <Open {...props} />;\r\n    case 'divideTheWord':\r\n      return <DivideTheWord {...props} />;\r\n    case 'clickTheRightWords':\r\n      return <ClickTheRightWords {...props} />;\r\n    default:\r\n      return (\r\n        <p>{`Er is iets fout gegaan, ${type} wordt niet herkend als vraag type`}</p>\r\n      );\r\n  }\r\n};\r\n\r\nconst QuestionGroup = (props) => {\r\n  const { questions, save } = props;\r\n  const [isBlocking, setIsBlocking] = useState(false);\r\n\r\n  questions.sort((el1, el2) => {\r\n    if (el1.index > el2.index) {\r\n      return 1;\r\n    } else {\r\n      return -1;\r\n    }\r\n  });\r\n\r\n  const saveQuestion = async (id, newData) => {\r\n    save(id, newData);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Prompt\r\n        when={isBlocking}\r\n        message={(location) =>\r\n          'Je hebt je aanpassingen niet opgeslagen, weet je zeker dat je deze pagina wilt verlaten? (Uw aanpassingen zullen NIET opgeslagen worden!)'\r\n        }\r\n      />\r\n      <Paper>\r\n        <List\r\n          subheader={\r\n            <ListSubheader component=\"div\" id=\"nested-list-subheader\">\r\n              Instructie\r\n            </ListSubheader>\r\n          }\r\n        >\r\n          {questions.map((question, index) => (\r\n            <ListItem component=\"div\" key={question.id}>\r\n              <Question\r\n                {...question}\r\n                setIsBlocking={setIsBlocking}\r\n                index={index}\r\n                save={(newData) => saveQuestion(question.id, newData)}\r\n              />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default QuestionGroup;\r\n","import React, { useState, useEffect, useCallback } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport QuestionGroup from '../_shared/QuestionGroup';\r\nimport service from '../../service';\r\n\r\nconst Question = (props) => {\r\n  const { authStore } = props;\r\n  const [questionGroups, setQuestionGroup] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const params = useParams();\r\n\r\n  const loadQuestionGroups = useCallback(async () => {\r\n    setLoading(true);\r\n    const response = await service.loadQuestionGroups([params.questionGroupId]);\r\n    if (!response) {\r\n      return;\r\n    }\r\n    setQuestionGroup(response.body.data[0]);\r\n    setLoading(false);\r\n  }, [params.questionGroupId]);\r\n\r\n  useEffect(() => {\r\n    loadQuestionGroups();\r\n  }, [loadQuestionGroups]);\r\n\r\n  const save = async (questionId, newData) => {\r\n    setLoading(true);\r\n    const response = await service.updateQuestion(questionId, newData);\r\n    setLoading(false);\r\n    if (!response) {\r\n      return;\r\n    }\r\n    authStore.setSuccess('Vraag succesvol geüpdatet');\r\n    await loadQuestionGroups();\r\n  };\r\n\r\n  if (loading || !questionGroups) {\r\n    return <CircularProgress />;\r\n  }\r\n\r\n  return (\r\n    <Grid container spacing={2}>\r\n      <Grid item xs={12}></Grid>\r\n      <Grid item xs={12}>\r\n        <QuestionGroup {...questionGroups[0]} save={save} />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Question;\r\n","import Paper from '@material-ui/core/Paper';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Typography, Box } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    display: 'flex',\r\n    textAlign: 'center',\r\n    overflow: 'auto',\r\n    justifyContent: 'center',\r\n    backgroundColor: theme.widget.secondary.main,\r\n    color: 'white',\r\n    alignItems: 'baseline',\r\n  },\r\n  fixedHeight: {\r\n    height: 400,\r\n  },\r\n}));\r\n\r\nconst CustomTitle = (props) => {\r\n  const { name, label } = props;\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Paper className={classes.paper}>\r\n      <Typography variant=\"h6\">{name} </Typography>\r\n      <Box paddingLeft={2}>\r\n        <Typography variant=\"subtitle1\">({label})</Typography>\r\n      </Box>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default CustomTitle;\r\n","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  answer: (props) => ({\r\n    background: getColor(props.correct),\r\n\r\n    width: '90%',\r\n  }),\r\n}));\r\n\r\nconst getColor = (isCorrect) => {\r\n  if (isCorrect) {\r\n    return '#C5E6A6';\r\n  } else {\r\n    return 'white';\r\n  }\r\n};\r\n\r\nconst AnswerHighlight = (props) => {\r\n  const classes = useStyles(props);\r\n  return <Typography className={classes.answer}> {props.answer}</Typography>;\r\n};\r\n\r\nexport default AnswerHighlight;\r\n","import React, { useState } from 'react';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport CustomTitle from './CustomTitle';\r\nimport AnswerHighlight from './AnswerHighlight';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport FiberManualRecordOutlinedIcon from '@material-ui/icons/FiberManualRecordOutlined';\r\nimport { ListItemSecondaryAction } from '@material-ui/core';\r\nimport { observer } from 'mobx-react-lite';\r\n\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  questionName: {\r\n    display: 'flex',\r\n    flexGrow: 0,\r\n    backgroundColor: theme.widget.primary.main,\r\n    color: 'white',\r\n  },\r\n  grid: {\r\n    display: 'flex',\r\n\r\n    direction: 'column',\r\n    wrap: 'nowrap',\r\n    flexGrow: 1,\r\n  },\r\n  title: {\r\n    backgroundColor: theme.widget.tertiary.main,\r\n    color: 'white',\r\n    textAlign: 'center',\r\n    fontWeight: 'fontWeightBold',\r\n  },\r\n}));\r\n\r\nconst Answers = (props) => {\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n  const { questionStore } = props;\r\n\r\n  const [filterValue, setFilterValue] = useState(null);\r\n  const [filterInputValue, setFilterInputValue] = useState('');\r\n\r\n  const typeLabels = {\r\n    open: 'Open',\r\n    clickTheRightWords: 'Selecteer het correcte antwoord',\r\n    multipleChoice: 'Meerkeuze',\r\n    divideTheWord: 'Verdeel het woord',\r\n    combineAndFillInTheBlanks: 'Combineer en vul in',\r\n  };\r\n\r\n  if (questionStore.isLoading || !questionStore.questionGroups) {\r\n    return <CircularProgress />;\r\n  }\r\n\r\n  const calculateDistribution = (questionId, index) => {\r\n    let acc = 0;\r\n    let total = 0;\r\n    questionStore.questionGroups[0].questionGroupAttempts.forEach((qga) => {\r\n      if (qga.isCompleted) {\r\n        qga.questionAttempts.forEach((qa) => {\r\n          if (qa.questionId === questionId) {\r\n            qa.content.forEach((attempt) => {\r\n              total += 1;\r\n              if (attempt === index) {\r\n                acc += 1;\r\n              }\r\n            });\r\n          }\r\n        });\r\n      }\r\n    });\r\n\r\n    return Math.round((acc / total) * 100);\r\n  };\r\n\r\n  const getRows = (questionId) => {\r\n    const rows = [];\r\n    questionStore.questionGroups[0].questionGroupAttempts.forEach((qga) => {\r\n      qga.questionAttempts.forEach((qa) => {\r\n        if (qa.questionId === questionId) {\r\n          rows.push({\r\n            id: qa.id,\r\n            studentName: qa.studentName,\r\n            answer: qa.answer,\r\n            studentId: qa.studentId,\r\n          });\r\n        }\r\n      });\r\n    });\r\n    return rows;\r\n  };\r\n\r\n  const getRowsFilter = (questionId, filterValue) => {\r\n    const rows = [];\r\n    questionStore.questionGroups[0].questionGroupAttempts.forEach((qga) => {\r\n      qga.questionAttempts.forEach((qa) => {\r\n        if (qa.questionId === questionId && qa.answer === filterValue.answer) {\r\n          rows.push({\r\n            id: qa.id,\r\n            studentName: qa.studentName,\r\n            answer: qa.answer,\r\n            studentId: qa.studentId,\r\n          });\r\n        }\r\n      });\r\n    });\r\n    return rows;\r\n  };\r\n\r\n  const getOptions = (questionId) => {\r\n    const options = [];\r\n    questionStore.questionGroups[0].questions.forEach((q) => {\r\n      if (q.id === questionId) {\r\n        q.data.options.forEach((option) => {\r\n          options.push({ answer: option.value });\r\n        });\r\n      }\r\n    });\r\n    return options;\r\n  };\r\n\r\n  const onClickStudent = (event) =>\r\n    history.push(`/dashboard/students/${event.row.studentId}`);\r\n\r\n  const onFilterInputChange = (event, newInputValue) => {\r\n    setFilterInputValue(newInputValue);\r\n  };\r\n\r\n  const onFilterChange = (event, newValue) => {\r\n    setFilterValue(newValue);\r\n  };\r\n\r\n  const categoryQuestions = questionStore.questionGroups[0].questions[0].type;\r\n  const nameQuestionGroup = questionStore.questionGroups[0].name;\r\n  const label = typeLabels[categoryQuestions] || categoryQuestions;\r\n\r\n  const columns = [\r\n    {\r\n      field: 'studentName',\r\n      headerName: 'Naam',\r\n      flex: 1.0,\r\n      valueGetter: (params) => params.row.studentName,\r\n    },\r\n\r\n    {\r\n      field: 'answer',\r\n      headerName: 'Antwoord',\r\n      flex: 1.0,\r\n      valueGetter: (params) => params.row.answer,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Grid container spacing={2}>\r\n      <Grid item xs={12} md={12}>\r\n        <CustomTitle name={nameQuestionGroup} label={label} />\r\n      </Grid>\r\n\r\n      <Grid item xs={12} md={12}>\r\n        {questionStore.questionGroups[0].questions.map((item, index) => {\r\n          return (\r\n            <Accordion defaultExpanded key={item.id}>\r\n              <AccordionSummary\r\n                expandIcon={<ExpandMoreIcon />}\r\n                className={classes.questionName}\r\n              >\r\n                <Typography key={index} style={{ marginLeft: '45%' }}>\r\n                  {'Vraag ' + parseInt(index + 1)}\r\n                </Typography>\r\n              </AccordionSummary>\r\n              <AccordionDetails>\r\n                <Grid container spacing={1}>\r\n                  <Grid item xs={12} md={12}>\r\n                    <Typography key={index}>{item.instruction}</Typography>\r\n                  </Grid>\r\n                  <Grid item xs={6} md={3}>\r\n                    <List>\r\n                      {item.data.options.map((item2, index2) => {\r\n                        return (\r\n                          <ListItem key={index2}>\r\n                            <ListItemIcon>\r\n                              <FiberManualRecordOutlinedIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText\r\n                              key={index}\r\n                              primary={\r\n                                <AnswerHighlight\r\n                                  answer={item2.value}\r\n                                  correct={item2.isCorrect}\r\n                                />\r\n                              }\r\n                            />\r\n                            <ListItemSecondaryAction>\r\n                              <Typography style={{ color: 'grey' }}>\r\n                                {calculateDistribution(item.id, index2)}%\r\n                              </Typography>\r\n                            </ListItemSecondaryAction>\r\n                          </ListItem>\r\n                        );\r\n                      })}\r\n                    </List>\r\n                  </Grid>\r\n                  <Divider style={{ margin: '1rem 0', width: '100%' }} />\r\n                  <Grid item xs={12} md={12}>\r\n                    <Grid item xs={12} md={12}>\r\n                      <Typography className={classes.title}>\r\n                        Filter op antoord :\r\n                      </Typography>\r\n                      <Autocomplete\r\n                        value={filterValue}\r\n                        onChange={onFilterChange}\r\n                        inputValue={filterInputValue}\r\n                        onInputChange={onFilterInputChange}\r\n                        options={getOptions(item.id)}\r\n                        getOptionLabel={(option) => option.answer}\r\n                        renderInput={(params) => (\r\n                          <TextField {...params} variant=\"outlined\" />\r\n                        )}\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12} md={12}>\r\n                    <DataGrid\r\n                      autoHeight\r\n                      rows={\r\n                        filterValue\r\n                          ? getRowsFilter(item.id, filterValue)\r\n                          : getRows(item.id)\r\n                      }\r\n                      columns={columns}\r\n                      pageSize={12}\r\n                      onRowClick={onClickStudent}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </AccordionDetails>\r\n            </Accordion>\r\n          );\r\n        })}\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default observer(Answers);\r\n","import React, { useEffect, useCallback } from 'react';\r\nimport { useParams, useHistory, useLocation } from 'react-router-dom';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\r\nimport Details from './Insights';\r\nimport Question from './Question';\r\nimport TabContent from '../_shared/TabContent';\r\nimport Breadcrumbs from '../_shared/Breadcrumbs';\r\nimport PageContainer from '../_shared/PageContainer';\r\nimport AssignmentTurnedInIcon from '@material-ui/icons/AssignmentTurnedIn';\r\nimport AnswersMultipleChoice from './AnswersMultipleChoice';\r\n\r\nconst Answers = (props) => {\r\n  const { questionStore } = props;\r\n  if (questionStore.questionGroups) {\r\n    const type = questionStore.questionGroups[0].questions[0].type;\r\n    switch (type) {\r\n      case 'multipleChoice':\r\n        return <AnswersMultipleChoice {...props} />;\r\n      default:\r\n        return (\r\n          <p>{`Er is iets fout gegaan, ${type} wordt niet herkend als vraag type`}</p>\r\n        );\r\n    }\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\n\r\nconst QuestionStats = (props) => {\r\n  const history = useHistory();\r\n  const params = useParams();\r\n  const location = useLocation();\r\n  const { questionStore, crumbs } = props;\r\n\r\n  const loadAll = useCallback(async () => {\r\n    await questionStore.loadQuestionGroupsWithAttempts([\r\n      params.questionGroupId,\r\n    ]);\r\n  }, [questionStore, params.questionGroupId]);\r\n\r\n  useEffect(() => {\r\n    loadAll();\r\n  }, [loadAll]);\r\n\r\n  const onClickTab = (event, newTab) => {\r\n    const currentTab = params.questionGroupTab;\r\n    const newPath = location.pathname.replace(currentTab, newTab);\r\n    history.push(newPath);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <AppBar position=\"static\">\r\n        <Tabs value={params.questionGroupTab} onChange={onClickTab}>\r\n          <Tab\r\n            label=\"Inzicht (opdracht)\"\r\n            icon={<EqualizerIcon />}\r\n            value=\"question_group_insights\"\r\n          />\r\n          <Tab\r\n            label=\"Opdracht\"\r\n            icon={<VisibilityIcon />}\r\n            value=\"question_group_questions\"\r\n          />\r\n          <Tab\r\n            label=\"Antwoorden\"\r\n            icon={<AssignmentTurnedInIcon />}\r\n            value=\"question_group_answers\"\r\n          />\r\n        </Tabs>\r\n      </AppBar>\r\n      <PageContainer maxWidth=\"lg\">\r\n        <Breadcrumbs crumbs={crumbs} />\r\n        <TabContent\r\n          index=\"question_group_questions\"\r\n          value={params.questionGroupTab}\r\n        >\r\n          <Question {...props} />\r\n        </TabContent>\r\n        <TabContent\r\n          index=\"question_group_insights\"\r\n          value={params.questionGroupTab}\r\n        >\r\n          <Details {...props} />\r\n        </TabContent>\r\n        <TabContent\r\n          index=\"question_group_answers\"\r\n          value={params.questionGroupTab}\r\n        >\r\n          <Answers {...props} />\r\n        </TabContent>\r\n      </PageContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default QuestionStats;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { observer } from 'mobx-react-lite';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport service from '../../service';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst columns = [\r\n  {\r\n    field: 'name',\r\n    headerName: 'Naam',\r\n    flex: 0.25,\r\n  },\r\n  {\r\n    field: 'classes',\r\n    headerName: 'Klas',\r\n    flex: 0.75,\r\n    valueGetter: (params) => params.row.classes[0].name, // TODO: Make this column not hardcoded to the first class\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    padding: theme.spacing(4, 12, 4, 12),\r\n  },\r\n  datagrid: {\r\n    marginTop: '1rem',\r\n    '& .MuiDataGrid-row:hover': {\r\n      cursor: 'pointer',\r\n    },\r\n  },\r\n}));\r\n\r\nconst Students = () => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [loading, setLoading] = useState(false);\r\n  const [students, setStudents] = useState([]);\r\n  const [studentFilterValue, setStudentFilterValue] = useState(null);\r\n  const [studentFilterInputValue, setStudentFilterInputValue] = useState('');\r\n\r\n  const loadStudents = async () => {\r\n    setLoading(true);\r\n    const response = await service.loadStudents();\r\n    setLoading(false);\r\n    if (!response) {\r\n      return;\r\n    }\r\n    setStudents(response.body.data);\r\n  };\r\n\r\n  const onStudentFilterInputChange = (event, newInputValue) => {\r\n    setStudentFilterInputValue(newInputValue);\r\n  };\r\n\r\n  const onStudentFilterChange = (event, newValue) => {\r\n    setStudentFilterValue(newValue);\r\n  };\r\n\r\n  const shownStudents = studentFilterValue ? [studentFilterValue] : students;\r\n\r\n  useEffect(() => {\r\n    loadStudents();\r\n  }, []);\r\n\r\n  const onClickStudent = (event) =>\r\n    history.push(`/dashboard/students/${event.row.id}`);\r\n\r\n  if (loading) {\r\n    return <CircularProgress />;\r\n  }\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <Autocomplete\r\n        value={studentFilterValue}\r\n        onChange={onStudentFilterChange}\r\n        inputValue={studentFilterInputValue}\r\n        onInputChange={onStudentFilterInputChange}\r\n        options={students}\r\n        getOptionLabel={(option) => option.name}\r\n        renderInput={(params) => (\r\n          <TextField {...params} label=\"Leerling zoeken\" variant=\"outlined\" />\r\n        )}\r\n      />\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12}>\r\n          <Paper>\r\n            <DataGrid\r\n              className={classes.datagrid}\r\n              autoHeight\r\n              rows={shownStudents}\r\n              columns={columns}\r\n              pageSize={24}\r\n              onRowClick={onClickStudent}\r\n              components={{\r\n                ColumnMenuIcon: () => null, // We dont want to show anything for now\r\n              }}\r\n            />\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default observer(Students);\r\n","// PAGES\r\nimport LessonView from './pages/home';\r\nimport Profile from './pages/profile';\r\nimport Class from './pages/class';\r\nimport Lesson from './pages/lesson';\r\nimport Student from './pages/student';\r\nimport StudentLesson from './pages/studentLesson';\r\nimport QuestionGroup from './pages/questionGroup';\r\nimport Students from './pages/students';\r\n\r\nconst routes = [\r\n  {\r\n    exact: true,\r\n    path: '/dashboard/home',\r\n    Component: LessonView,\r\n    name: 'Home',\r\n  },\r\n  {\r\n    exact: true,\r\n    path: '/dashboard/profile',\r\n    Component: Profile,\r\n    name: 'Profile',\r\n  },\r\n  {\r\n    exact: true,\r\n    path: '/dashboard/classes/:classId/:classTab',\r\n    Component: Class,\r\n    name: 'Klas',\r\n  },\r\n  {\r\n    exact: true,\r\n    path: '/dashboard/classes/:classId/:classTab/lessons/:lessonId/:lessonTab',\r\n    Component: Lesson,\r\n    name: 'Les',\r\n  },\r\n  {\r\n    exact: true,\r\n    path: '/dashboard/students/:studentId',\r\n    Component: Student,\r\n    name: 'Leerling',\r\n  },\r\n  {\r\n    exact: true,\r\n    path: '/dashboard/students/:studentId/lessons/:lessonId',\r\n    Component: StudentLesson,\r\n    name: 'Les Inzicht',\r\n  },\r\n  {\r\n    exact: true,\r\n    path:\r\n      '/dashboard/classes/:classId/:classTab/lessons/:lessonId/:lessonTab/questionGroups/:questionGroupId/:questionGroupTab',\r\n    Component: QuestionGroup,\r\n    name: 'Vraag Groep',\r\n  },\r\n  {\r\n    exact: true,\r\n    path: '/dashboard/students',\r\n    Component: Students,\r\n    name: 'Leerlingen',\r\n  },\r\n];\r\n\r\nexport default routes;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TreeItem from '@material-ui/lab/TreeItem';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst drawerWidth = 245;\r\n\r\nconst useTreeItemStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: drawerWidth,\r\n    color: theme.palette.text.secondary,\r\n    '&:hover > $content': {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n    '&:focus > $content, &$selected > $content': {\r\n      backgroundColor: `var(--tree-view-bg-color, ${theme.palette.grey[400]})`,\r\n      color: 'var(--tree-view-color)',\r\n    },\r\n    '&:focus > $content $label, &:hover > $content $label, &$selected > $content $label':\r\n      {\r\n        backgroundColor: 'transparent',\r\n      },\r\n  },\r\n  content: {\r\n    color: theme.palette.text.secondary,\r\n    paddingRight: theme.spacing(1),\r\n    fontWeight: theme.typography.fontWeightMedium,\r\n    '$expanded > &': {\r\n      fontWeight: theme.typography.fontWeightRegular,\r\n    },\r\n  },\r\n  group: {\r\n    marginLeft: 0,\r\n    '& $content': {\r\n      paddingLeft: theme.spacing(2),\r\n    },\r\n  },\r\n  expanded: {},\r\n  selected: {},\r\n  label: {\r\n    fontWeight: 'inherit',\r\n    color: 'inherit',\r\n  },\r\n  labelRoot: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: theme.spacing(0.5, 0),\r\n  },\r\n  labelIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  labelText: {\r\n    fontWeight: 'inherit',\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nconst MenuItem = (props) => {\r\n  const classes = useTreeItemStyles();\r\n  const {\r\n    labelText,\r\n    labelIcon: LabelIcon,\r\n    labelInfo,\r\n    color,\r\n    bgColor,\r\n    ...other\r\n  } = props;\r\n\r\n  return (\r\n    <TreeItem\r\n      label={\r\n        <div className={classes.labelRoot}>\r\n          {LabelIcon && (\r\n            <LabelIcon color=\"inherit\" className={classes.labelIcon} />\r\n          )}\r\n          <Typography variant=\"h6\" className={classes.labelText}>\r\n            {labelText}\r\n          </Typography>\r\n          <Typography variant=\"caption\" color=\"inherit\">\r\n            {labelInfo}\r\n          </Typography>\r\n        </div>\r\n      }\r\n      style={{\r\n        '--tree-view-color': color,\r\n        '--tree-view-bg-color': bgColor,\r\n      }}\r\n      classes={{\r\n        root: classes.root,\r\n        content: classes.content,\r\n        expanded: classes.expanded,\r\n        selected: classes.selected,\r\n        group: classes.group,\r\n        label: classes.label,\r\n      }}\r\n      {...other}\r\n    />\r\n  );\r\n};\r\n\r\nexport default MenuItem;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport TreeView from '@material-ui/lab/TreeView';\r\nimport GroupRoundedIcon from '@material-ui/icons/GroupRounded';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\r\nimport HomeRoundedIcon from '@material-ui/icons/HomeRounded';\r\nimport SchoolRoundedIcon from '@material-ui/icons/SchoolRounded';\r\nimport NoMeetingRoomRoundedIcon from '@material-ui/icons/NoMeetingRoomRounded';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nimport MenuItem from './pages/_shared/MenuItem';\r\nimport service from './service';\r\nimport socket from './socket';\r\n\r\nconst drawerWidth = 245;\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  drawer: {\r\n    marginRight: drawerWidth,\r\n  },\r\n  logoutButton: {\r\n    position: 'absolute',\r\n    bottom: 0,\r\n  },\r\n}));\r\n\r\nconst Menu = (props) => {\r\n  const { authStore } = props;\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [classList, setClassList] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [dialogOpen, setDialogOpen] = useState(false);\r\n\r\n  const loadClasses = async () => {\r\n    setLoading(true);\r\n    const response = await service.loadClasses();\r\n    if (response) {\r\n      setClassList(response.body.data);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadClasses();\r\n  }, []);\r\n\r\n  const onNodeSelect = (event, value) => {\r\n    switch (value) {\r\n      case '/':\r\n        handleDialogOpen();\r\n        break;\r\n      case '/dashboard/classes':\r\n        // do nothing\r\n        break;\r\n      default:\r\n        history.push(value);\r\n    }\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    authStore.logout();\r\n    socket.disconnect();\r\n    history.push('/');\r\n    authStore.setSuccess('Succesvol uitgelogd!');\r\n  };\r\n\r\n  const handleDialogOpen = () => {\r\n    setDialogOpen(true);\r\n  };\r\n\r\n  const handleDialogClose = () => {\r\n    setDialogOpen(false);\r\n  };\r\n\r\n  return (\r\n    <Drawer variant=\"permanent\" className={classes.drawer}>\r\n      <TreeView\r\n        defaultExpanded={['/dashboard/classes']}\r\n        defaultCollapseIcon={<ArrowDropDownIcon />}\r\n        defaultExpandIcon={<ArrowRightIcon />}\r\n        defaultEndIcon={<div style={{ width: 24 }} />}\r\n        onNodeSelect={onNodeSelect}\r\n      >\r\n        <div style={{ marginTop: '64px', padding: 0 }} />\r\n        <Divider />\r\n        <MenuItem\r\n          nodeId=\"/dashboard/home\"\r\n          labelText=\"Overzicht\"\r\n          labelIcon={HomeRoundedIcon}\r\n        />\r\n        <MenuItem\r\n          nodeId=\"/dashboard/classes\"\r\n          labelText=\"Klassen\"\r\n          labelIcon={SchoolRoundedIcon}\r\n        >\r\n          {loading\r\n            ? null\r\n            : classList.map((classItem) => (\r\n                <MenuItem\r\n                  key={classItem.id}\r\n                  nodeId={`/dashboard/classes/${classItem.id}/class_insights`}\r\n                  labelText={classItem.name}\r\n                  color=\"#1a73e8\"\r\n                  bgColor=\"#e8f0fe\"\r\n                />\r\n              ))}\r\n        </MenuItem>\r\n        <MenuItem\r\n          nodeId=\"/dashboard/students\"\r\n          labelText=\"Leerlingen\"\r\n          labelIcon={GroupRoundedIcon}\r\n        />\r\n        <MenuItem\r\n          nodeId=\"/\"\r\n          labelText=\"Uitloggen\"\r\n          labelIcon={NoMeetingRoomRoundedIcon}\r\n          className={classes.logoutButton}\r\n        />\r\n      </TreeView>\r\n      <Dialog\r\n        open={dialogOpen}\r\n        onClose={handleDialogClose}\r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">Uitloggen</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Weet je zeker dat je wilt uitloggen?\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleDialogClose} color=\"primary\">\r\n            Annuleren\r\n          </Button>\r\n          <Button onClick={handleLogout} color=\"primary\">\r\n            Uitloggen\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","import React, { useState, useEffect, useCallback } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport SchoolRoundedIcon from '@material-ui/icons/SchoolRounded';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport { observer } from 'mobx-react-lite';\r\n\r\nimport service from './service';\r\n\r\nconst StyledMenu = withStyles({\r\n  paper: {\r\n    border: '1px solid #d3d4d5',\r\n  },\r\n})((props) => (\r\n  <Menu\r\n    getContentAnchorEl={null}\r\n    anchorOrigin={{\r\n      vertical: 'bottom',\r\n      horizontal: 'left',\r\n    }}\r\n    transformOrigin={{\r\n      vertical: 'top',\r\n      horizontal: 'left',\r\n    }}\r\n    {...props}\r\n  />\r\n));\r\n\r\nconst StyledMenuItem = withStyles((theme) => ({\r\n  root: {\r\n    '&:focus': {\r\n      backgroundColor: theme.palette.primary.main,\r\n      '& .MuiListItemIcon-root, & .MuiListItemText-primary': {\r\n        color: theme.palette.common.white,\r\n      },\r\n    },\r\n  },\r\n}))(MenuItem);\r\n\r\nconst Notifications = (props) => {\r\n  const { notificationStore } = props;\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [classes, setClasses] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const history = useHistory();\r\n\r\n  const loadClasses = useCallback(async () => {\r\n    setLoading(true);\r\n\r\n    const response = await service.loadClasses();\r\n    if (!response) {\r\n      return;\r\n    }\r\n    setClasses(response.body.data);\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    loadClasses();\r\n  }, [loadClasses]);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const onClickNotification = (notification) => {\r\n    if (notification.category === 'classes') {\r\n      notificationStore.deleteNotification(notification.index);\r\n      history.push(\r\n        `/dashboard/${notification.category}/${notification.classId}/class_insights`\r\n      );\r\n    }\r\n  };\r\n\r\n  if (loading || !classes) {\r\n    return <CircularProgress />;\r\n  }\r\n\r\n  return (\r\n    <Grid container>\r\n      <Grid item>\r\n        <IconButton color=\"inherit\" onClick={handleClick}>\r\n          <Badge\r\n            badgeContent={notificationStore.notifications.length}\r\n            color=\"secondary\"\r\n          >\r\n            <NotificationsIcon />\r\n          </Badge>\r\n        </IconButton>\r\n      </Grid>\r\n      <StyledMenu\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleClose}\r\n      >\r\n        {notificationStore.notifications.length ? (\r\n          notificationStore.notifications.map((notification) => (\r\n            <StyledMenuItem\r\n              key={notification.id}\r\n              onClick={() => onClickNotification(notification)}\r\n            >\r\n              <ListItemIcon>\r\n                <SchoolRoundedIcon fontSize=\"small\" />\r\n              </ListItemIcon>\r\n              <ListItemText primary={notification.value} />\r\n            </StyledMenuItem>\r\n          ))\r\n        ) : (\r\n          <StyledMenuItem onClick={handleClose}>\r\n            <ListItemText primary=\"Geen notificaties!\" />\r\n          </StyledMenuItem>\r\n        )}\r\n      </StyledMenu>\r\n    </Grid>\r\n  );\r\n};\r\nexport default observer(Notifications);\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Notifications from './Notifications.jsx';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\n\r\nconst drawerWidth = 245;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  icons: {\r\n    display: 'flex',\r\n  },\r\n}));\r\n\r\nconst CustomAppBar = (props) => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  const goToProfile = () => history.push('/dashboard/profile');\r\n  const goBack = () => history.goBack();\r\n\r\n  return (\r\n    <AppBar\r\n      position=\"absolute\"\r\n      className={clsx(classes.appBar, classes.appBarShift)}\r\n    >\r\n      <Toolbar className={classes.toolbar}>\r\n        <IconButton onClick={goBack}>\r\n          <ChevronLeftIcon style={{ color: 'white' }} />\r\n        </IconButton>\r\n        <Typography\r\n          component=\"h1\"\r\n          variant=\"h6\"\r\n          color=\"inherit\"\r\n          noWrap\r\n          className={classes.title}\r\n        ></Typography>\r\n        <div className={classes.icons}>\r\n          <Notifications {...props} />\r\n          <IconButton color=\"inherit\" onClick={goToProfile}>\r\n            <AccountCircle />\r\n          </IconButton>\r\n        </div>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default CustomAppBar;\r\n","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport 'chartjs-plugin-colorschemes';\r\nimport routes from './routes';\r\nimport Menu from './Menu';\r\nimport AppBar from './AppBar';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n  },\r\n}));\r\n\r\nconst Dashboard = (props) => {\r\n  const {\r\n    authStore,\r\n    lessonStore,\r\n    questionStore,\r\n    notificationStore,\r\n    studentStore,\r\n  } = props;\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Switch>\r\n      {routes.map(({ exact, path, name, Component }) => (\r\n        <Route\r\n          key={path}\r\n          exact={exact}\r\n          path={path}\r\n          render={(props) => {\r\n            const crumbs = routes\r\n              // Get all routes that contain the current one.\r\n              .filter(({ path }) => props.match.path.includes(path))\r\n              // Swap out any dynamic routes with their param values.\r\n              // E.g. \"/pizza/:pizzaId\" will become \"/pizza/1\"\r\n              .map(({ path, ...rest }) => ({\r\n                path: Object.keys(props.match.params).length\r\n                  ? Object.keys(props.match.params).reduce(\r\n                      (path, param) =>\r\n                        path.replace(`:${param}`, props.match.params[param]),\r\n                      path\r\n                    )\r\n                  : path,\r\n                ...rest,\r\n              }));\r\n\r\n            return (\r\n              <>\r\n                <AppBar notificationStore={notificationStore} {...props} />\r\n                <Menu authStore={authStore} />\r\n                <main className={classes.content}>\r\n                  <div className={classes.appBarSpacer} />\r\n                  <Component\r\n                    authStore={authStore}\r\n                    lessonStore={lessonStore}\r\n                    questionStore={questionStore}\r\n                    notificationStore={notificationStore}\r\n                    studentStore={studentStore}\r\n                    crumbs={crumbs}\r\n                    {...props}\r\n                  />\r\n                </main>\r\n              </>\r\n            );\r\n          }}\r\n          name={name}\r\n        />\r\n      ))}\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","export default __webpack_public_path__ + \"static/media/loginBanner.8df90453.jpg\";","import React, { useState } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { observer } from 'mobx-react-lite';\r\nimport loginBanner from '../../assets/loginBanner.jpg';\r\n\r\nconst Copyright = () => {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Wordfactory\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '100vh',\r\n  },\r\n  image: {\r\n    backgroundImage: `url(${loginBanner})`,\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundColor:\r\n      theme.palette.type === 'light'\r\n        ? theme.palette.grey[50]\r\n        : theme.palette.grey[900],\r\n    backgroundSize: 'cover',\r\n    backgroundPosition: 'center',\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nconst Login = (props) => {\r\n  const { authStore } = props;\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const login = async (e) => {\r\n    setLoading(true);\r\n    e.preventDefault(); // Prevent reloading of page, due to \"submit\" role on button\r\n    const response = await authStore.login(email, password);\r\n    setLoading(false);\r\n    if (response) {\r\n      history.push('/dashboard/home');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Grid container component=\"main\" className={classes.root}>\r\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Log in\r\n          </Typography>\r\n          <form className={classes.form} noValidate>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Email Adres\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Wachtwoord\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n            <FormControlLabel\r\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n              label=\"Herinner mij\"\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n              disabled={loading}\r\n              onClick={login}\r\n            >\r\n              Inloggen\r\n            </Button>\r\n            <Grid container>\r\n              <Grid item xs>\r\n                <Link href=\"#\" variant=\"body2\">\r\n                  Wachtwoord vergeten?\r\n                </Link>\r\n              </Grid>\r\n              <Grid item>\r\n                <Link href=\"#\" variant=\"body2\">\r\n                  {'Geen account? Registreer hier.'}\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n            <Box mt={5}>\r\n              <Copyright />\r\n            </Box>\r\n          </form>\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default observer(Login);\r\n","import { action, makeObservable, observable, computed } from 'mobx';\r\nimport service from '../service';\r\nimport utils from './_utils';\r\n\r\n// Tutorial on mobx state management: https://blog.logrocket.com/introduction-to-mobx-with-react/\r\nclass QuestionStore {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      questionAttempts: observable,\r\n      questionGroups: observable,\r\n      loading: observable,\r\n      popLoad: action,\r\n      pushLoad: action,\r\n      isLoading: computed,\r\n    });\r\n  }\r\n\r\n  questionAttempts = [];\r\n  questionGroups = null;\r\n  loading = 0;\r\n\r\n  popLoad = () => (this.loading -= 1);\r\n  pushLoad = () => (this.loading += 1);\r\n\r\n  loadQuestionGroupsWithAttempts = async (questionGroupIds) => {\r\n    this.pushLoad();\r\n    const response = await service.loadQuestionGroups(questionGroupIds);\r\n    if (response) {\r\n      let questionGroups = response.body.data;\r\n      questionGroups.forEach((qg) => {\r\n        utils.addQuestionGroupAttemptStats(qg);\r\n        utils.addQuestionAttemptInformation(qg);\r\n        this.questionGroups = questionGroups;\r\n      });\r\n    }\r\n    this.popLoad();\r\n  };\r\n\r\n  loadQuestionAttemptsWithInfo = async (studentId, lessonId) => {\r\n    this.pushLoad();\r\n    const response = await service.loadQuestionAttempts({\r\n      studentId: studentId,\r\n      lessonId: lessonId,\r\n    });\r\n\r\n    if (response) {\r\n      let questionAttempts = response.body.data;\r\n      questionAttempts = utils.addInformation(questionAttempts);\r\n      this.questionAttempts = questionAttempts;\r\n    }\r\n    this.popLoad();\r\n  };\r\n\r\n  get isLoading() {\r\n    return this.loading > 0;\r\n  }\r\n}\r\n\r\nexport default new QuestionStore();\r\n","import _ from 'lodash';\r\nimport { action, makeObservable, observable, computed } from 'mobx';\r\n\r\nimport service from '../service';\r\n\r\nclass StudentStore {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      topResults: observable,\r\n      students: observable,\r\n      bottomResults: observable,\r\n      loadStudents: action,\r\n      setTopResults: action,\r\n      setBottomResults: action,\r\n      popLoad: action,\r\n      pushLoad: action,\r\n      isLoading: computed,\r\n    });\r\n  }\r\n\r\n  students = null;\r\n  topResults = [];\r\n  bottomResults = [];\r\n\r\n  popLoad = () => (this.loading -= 1);\r\n\r\n  pushLoad = () => (this.loading += 1);\r\n\r\n  setTopResults = (topResults) => (this.topResults = topResults);\r\n\r\n  setBottomResults = (bottomResults) => (this.bottomResults = bottomResults);\r\n\r\n  loadStudents = async (classId) => {\r\n    this.pushLoad();\r\n    const response = await service.loadStudents(classId);\r\n    if (response) {\r\n      this.students = response.body.data;\r\n    }\r\n\r\n    const distribution = this.computeDistribution(this.students).sort(\r\n      (a, b) => a.correctness - b.correctness\r\n    );\r\n\r\n    const cutoffValue = Math.round(distribution.length * 0.25);\r\n    const bottomResults = distribution.slice(0, cutoffValue);\r\n    const topResults = distribution.slice(\r\n      Math.max(distribution.length - cutoffValue, 0)\r\n    );\r\n\r\n    this.setBottomResults(bottomResults);\r\n    this.setTopResults(topResults);\r\n    this.updateBottomStudents(bottomResults);\r\n    this.popLoad();\r\n  };\r\n\r\n  computeDistribution = (students) => {\r\n    const distribution = [];\r\n\r\n    students.forEach((student) => {\r\n      let total = { correct: 0, incorrect: 0, missed: 0 };\r\n      student.lessonAttempts.forEach((lessonAttempt) => {\r\n        const currentTotal = lessonAttempt.questionGroupAttempts.reduce(\r\n          (acc, curr) => ({\r\n            correct: acc.correct + curr.correct,\r\n            incorrect: acc.incorrect + curr.incorrect,\r\n            missed: acc.missed + curr.missed,\r\n          }),\r\n          { correct: 0, incorrect: 0, missed: 0 }\r\n        );\r\n\r\n        total = _.mergeWith({}, total, currentTotal, (obj1, obj2) =>\r\n          _.isNumber(obj1) ? obj1 + obj2 : obj2\r\n        );\r\n      });\r\n\r\n      const totalPoints = total.correct + total.incorrect + total.missed;\r\n      const ratio = total.correct / totalPoints;\r\n      distribution.push({\r\n        name: student.name,\r\n        id: student.id,\r\n        correctness: Math.round((ratio || 0) * 100),\r\n      });\r\n    });\r\n\r\n    return distribution;\r\n  };\r\n\r\n  updateBottomStudents = (bottomResults) => {\r\n    this.students.forEach((student) => {\r\n      student.bottom = bottomResults.some((info) => student.id === info.id);\r\n    });\r\n  };\r\n\r\n  get isLoading() {\r\n    return this.loading > 0;\r\n  }\r\n}\r\n\r\nexport default new StudentStore();\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport { makeStyles, ThemeProvider } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { defaults } from 'react-chartjs-2';\r\nimport { Classic10 } from 'chartjs-plugin-colorschemes/src/colorschemes/colorschemes.tableau';\r\nimport 'chartjs-plugin-colorschemes';\r\n\r\nimport extendChart from './config/extendChart';\r\nimport theme from './theme';\r\nimport Dashboard from './Dashboard';\r\nimport Login from './pages/login';\r\n\r\n// STORES\r\nimport authStore from './stores/auth';\r\nimport lessonStore from './stores/lessonStore';\r\nimport questionStore from './stores/questionStore';\r\nimport notificationStore from './stores/notificationStore';\r\nimport studentStore from './stores/studentStore';\r\n\r\ndefaults.global.plugins.colorschemes.scheme = Classic10;\r\nextendChart();\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n}));\r\n\r\nconst Alert = (props) => {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n};\r\n\r\nconst ErrorPopup = observer((props) => {\r\n  const { authStore } = props;\r\n  return (\r\n    <Snackbar open={!!authStore.error}>\r\n      <Alert severity=\"warning\">{authStore.error}</Alert>\r\n    </Snackbar>\r\n  );\r\n});\r\n\r\nconst SuccessPopup = observer((props) => {\r\n  const { authStore } = props;\r\n  return (\r\n    <Snackbar open={!!authStore.success}>\r\n      <Alert severity=\"success\">{authStore.success}</Alert>\r\n    </Snackbar>\r\n  );\r\n});\r\n\r\nconst LoginPage = () => <Login authStore={authStore} />;\r\n\r\nconst App = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <div className={classes.root}>\r\n        <Router>\r\n          <CssBaseline />\r\n          {/* Two main routers, this top router checks if the user is logged in;\r\n        If logged in -> Delegate routing to the dashboard component.\r\n        Else -> Show login page */}\r\n          <Switch>\r\n            <Route path=\"/\" exact component={LoginPage} />\r\n            <Route\r\n              path=\"/dashboard\"\r\n              component={(props) => (\r\n                <Dashboard\r\n                  authStore={authStore}\r\n                  lessonStore={lessonStore}\r\n                  questionStore={questionStore}\r\n                  notificationStore={notificationStore}\r\n                  studentStore={studentStore}\r\n                  {...props}\r\n                />\r\n              )}\r\n            />\r\n          </Switch>\r\n        </Router>\r\n        <ErrorPopup authStore={authStore} />\r\n        <SuccessPopup authStore={authStore} />\r\n      </div>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}