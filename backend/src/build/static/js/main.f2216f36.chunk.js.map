{"version":3,"sources":["config/extendChart.js","theme.js","pages/_shared/Title.jsx","stores/auth.js","service.js","pages/_shared/PageContainer.jsx","pages/home/Activity.jsx","pages/home/Widget.jsx","pages/home/PercentageDoughnut.jsx","pages/home/index.jsx","assets/bartVis.png","pages/profile/ProfileHeader.jsx","pages/profile/AccountInformation.jsx","pages/profile/index.jsx","pages/_shared/PaperWithHeader.jsx","pages/_shared/ProgressBar.jsx","pages/class/Insights.jsx","pages/class/Course.jsx","pages/class/Courses.jsx","pages/class/Student.jsx","pages/class/Students.jsx","pages/_shared/TabContent.jsx","pages/_shared/Breadcrumbs.jsx","pages/class/index.jsx","pages/lesson/Doughnut.jsx","pages/lesson/Histogram.jsx","pages/lesson/Insights.jsx","pages/lesson/LessonContent.jsx","pages/lesson/index.jsx","pages/student/Lesson.jsx","pages/student/Course.jsx","pages/student/Courses.jsx","pages/student/ProfileHeader.jsx","pages/student/Progress.jsx","pages/student/index.jsx","pages/studentLesson/QuestionAttempts.jsx","pages/studentLesson/index.jsx","pages/questionGroup/BarGraph.jsx","pages/questionGroup/Doughnut.jsx","pages/questionGroup/Tile.jsx","pages/questionGroup/Insights.jsx","pages/_shared/questionTypes/MultipleChoice.jsx","pages/_shared/questionTypes/MultipleChoiceGroup.jsx","pages/_shared/questionTypes/Open.jsx","pages/_shared/questionTypes/DivideTheWord.jsx","pages/_shared/questionTypes/clickTheRightWords.jsx","pages/_shared/QuestionGroup.jsx","pages/questionGroup/Question.jsx","pages/questionGroup/CustomTitle.jsx","pages/questionGroup/AnswerHighlight.jsx","pages/questionGroup/AnswersMultipleChoice.jsx","pages/questionGroup/index.jsx","pages/students/index.jsx","routes.js","Menu.jsx","Notifications.jsx","AppBar.jsx","Dashboard.jsx","assets/loginBanner.jpg","pages/login/index.jsx","stores/_utils.js","stores/lessonStore.js","stores/questionStore.js","stores/notificationStore.js","stores/studentStore.js","App.js","index.js"],"names":["extendChart","originalDoughnutDraw","Chart","controllers","doughnut","prototype","draw","helpers","extend","apply","this","arguments","chart","config","options","elements","center","text","color","ctx","width","height","fontSize","toFixed","font","textBaseline","fillStyle","textX","Math","round","measureText","textY","fillText","createMuiTheme","widget","primary","main","secondary","tertiary","Title","props","Typography","component","variant","style","textAlign","gutterBottom","children","error","success","setError","setTimeout","setSuccess","login","email","password","a","service","logout","cookie","remove","makeObservable","observable","action","handleResponse","req","response","authStore","body","message","loadStudents","query","request","get","loadClass","classId","loadCourses","loadClasses","loadLessonAttempts","lessonId","loadQuestionAttemptsID","questionId","loadLesson","post","send","loadStudent","id","loadQuestionAttempts","studentId","loadQuestionGroupAttempts","questionGroupId","pageSize","loadQuestionGroup","updateQuestion","data","patch","useStyles","makeStyles","theme","container","paddingTop","spacing","paddingBottom","PageContainer","classes","Container","maxWidth","className","columns","field","headerName","flex","renderCell","params","date","row","updatedAt","substring","valueGetter","lessonAttempts","student","name","QuestionGroup","questionGroups","prefix","index","isCompleted","datagrid","marginTop","cursor","Activity","history","useHistory","useState","questionGroupAttempts","setQuestionGroupAttempts","loading","setLoading","useCallback","useEffect","CircularProgress","Grid","item","xs","autoHeight","rows","onRowClick","event","push","padding","display","flexDirection","justifyContent","widgetLeft","fontWeight","widgetRight","Widget","md","Card","backgroundColor","CardActionArea","onClick","CardContent","left","right","paper","overflow","PercentageDoughnut","useTheme","title","Paper","Dashboard","setClassList","datasets","cutoutPercentage","tooltips","enabled","hover","mode","responsive","avatar","ProfileHeader","lg","Avatar","src","Link","href","preventDefault","marginRight","root","divider","marginBottom","account","margin","label","alignItems","header","AccountInformation","Divider","TextField","disabled","value","fullWidth","type","Profile","paperheader","borderBottomLeftRadius","borderBottomRightRadius","borderTopLeftRadius","borderTopRightRadius","papercontent","PaperWithHeader","headercolor","headertitle","calculateRGB","percentage","floor","rgb","map","join","borderRadius","bar","colorPrimary","ProgessBar","Box","mr","LinearProgress","minWidth","correctness","getRows","studentResults","length","distribution","studentInfo","forEach","Insights","topResults","bottomResults","pagination","sortModel","sort","ProgressBar","Course","lessons","location","useLocation","goToLesson","pathname","List","subheader","ListSubheader","lesson","ListItem","button","ListItemText","inline","ListItemSecondaryAction","IconButton","edge","aria-label","Courses","courses","courseFilterValue","setCourseFilterValue","courseFilterInputValue","setCourseFilterInputValue","shownCourses","Autocomplete","onChange","newValue","inputValue","onInputChange","newInputValue","getOptionLabel","option","renderInput","course","getIcon","isBottom","Student","ListItemIcon","ListItemAvatar","alt","Students","students","page","setPage","studentFilterValue","setStudentFilterValue","studentFilterInputValue","setStudentFilterInputValue","start","shownStudents","slice","bottom","Pagination","count","ceil","TabContent","CustomBreadcrumbs","crumbs","Breadcrumbs","crumb","path","handleClick","observer","studentStore","useParams","theClass","setTheClass","setCourses","loadAll","promises","Promise","all","isLoading","AppBar","position","Tabs","classTab","newTab","currentTab","newPath","replace","Tab","icon","fixedHeight","CustomDoughnut","reduce","acc","curr","completed","isStarted","started","notStarted","labels","fixedHeightPaper","clsx","Histogram","performance","total","calculateProgress","lessonStore","Doughnut","typeLabels","open","clickTheRightWords","multipleChoice","divideTheWord","combineAndFillInTheBlanks","questions","lessonTab","Lesson","expanded","setExpanded","Accordion","TransitionProps","unmountOnExit","AccordionSummary","expandIcon","aria-controls","AccordionDetails","background","marginLeft","createRow","courseName","lessonName","category","Progress","lessonAttempt","TableContainer","Table","TableHead","TableRow","TableCell","align","TableBody","rowSpan","setStudent","question","palette","border","boxShadow","shadows","top","transform","QuestionAttempts","questionAttempts","modalOpen","setModalOpen","modalContent","setModalContent","Body","React","forwardRef","ref","JSON","stringify","answer","Fragment","Modal","onClose","aria-labelledby","aria-describedby","handleModalOpen","StudentLesson","questionStore","loadQuestionAttemptsWithInfo","getLabels","amountQuestions","i","parseInt","BarGraph","questionGroup","questionIds","distributions","correctPerQuestion","Array","fill","incorrectPerQuestion","missedPerQuestion","questionGroupAttempt","questionAttempt","indexCorrect","findIndex","el","correct","indexIncorrect","incorrect","indexMissed","missed","calculateDistribution","card","widgetTop","widgetBottom","Tile","number","amountLessons","averageElapsedTime","loadQuestionGroupWithAttempts","popover","pointerEvents","RemoveButton","htmlFor","MultipleChoice","instruction","originalData","save","setIsBlocking","dataCopy","setData","popoverText","setPopoverText","anchorEl","setAnchorEl","editing","setEditing","handlePopoverOpen","currentTarget","handlePopoverClose","Boolean","Popover","anchorOrigin","vertical","horizontal","transformOrigin","disableRestoreFocus","FormControl","FormLabel","RadioGroup","FormControlLabel","control","Radio","checked","isCorrect","newCorrectOption","newOptions","newData","editCorrect","optionToEdit","target","editOption","placeholder","optionToRemove","filter","removeOption","onMouseEnter","e","onMouseLeave","aria-owns","undefined","aria-haspopup","MultipleChoiceGroup","word","morphemes","morpheme","Open","multiline","insertDividers","spread","pre","DivideTheWord","correctAnswer","ClickTheRightWords","Question","isBlocking","el1","el2","saveQuestion","when","setQuestionGroup","CustomTitle","paddingLeft","getColor","AnswerHighlight","questionName","flexGrow","grid","direction","wrap","filterValue","setFilterValue","filterInputValue","setFilterInputValue","qga","qa","content","attempt","studentName","getRowsFilter","getOptions","q","onClickStudent","onFilterInputChange","onFilterChange","categoryQuestions","nameQuestionGroup","defaultExpanded","item2","index2","Answers","AnswersMultipleChoice","QuestionStats","questionGroupTab","routes","exact","Component","LessonView","Class","setStudents","components","ColumnMenuIcon","useTreeItemStyles","grey","paddingRight","typography","fontWeightMedium","fontWeightRegular","group","selected","labelRoot","labelIcon","labelText","StyledTreeItem","LabelIcon","labelInfo","bgColor","other","TreeItem","Menu","classList","TreeView","defaultCollapseIcon","defaultExpandIcon","defaultEndIcon","onNodeSelect","inset","nodeId","HomeRoundedIcon","SchoolRoundedIcon","classItem","GroupRoundedIcon","NoMeetingRoomRoundedIcon","StyledMenu","withStyles","getContentAnchorEl","StyledMenuItem","common","white","MenuItem","notificationStore","setClasses","interval","setInterval","accumulator","pushNotification","uuidv4","notifications","pushAccumulator","clearInterval","handleClose","Badge","badgeContent","keepMounted","notification","deleteNotification","onClickNotification","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","enteringScreen","icons","CustomAppBar","Toolbar","toolbar","goBack","noWrap","appBarSpacer","mixins","render","match","includes","rest","Object","keys","param","Copyright","Date","getFullYear","image","backgroundImage","loginBanner","backgroundRepeat","backgroundSize","backgroundPosition","form","submit","setEmail","setPassword","sm","elevation","square","noValidate","required","autoComplete","autoFocus","Checkbox","Button","mt","utils","addDuration","timeElapsedSeconds","addPerformance","unroundedGrade","max","addInformation","answers","answerAttempt","correctAnswers","addQuestionGroupAverages","completions","averageScore","addQuestionGroupAttemptStats","elapsedTime","addQuestionAttemptInformation","questionType","j","popLoad","pushLoad","setlesson","clearLesson","setlessonAttempts","clearLessonAttempts","loadedLessonAttempts","computed","amountNotifications","pushAmountNotifications","popAmountNotifications","setAmountNotifications","setNotifications","notificationIndex","splice","restoreIndices","restoredNotifications","setTopResults","setBottomResults","computeDistribution","studentsInfo","computeTop","computeBottom","studentsCorrect","studentsIncorrect","lessonAtempt","cutoffValue","slicedDistribution","slicedStudentInfo","updateBottomStudents","info","defaults","global","plugins","colorschemes","scheme","Classic10","Alert","ErrorPopup","Snackbar","severity","SuccessPopup","LoginPage","App","ThemeProvider","CssBaseline","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.f2216f36.chunk.js","sourcesContent":["import { Chart } from 'react-chartjs-2';\r\n\r\nconst extendChart = () => {\r\n  const originalDoughnutDraw = Chart.controllers.doughnut.prototype.draw;\r\n  Chart.helpers.extend(Chart.controllers.doughnut.prototype, {\r\n    draw: function () {\r\n      originalDoughnutDraw.apply(this, arguments);\r\n\r\n      if (this.chart.config.options.elements.center) {\r\n        const chart = this.chart.chart;\r\n        const { text, color } = this.chart.config.options.elements.center;\r\n        const { ctx, width, height } = chart;\r\n        const fontSize = (height / 114).toFixed(2);\r\n        ctx.font = fontSize + 'em Verdana';\r\n        ctx.textBaseline = 'middle';\r\n        ctx.fillStyle = color;\r\n\r\n        const textX = Math.round((width - ctx.measureText(text).width) / 2);\r\n        const textY = height / 2;\r\n\r\n        ctx.fillText(text, textX, textY);\r\n      }\r\n    },\r\n  });\r\n};\r\n\r\nexport default extendChart;\r\n","import { createMuiTheme } from '@material-ui/core/styles';\r\n\r\nexport default createMuiTheme({\r\n  widget: {\r\n    primary: {\r\n      main: '#729ece',\r\n    },\r\n    secondary: {\r\n      main: '#ff9e4a',\r\n    },\r\n    tertiary: {\r\n      main: '#67bf5c',\r\n    },\r\n  },\r\n});\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst Title = (props) => {\r\n  return (\r\n    <Typography\r\n      component=\"h2\"\r\n      variant=\"h6\"\r\n      style={{ color: props.color, textAlign: 'center' }}\r\n      gutterBottom\r\n    >\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n};\r\n\r\nTitle.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Title;\r\n","import { action, makeObservable, observable } from 'mobx';\r\nimport cookie from 'js-cookie';\r\nimport service from '../service';\r\n\r\n// Tutorial on mobx state management: https://blog.logrocket.com/introduction-to-mobx-with-react/\r\nclass AuthStore {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      error: observable,\r\n      success: observable,\r\n      login: action,\r\n      logout: action,\r\n      setError: action,\r\n    });\r\n  }\r\n\r\n  error = null;\r\n  success = null;\r\n\r\n  setError = (error) => {\r\n    this.error = error;\r\n    setTimeout(() => {\r\n      this.error = null;\r\n    }, 4000);\r\n  };\r\n\r\n  setSuccess = (success) => {\r\n    this.success = success;\r\n    setTimeout(() => {\r\n      this.success = null;\r\n    }, 4000);\r\n  };\r\n\r\n  login = async (email, password) => {\r\n    const response = await service.login(email, password);\r\n    if (!response) {\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  logout = () => {\r\n    cookie.remove('token');\r\n  };\r\n}\r\n\r\nexport default new AuthStore();\r\n","import request from 'superagent';\r\nimport authStore from './stores/auth';\r\n\r\nconst handleResponse = async (req) => {\r\n  try {\r\n    const response = await req;\r\n    return response;\r\n  } catch (error) {\r\n    authStore.setError(\r\n      `Er is iets mis gegaan: ${\r\n        error.response.body?.message ||\r\n        error.response.body?.error ||\r\n        error.response.error ||\r\n        'server error'\r\n      }`\r\n    );\r\n    return null;\r\n  }\r\n};\r\n\r\nconst loadStudents = async (query) => {\r\n  const req = request.get(`/api/v1/students`).query(query);\r\n  const response = await handleResponse(req);\r\n  return response;\r\n};\r\n\r\nconst loadClass = async (classId) => {\r\n  const req = request.get(`/api/v1/classes/${classId}`);\r\n  const response = await handleResponse(req);\r\n  return response;\r\n};\r\n\r\nconst loadCourses = async (query) => {\r\n  const req = request.get(`/api/v1/courses`).query(query);\r\n  const response = await handleResponse(req);\r\n  return response;\r\n};\r\n\r\nconst loadClasses = async () => {\r\n  const req = request.get('/api/v1/classes');\r\n  const response = await handleResponse(req);\r\n  return response;\r\n};\r\n\r\nconst loadLessonAttempts = async (lessonId) => {\r\n  const req = request.get(`/api/v1/lessonAttempts`).query({ lessonId });\r\n  const response = await handleResponse(req);\r\n  return response;\r\n};\r\n\r\nconst loadQuestionAttemptsID = async (questionId) => {\r\n  const req = request.get(`/api/v1/questionAttempts/${questionId}`);\r\n  const response = await handleResponse(req);\r\n  return response;\r\n};\r\n\r\nconst loadLesson = async (lessonId) => {\r\n  const req = request.get(`/api/v1/lessons/${lessonId}`);\r\n  const response = await handleResponse(req);\r\n  return response;\r\n};\r\n\r\nconst login = async (email, password) => {\r\n  const req = request.post('/api/v1/auth/login').send({\r\n    email,\r\n    password,\r\n  });\r\n  const response = await handleResponse(req);\r\n  return response;\r\n};\r\n\r\nconst loadStudent = async (id) => {\r\n  const req = request.get(`/api/v1/students/${id}`);\r\n  const response = await handleResponse(req);\r\n  return response;\r\n};\r\n\r\nconst loadQuestionAttempts = async ({ studentId, lessonId }) => {\r\n  const req = request\r\n    .get('/api/v1/questionAttempts')\r\n    .query({ studentId, lessonId });\r\n  const response = await handleResponse(req);\r\n  return response;\r\n};\r\n\r\nconst loadQuestionGroupAttempts = async ({ questionGroupId, pageSize }) => {\r\n  const req = request\r\n    .get('/api/v1/questionGroupAttempts')\r\n    .query({ questionGroupId, pageSize });\r\n  const response = await handleResponse(req);\r\n  return response;\r\n};\r\n\r\nconst loadQuestionGroup = async (id) => {\r\n  const req = request.get(`/api/v1/questionGroup/${id}`);\r\n  const response = await handleResponse(req);\r\n  return response;\r\n};\r\n\r\nconst updateQuestion = async (id, data) => {\r\n  const req = request.patch(`/api/v1/question/${id}`).send({ data });\r\n  const response = await handleResponse(req);\r\n  return response;\r\n};\r\n\r\nconst service = {\r\n  loadStudents,\r\n  loadStudent,\r\n  loadClass,\r\n  loadCourses,\r\n  loadClasses,\r\n  loadLessonAttempts,\r\n  loadQuestionAttempts,\r\n  loadQuestionAttemptsID,\r\n  loadLesson,\r\n  login,\r\n  loadQuestionGroupAttempts,\r\n  loadQuestionGroup,\r\n  updateQuestion,\r\n};\r\n\r\nexport default service;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n}));\r\n\r\nconst PageContainer = (props) => {\r\n  const { children } = props;\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Container maxWidth=\"lg\" className={classes.container}>\r\n      {children}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default PageContainer;\r\n","import React, { useState, useEffect, useCallback } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport { useHistory } from 'react-router-dom';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport DoneRoundedIcon from '@material-ui/icons/DoneRounded';\r\nimport CloseRoundedIcon from '@material-ui/icons/CloseRounded';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport Title from '../_shared/Title';\r\nimport service from '../../service';\r\nimport PageContainer from '../_shared/PageContainer';\r\n\r\nconst convertDateToReadableString = (date) => {\r\n  return `${date.substring(0, 10)} ${date.substring(11, 19)}`;\r\n};\r\n\r\nconst columns = [\r\n  {\r\n    field: 'updatedAt',\r\n    headerName: 'Datum',\r\n    flex: 0.2,\r\n    renderCell: (params) => convertDateToReadableString(params.row.updatedAt),\r\n  },\r\n  {\r\n    field: 'student',\r\n    headerName: 'Leerling',\r\n    flex: 0.2,\r\n    valueGetter: (params) => params.row.lessonAttempts.student.name,\r\n  },\r\n  {\r\n    field: 'lesson',\r\n    headerName: 'Les',\r\n    flex: 0.2,\r\n    valueGetter: (params) => params.row.QuestionGroup.questionGroups.prefix,\r\n  },\r\n  {\r\n    field: 'question',\r\n    headerName: 'Vraag',\r\n    flex: 0.2,\r\n    valueGetter: (params) => params.row.QuestionGroup.index + 1,\r\n  },\r\n  {\r\n    field: 'isCompleted',\r\n    headerName: 'Voltooid',\r\n    flex: 0.2,\r\n    renderCell: (params) =>\r\n      params.row.isCompleted ? <DoneRoundedIcon /> : <CloseRoundedIcon />,\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  datagrid: {\r\n    marginTop: '1rem',\r\n    '& .MuiDataGrid-row:hover': {\r\n      cursor: 'pointer',\r\n    },\r\n  },\r\n}));\r\n\r\nconst Activity = (props) => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [questionGroupAttempts, setQuestionGroupAttempts] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const loadQuestionGroupAttempts = useCallback(async () => {\r\n    setLoading(true);\r\n\r\n    const response = await service.loadQuestionGroupAttempts({ pageSize: 10 });\r\n    if (!response) {\r\n      return;\r\n    }\r\n\r\n    setQuestionGroupAttempts(response.body.data);\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    loadQuestionGroupAttempts();\r\n\r\n    return () => {\r\n      setQuestionGroupAttempts([]);\r\n    };\r\n  }, [loadQuestionGroupAttempts]);\r\n\r\n  if (loading) {\r\n    return <CircularProgress />;\r\n  }\r\n\r\n  const onClickStudent = (event) =>\r\n    history.push(`/dashboard/students/${event.row.lessonAttempts.student.id}`);\r\n\r\n  return (\r\n    <PageContainer>\r\n      <Title>Recente leerlingen activiteit</Title>\r\n      <Grid item xs={12}>\r\n        <DataGrid\r\n          className={classes.datagrid}\r\n          autoHeight\r\n          rows={questionGroupAttempts}\r\n          columns={columns}\r\n          pageSize={5}\r\n          onRowClick={onClickStudent}\r\n        />\r\n      </Grid>\r\n    </PageContainer>\r\n  );\r\n};\r\n\r\nexport default Activity;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  widget: {\r\n    height: 150,\r\n    padding: theme.spacing(3),\r\n    color: 'white',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n  },\r\n  widgetLeft: {\r\n    textAlign: 'right',\r\n    fontWeight: 400,\r\n  },\r\n  widgetRight: {\r\n    textAlign: 'left',\r\n    fontWeight: 100,\r\n  },\r\n}));\r\n\r\nconst Widget = (props) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid item xs={12} md={4}>\r\n      <Card style={{ backgroundColor: props.color }}>\r\n        <CardActionArea onClick={props.onClick}>\r\n          <CardContent>\r\n            <Grid container spacing={3} className={classes.widget}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"h2\" className={classes.widgetLeft}>\r\n                  {props.left}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"h5\" className={classes.widgetRight}>\r\n                  {props.right}\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </CardContent>\r\n        </CardActionArea>\r\n      </Card>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nWidget.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Widget;\r\n","import React from 'react';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { Doughnut } from 'react-chartjs-2';\r\n\r\nimport Title from '../_shared/Title';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n}));\r\n\r\nconst PercentageDoughnut = (props) => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  const { title, data, options } = props;\r\n\r\n  return (\r\n    <Grid item xs={12} md={4}>\r\n      <Paper className={classes.paper}>\r\n        <Title color={theme.widget.primary.main}>{title}</Title>\r\n        <Doughnut data={data} options={options} />\r\n      </Paper>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nPercentageDoughnut.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default PercentageDoughnut;\r\n","import React, { useState, useEffect, useCallback } from 'react';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport Activity from './Activity';\r\nimport Widget from './Widget';\r\nimport PercentageDoughnut from './PercentageDoughnut';\r\nimport service from '../../service';\r\nimport PageContainer from '../_shared/PageContainer';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n}));\r\n\r\nconst Dashboard = (props) => {\r\n  const theme = useTheme();\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [, setClassList] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const loadClasses = useCallback(async () => {\r\n    setLoading(true);\r\n\r\n    const response = await service.loadClasses();\r\n    if (!response) {\r\n      return;\r\n    }\r\n\r\n    setClassList(response.body.data);\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    loadClasses();\r\n  }, [loadClasses]);\r\n\r\n  if (loading) {\r\n    return <CircularProgress />;\r\n  }\r\n\r\n  const data = ({ color, variant }) => ({\r\n    datasets: [\r\n      {\r\n        data: [100 - variant * 25, variant * 25],\r\n        backgroundColor: ['rgb(0, 0, 0, 0)', color],\r\n      },\r\n    ],\r\n  });\r\n\r\n  const options = ({ color, text }) => ({\r\n    cutoutPercentage: 75,\r\n    tooltips: { enabled: false },\r\n    hover: { mode: null },\r\n    responsive: true,\r\n    elements: {\r\n      center: {\r\n        text,\r\n        color: color || '#FFFFFF',\r\n      },\r\n    },\r\n  });\r\n\r\n  return (\r\n    <PageContainer>\r\n      <Grid container spacing={3}>\r\n        {/* Widgets with general information */}\r\n        <Widget\r\n          left={6}\r\n          right=\"lessen\"\r\n          color={theme.widget.primary.main}\r\n          onClick={() => history.push('/dashboard/lessons')}\r\n        />\r\n        <Widget\r\n          left={206}\r\n          right=\"leerlingen\"\r\n          color={theme.widget.secondary.main}\r\n          onClick={() => history.push('/dashboard/students')}\r\n        />\r\n        <Widget\r\n          left={25}\r\n          right=\"na te kijken opdrachten\"\r\n          color={theme.widget.tertiary.main}\r\n          onClick={() => history.push('/dashboard/tasks')}\r\n        />\r\n        {/* Average percentage statistics */}\r\n        <PercentageDoughnut\r\n          title=\"Gemiddelde correctheid\"\r\n          data={data({ color: theme.widget.primary.main, variant: 1 })}\r\n          options={options({ color: theme.widget.primary.main, text: '25%' })}\r\n        />\r\n        <PercentageDoughnut\r\n          title=\"Gemiddelde voortgang\"\r\n          data={data({ color: theme.widget.secondary.main, variant: 2 })}\r\n          options={options({ color: theme.widget.secondary.main, text: '50%' })}\r\n        />\r\n        <PercentageDoughnut\r\n          title=\"Opdrachten nagekeken\"\r\n          data={data({ color: theme.widget.tertiary.main, variant: 3 })}\r\n          options={options({ color: theme.widget.tertiary.main, text: '75%' })}\r\n        />\r\n        {/* Recent activity */}\r\n        <Grid item xs={12}>\r\n          <Paper className={classes.paper}>\r\n            <Activity />\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </PageContainer>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","export default __webpack_public_path__ + \"static/media/bartVis.cee2b69e.png\";","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Link from '@material-ui/core/Link';\r\n\r\nimport avatar from '../../assets/bartVis.png';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  avatar: {\r\n    width: theme.spacing(24),\r\n    height: theme.spacing(24),\r\n  },\r\n  email: {\r\n    color: 'blue',\r\n    fontWeight: 'bold',\r\n  },\r\n}));\r\n\r\nconst ProfileHeader = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const preventDefault = (event) => event.preventDefault();\r\n\r\n  return (\r\n    <Grid container>\r\n      <Grid item xs={12} lg={3}>\r\n        <Avatar src={avatar} className={classes.avatar} />\r\n      </Grid>\r\n      <Grid item xs={12} lg={9}>\r\n        <Typography variant=\"h3\">Bert Vis</Typography>\r\n        <Link href={`mailto:${'b.vis@outlook.com'}`} onClick={preventDefault}>\r\n          <Typography\r\n            className={classes.email}\r\n            style={{ display: 'inline-block', marginRight: 8 }}\r\n          >\r\n            b.vis@outlook.com\r\n          </Typography>\r\n        </Link>\r\n        <Typography style={{ display: 'inline-block' }}>- Docent</Typography>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default ProfileHeader;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(4, 4, 0, 4),\r\n  },\r\n  divider: {\r\n    marginTop: theme.spacing(4),\r\n    marginBottom: theme.spacing(4),\r\n  },\r\n  account: {\r\n    margin: theme.spacing(4),\r\n  },\r\n  label: {\r\n    height: '100%',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  header: {\r\n    fontWeight: 'bold',\r\n  },\r\n}));\r\n\r\nconst AccountInformation = (props) => {\r\n  const classes = useStyles();\r\n\r\n  // TODO: contains mocked data, need to retrieve this via store\r\n  return (\r\n    <Grid container>\r\n      <Grid item xs={12} className={classes.divider}>\r\n        <Typography variant=\"h5\" className={classes.header}>\r\n          Account Informatie\r\n        </Typography>\r\n        <Divider />\r\n        <Grid container className={classes.account}>\r\n          <Grid item xs={12} md={3}>\r\n            <Typography className={classes.label}>Gebruikersnaam</Typography>\r\n          </Grid>\r\n          <Grid item xs={12} md={9}>\r\n            <TextField\r\n              disabled\r\n              value={'bertvis1971'}\r\n              className={classes.fullWidth}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container className={classes.account}>\r\n          <Grid item xs={12} md={3}>\r\n            <Typography className={classes.label}>E-mailadres</Typography>\r\n          </Grid>\r\n          <Grid item xs={12} md={9}>\r\n            <TextField\r\n              disabled\r\n              value={'b.vis@outlook.com'}\r\n              className={classes.fullWidth}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container className={classes.account}>\r\n          <Grid item xs={12} md={3}>\r\n            <Typography className={classes.label}>Wachtwoord</Typography>\r\n          </Grid>\r\n          <Grid item xs={12} md={9}>\r\n            <TextField\r\n              disabled\r\n              type=\"password\"\r\n              value={'superuser'}\r\n              className={classes.fullWidth}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default AccountInformation;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport PageContainer from '../_shared/PageContainer';\r\nimport ProfileHeader from './ProfileHeader';\r\nimport AccountInformation from './AccountInformation';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(4, 4, 0, 4),\r\n  },\r\n}));\r\n\r\nconst Profile = (props) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <PageContainer>\r\n      <Paper className={classes.root}>\r\n        <ProfileHeader />\r\n        <AccountInformation />\r\n      </Paper>\r\n    </PageContainer>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tpaperheader: {\r\n\t\ttextAlign: 'center',\r\n\t\tcolor: 'white',\r\n\t\tborderBottomLeftRadius: 0,\r\n\t\tborderBottomRightRadius: 0,\r\n\t\tborderTopLeftRadius: 4,\r\n\t\tborderTopRightRadius: 4,\r\n\t},\r\n\tpapercontent: {\r\n\t\tborderBottomLeftRadius: 4,\r\n\t\tborderBottomRightRadius: 4,\r\n\t\tborderTopLeftRadius: 0,\r\n\t\tborderTopRightRadius: 0,\r\n\t},\r\n}));\r\n\r\nconst PaperWithHeader = (props) => {\r\n\tconst classes = useStyles();\r\n\r\n  return (\r\n    <Grid item xs={12} md={6}>\r\n\t\t\t<Paper className={classes.paperheader} style={{ backgroundColor: props.headercolor }}>\r\n\t\t\t\t\t<Typography>{props.headertitle}</Typography>\r\n\t\t\t</Paper>\r\n\t\t\t<Paper className={classes.papercontent}>\r\n\t\t\t\t\t{props.children}\r\n\t\t\t</Paper>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nPaperWithHeader.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default PaperWithHeader;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nconst calculateRGB = (percentage) => {\r\n  const shade = 0.8;\r\n  const color = Math.floor(\r\n    (percentage <= 50 ? percentage / 50 : (100 - percentage) / 50) * 255\r\n  );\r\n  const rgb = (percentage <= 50\r\n    ? [255, color, 0]\r\n    : [color, 255, 0]\r\n  ).map((color) => Math.round(color * shade));\r\n  return `rgb(${rgb.join(',')})`;\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: 20,\r\n    borderRadius: 5,\r\n    margin: theme.spacing(1),\r\n  },\r\n  bar: (props) => ({\r\n    borderRadius: 5,\r\n    backgroundColor: calculateRGB(props.value),\r\n  }),\r\n  colorPrimary: {\r\n    backgroundColor: '#DDDDDD',\r\n  },\r\n}));\r\n\r\nconst ProgessBar = (props) => {\r\n  const classes = useStyles(props);\r\n\r\n  return (\r\n    <Box>\r\n      <Typography>{props.title}</Typography>\r\n      <Box display=\"flex\" alignItems=\"center\">\r\n        <Box width=\"100%\" mr={1}>\r\n          <LinearProgress\r\n            variant=\"determinate\"\r\n            classes={{\r\n              root: classes.root,\r\n              colorPrimary: classes.colorPrimary,\r\n              bar: classes.bar,\r\n            }}\r\n            {...props}\r\n          />\r\n        </Box>\r\n        <Box minWidth={35}>\r\n          <Typography variant=\"body2\" color=\"textSecondary\">{`${Math.round(\r\n            props.value\r\n          )}%`}</Typography>\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nProgessBar.propTypes = {\r\n  value: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default ProgessBar;\r\n","import React from 'react';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport PaperWithHeader from '../_shared/PaperWithHeader';\r\nimport ProgressBar from '../_shared/ProgressBar';\r\nimport PageContainer from '../_shared/PageContainer';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  widget: {\r\n    padding: theme.spacing(3),\r\n    marginBottom: theme.spacing(12),\r\n  },\r\n  paper: {\r\n    borderBottomLeftRadius: 4,\r\n    borderBottomRightRadius: 4,\r\n    borderTopLeftRadius: 0,\r\n    borderTopRightRadius: 0,\r\n    height: 230,\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nconst columns = [\r\n  {\r\n    field: 'student',\r\n    headerName: 'Naam',\r\n    flex: 0.65,\r\n    valueGetter: (params) => params.row.name,\r\n  },\r\n  {\r\n    field: 'correctness',\r\n    headerName: 'Gem. correctheid',\r\n    flex: 0.5,\r\n    valueGetter: (params) => params.row.correctness,\r\n  },\r\n];\r\n\r\nconst getRows = (studentResults) => {\r\n  if (studentResults && studentResults.length) {\r\n    const [distribution, studentInfo] = studentResults;\r\n    const rows = [];\r\n\r\n    distribution.forEach((row, index) => {\r\n      rows.push({\r\n        id: studentInfo[index].id,\r\n        name: studentInfo[index].name,\r\n        correctness: row,\r\n      });\r\n    });\r\n\r\n    return rows;\r\n  }\r\n\r\n  return [];\r\n};\r\n\r\nconst Insights = (props) => {\r\n  const { topResults, bottomResults } = props;\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <PageContainer>\r\n      <Grid container spacing={2} className={classes.widget}>\r\n        <PaperWithHeader\r\n          headercolor={theme.widget.primary.main}\r\n          headertitle=\"Onderste 25%\"\r\n        >\r\n          <DataGrid\r\n            autoHeight\r\n            pageSize={5}\r\n            pagination\r\n            rows={getRows(bottomResults)}\r\n            columns={columns}\r\n            sortModel={[\r\n              {\r\n                field: 'correctness',\r\n                sort: 'desc',\r\n              },\r\n            ]}\r\n          />\r\n        </PaperWithHeader>\r\n        <PaperWithHeader\r\n          headercolor={theme.widget.primary.main}\r\n          headertitle=\"Top 25%\"\r\n        >\r\n          <DataGrid\r\n            autoHeight\r\n            rows={getRows(topResults)}\r\n            pagination\r\n            pageSize={5}\r\n            sortModel={[\r\n              {\r\n                field: 'correctness',\r\n                sort: 'desc',\r\n              },\r\n            ]}\r\n            columns={columns}\r\n          />\r\n        </PaperWithHeader>\r\n      </Grid>\r\n      <Grid container spacing={3} className={classes.widget}>\r\n        <PaperWithHeader\r\n          headercolor={theme.widget.secondary.main}\r\n          headertitle=\"Probleem categorieën\"\r\n        >\r\n          <Paper className={classes.paper}>\r\n            <ProgressBar title=\"1. Herken morfemen in woorden\" value={38} />\r\n            <ProgressBar title=\"2. Herken morfemen in een zin\" value={48} />\r\n            <ProgressBar title=\"3. Verwisselen morfemen\" value={55} />\r\n          </Paper>\r\n        </PaperWithHeader>\r\n        <PaperWithHeader\r\n          headercolor={theme.widget.secondary.main}\r\n          headertitle=\"Top categorieën\"\r\n        >\r\n          <Paper className={classes.paper}>\r\n            <ProgressBar title=\"1. Betekenis morfemen\" value={97} />\r\n            <ProgressBar title=\"2. Splits morfemen\" value={83} />\r\n            <ProgressBar\r\n              title=\"3. Alternatieve betekenis morfemen\"\r\n              value={74}\r\n            />\r\n          </Paper>\r\n        </PaperWithHeader>\r\n      </Grid>\r\n    </PageContainer>\r\n  );\r\n};\r\n\r\nexport default Insights;\r\n","import React from 'react';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\r\n\r\nconst useStyles = makeStyles((theme) => ({}));\r\n\r\nconst Course = (props) => {\r\n  const { name, lessons } = props;\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n\r\n  const goToLesson = (id) =>\r\n    history.push(`${location.pathname}/lessons/${id}/lesson_insights`);\r\n\r\n  return (\r\n    <List\r\n      subheader={\r\n        <ListSubheader component=\"div\" id=\"nested-list-subheader\">\r\n          {name}\r\n        </ListSubheader>\r\n      }\r\n    >\r\n      {lessons.map((lesson) => (\r\n        <ListItem\r\n          component=\"div\"\r\n          alignItems=\"flex-start\"\r\n          key={lesson.id}\r\n          button\r\n          onClick={() => goToLesson(lesson.id)}\r\n        >\r\n          <ListItemText\r\n            primary={`${lesson.prefix} - ${lesson.name}`}\r\n            secondary={\r\n              <Typography\r\n                component=\"span\"\r\n                variant=\"body2\"\r\n                className={classes.inline}\r\n                color=\"textPrimary\"\r\n              ></Typography>\r\n            }\r\n          />\r\n          <ListItemSecondaryAction>\r\n            <IconButton\r\n              edge=\"end\"\r\n              aria-label=\"comments\"\r\n              onClick={() => goToLesson(lesson.id)}\r\n            >\r\n              <ArrowForwardIosIcon />\r\n            </IconButton>\r\n          </ListItemSecondaryAction>\r\n        </ListItem>\r\n      ))}\r\n    </List>\r\n  );\r\n};\r\n\r\nexport default Course;\r\n","import React, { useState } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Course from './Course';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  marginBottom: {\r\n    marginBottom: '1rem',\r\n  },\r\n  pagination: {\r\n    margin: '1rem auto',\r\n  },\r\n}));\r\n\r\nconst Courses = (props) => {\r\n  const { courses } = props;\r\n  const classes = useStyles();\r\n\r\n  const [courseFilterValue, setCourseFilterValue] = useState(null);\r\n  const [courseFilterInputValue, setCourseFilterInputValue] = useState('');\r\n\r\n  const onCourseFilterInputChange = (event, newInputValue) => {\r\n    setCourseFilterInputValue(newInputValue);\r\n  };\r\n\r\n  const onCourseFilterChange = (event, newValue) => {\r\n    setCourseFilterValue(newValue);\r\n  };\r\n\r\n  const shownCourses = courseFilterValue ? [courseFilterValue] : courses;\r\n\r\n  return (\r\n    <Grid container spacing={2}>\r\n      <Grid item xs={12}>\r\n        <Typography variant=\"h5\" className={classes.marginBottom}>\r\n          Lessen\r\n        </Typography>\r\n        <Autocomplete\r\n          value={courseFilterValue}\r\n          onChange={onCourseFilterChange}\r\n          inputValue={courseFilterInputValue}\r\n          onInputChange={onCourseFilterInputChange}\r\n          options={courses}\r\n          getOptionLabel={(option) => option.name}\r\n          renderInput={(params) => (\r\n            <TextField {...params} label=\"Les zoeken\" variant=\"outlined\" />\r\n          )}\r\n        />\r\n        <Divider style={{ margin: '1rem 0' }} />\r\n        <Paper>\r\n          <List className={classes.root}>\r\n            {shownCourses.map((course) => (\r\n              <Course key={course.id} {...course} />\r\n            ))}\r\n          </List>\r\n        </Paper>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Courses;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\n\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\r\nimport EmojiObjectsIcon from '@material-ui/icons/EmojiObjects';\r\n\r\nconst useStyles = makeStyles((theme) => ({}));\r\n\r\nconst getIcon = (isBottom) => {\r\n  return isBottom ? <EmojiObjectsIcon style={{ color: 'orange' }} /> : null;\r\n};\r\n\r\nconst Student = (props) => {\r\n  const { id, name, email, onClick, isBottom } = props;\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <ListItem\r\n      component=\"div\"\r\n      alignItems=\"flex-start\"\r\n      key={id}\r\n      button\r\n      style={{ alignItems: 'center' }}\r\n      onClick={onClick}\r\n    >\r\n      <ListItemIcon>{getIcon(isBottom)}</ListItemIcon>{' '}\r\n      <ListItemAvatar>\r\n        <Avatar alt=\"Travis Howard\" />\r\n      </ListItemAvatar>\r\n      <ListItemText\r\n        primary={name}\r\n        secondary={\r\n          <Typography\r\n            component=\"span\"\r\n            variant=\"body2\"\r\n            className={classes.inline}\r\n            color=\"textPrimary\"\r\n          >\r\n            {email || 'geen email'}\r\n          </Typography>\r\n        }\r\n      />\r\n      <ListItemSecondaryAction>\r\n        <IconButton edge=\"end\" aria-label=\"comments\">\r\n          <ArrowForwardIosIcon />\r\n        </IconButton>\r\n      </ListItemSecondaryAction>\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nexport default Student;\r\n","import React, { useState } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useHistory } from 'react-router-dom';\r\nimport List from '@material-ui/core/List';\r\nimport Student from './Student';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\n\r\nconst PAGE_SIZE = 20;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  marginTop: {\r\n    marginTop: '1rem',\r\n  },\r\n  marginBottom: {\r\n    marginBottom: '1rem',\r\n  },\r\n}));\r\n\r\nconst Students = (props) => {\r\n  const { students } = props;\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [page, setPage] = useState(0);\r\n  const [studentFilterValue, setStudentFilterValue] = useState(null);\r\n  const [studentFilterInputValue, setStudentFilterInputValue] = useState('');\r\n\r\n  const onStudentFilterInputChange = (event, newInputValue) => {\r\n    setStudentFilterInputValue(newInputValue);\r\n  };\r\n\r\n  const onStudentFilterChange = (event, newValue) => {\r\n    setStudentFilterValue(newValue);\r\n  };\r\n\r\n  const onChangePage = (event, value) => {\r\n    setPage(value - 1);\r\n  };\r\n\r\n  const start = page * PAGE_SIZE;\r\n\r\n  const shownStudents = studentFilterValue\r\n    ? [studentFilterValue]\r\n    : students.slice(start, start + PAGE_SIZE);\r\n\r\n  const onClick = (studentId) =>\r\n    history.push(`/dashboard/students/${studentId}`);\r\n\r\n  return (\r\n    <Grid container spacing={2}>\r\n      <Grid item xs={12}>\r\n        <Typography variant=\"h5\" className={classes.marginBottom}>\r\n          Leerlingen\r\n        </Typography>\r\n        <Autocomplete\r\n          value={studentFilterValue}\r\n          onChange={onStudentFilterChange}\r\n          inputValue={studentFilterInputValue}\r\n          onInputChange={onStudentFilterInputChange}\r\n          options={students}\r\n          getOptionLabel={(option) => option.name}\r\n          renderInput={(params) => (\r\n            <TextField {...params} label=\"Leerling zoeken\" variant=\"outlined\" />\r\n          )}\r\n        />\r\n        <Divider style={{ margin: '1rem 0' }} />\r\n        <Paper>\r\n          <List className={classes.root}>\r\n            {shownStudents.map((student) => (\r\n              <Student\r\n                key={student.id}\r\n                {...student}\r\n                isBottom={student.bottom}\r\n                onClick={() => onClick(student.id)}\r\n              />\r\n            ))}\r\n          </List>\r\n        </Paper>\r\n        {studentFilterValue ? null : (\r\n          <Pagination\r\n            className={classes.marginTop}\r\n            count={Math.ceil(students.length / PAGE_SIZE)}\r\n            color=\"primary\"\r\n            onChange={onChangePage}\r\n          />\r\n        )}\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Students;\r\n","const TabContent = (props) => {\r\n  const { value, index, children } = props;\r\n  if (value !== index) {\r\n    return null;\r\n  }\r\n  return children;\r\n};\r\n\r\nexport default TabContent;\r\n","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\r\nimport Link from '@material-ui/core/Link';\r\n\r\nconst CustomBreadcrumbs = (props) => {\r\n  const { crumbs } = props;\r\n  const history = useHistory();\r\n\r\n  const handleClick = (event, crumb) => {\r\n    event.preventDefault();\r\n    history.push(crumb.path);\r\n  };\r\n\r\n  return (\r\n    <Breadcrumbs aria-label=\"breadcrumb\" style={{ marginBottom: '1rem' }}>\r\n      <Typography variant=\"body2\">Locatie:</Typography>\r\n      {crumbs.map((crumb) => (\r\n        <Link\r\n          key={crumb.path}\r\n          component=\"button\"\r\n          color=\"inherit\"\r\n          onClick={(event) => handleClick(event, crumb)}\r\n        >\r\n          {crumb.name}\r\n        </Link>\r\n      ))}\r\n    </Breadcrumbs>\r\n  );\r\n};\r\n\r\nexport default CustomBreadcrumbs;\r\n","import React, { useState, useEffect, useCallback } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { useParams, useHistory, useLocation } from 'react-router-dom';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport MenuBookIcon from '@material-ui/icons/MenuBook';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\r\nimport service from '../../service';\r\nimport Insights from './Insights';\r\nimport Courses from './Courses';\r\nimport Students from './Students';\r\nimport PageContainer from '../_shared/PageContainer';\r\nimport TabContent from '../_shared/TabContent';\r\nimport Breadcrumbs from '../_shared/Breadcrumbs';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  marginBottom: {\r\n    marginBottom: '1rem',\r\n  },\r\n  pagination: {\r\n    margin: '1rem auto',\r\n  },\r\n}));\r\n\r\nconst Lesson = (props) => {\r\n  const { crumbs, studentStore } = props;\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const params = useParams();\r\n  const location = useLocation();\r\n  const [loading, setLoading] = useState(false);\r\n  const [theClass, setTheClass] = useState([]);\r\n  const [courses, setCourses] = useState([]);\r\n\r\n  const classId = params.classId;\r\n\r\n  const loadStudents = useCallback(async () => {\r\n    await studentStore.loadStudents({ classId });\r\n  }, [studentStore, classId]);\r\n\r\n  const loadClass = useCallback(async () => {\r\n    const response = await service.loadClass(params.classId);\r\n    if (!response) return;\r\n    setTheClass(response.body.data);\r\n  }, [params.classId]);\r\n\r\n  const loadCourses = useCallback(async () => {\r\n    const response = await service.loadCourses({ classId });\r\n    if (!response) return;\r\n    setCourses(response.body.data);\r\n  }, [classId]);\r\n\r\n  const loadAll = useCallback(async () => {\r\n    setLoading(true);\r\n    const promises = [loadStudents(), loadCourses(), loadClass()];\r\n    await Promise.all(promises);\r\n    setLoading(false);\r\n  }, [loadClass, loadStudents, loadCourses]);\r\n\r\n  const onClickTab = (event, newTab) => {\r\n    const currentTab = params.classTab;\r\n    const newPath = location.pathname.replace(currentTab, newTab);\r\n    history.push(newPath);\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadAll();\r\n  }, [loadAll]);\r\n\r\n  if (loading || studentStore.isLoading) {\r\n    return <CircularProgress />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <AppBar position=\"static\">\r\n        <Tabs value={params.classTab} onChange={onClickTab}>\r\n          <Tab\r\n            label=\"Inzicht (klas)\"\r\n            value=\"class_insights\"\r\n            icon={<EqualizerIcon />}\r\n          />\r\n          <Tab label=\"Lessen\" value=\"class_lessons\" icon={<MenuBookIcon />} />\r\n          <Tab\r\n            label=\"Leerlingen\"\r\n            value=\"class_students\"\r\n            icon={<PeopleIcon />}\r\n          />\r\n        </Tabs>\r\n      </AppBar>\r\n      <PageContainer>\r\n        <Breadcrumbs crumbs={crumbs} />\r\n        <Grid item xs={12}>\r\n          <Typography variant=\"h4\" className={classes.marginBottom}>\r\n            {theClass.name}\r\n          </Typography>\r\n        </Grid>\r\n        <TabContent index=\"class_insights\" value={params.classTab}>\r\n          <Insights\r\n            topResults={studentStore.topResults}\r\n            bottomResults={studentStore.bottomResults}\r\n          />\r\n        </TabContent>\r\n        <TabContent index=\"class_lessons\" value={params.classTab}>\r\n          <Courses courses={courses} />\r\n        </TabContent>\r\n        <TabContent index=\"class_students\" value={params.classTab}>\r\n          <Students\r\n            students={studentStore.students}\r\n            bottomResults={studentStore.bottomResults}\r\n          />\r\n        </TabContent>\r\n      </PageContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default observer(Lesson);\r\n","import React, { useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Title from '../_shared/Title';\r\nimport { Doughnut } from 'react-chartjs-2';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n  fixedHeight: {\r\n    height: 400,\r\n  },\r\n}));\r\n\r\nconst CustomDoughnut = (props) => {\r\n  const { lessonAttempts, title } = props;\r\n  const classes = useStyles();\r\n  const { started, completed, notStarted } = lessonAttempts.reduce(\r\n    (acc, curr) => {\r\n      if (curr.isCompleted) {\r\n        acc.completed += 1;\r\n      } else if (curr.isStarted) {\r\n        acc.started += 1;\r\n      } else {\r\n        acc.notStarted += 1;\r\n      }\r\n      return acc;\r\n    },\r\n    { started: 0, completed: 0, notStarted: 0 }\r\n  );\r\n\r\n  useEffect(() => {}, []);\r\n\r\n  const data = {\r\n    datasets: [\r\n      {\r\n        data: [notStarted, started, completed],\r\n      },\r\n    ],\r\n    labels: ['Niet begonnen', 'Begonnen', 'Voltooid'],\r\n  };\r\n\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  return (\r\n    <Paper className={fixedHeightPaper}>\r\n      <Title>{title}</Title>\r\n      <Doughnut data={data} />\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default CustomDoughnut;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Title from '../_shared/Title';\r\nimport { Bar } from 'react-chartjs-2';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n  fixedHeight: {\r\n    height: 400,\r\n  },\r\n}));\r\n\r\nconst Histogram = (props) => {\r\n  const { lessonAttempts, title } = props;\r\n  const classes = useStyles();\r\n  const gradeDistribution = lessonAttempts.reduce(\r\n    (acc, curr) => {\r\n      const index = curr.performance;\r\n      acc[index - 1] += 1;\r\n      return acc;\r\n    },\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\r\n  );\r\n\r\n  const data = {\r\n    datasets: [\r\n      {\r\n        label: 'Aantal leerlingen',\r\n        data: gradeDistribution,\r\n      },\r\n    ],\r\n    labels: ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10'],\r\n  };\r\n\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  return (\r\n    <Paper className={fixedHeightPaper}>\r\n      <Title>{title}</Title>\r\n      <Bar data={data} />\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default Histogram;\r\n","import React, { useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { observer } from 'mobx-react-lite';\r\nimport Doughnut from './Doughnut';\r\nimport Histogram from './Histogram';\r\n\r\nconst calculateProgress = (questionGroupAttempts = []) => {\r\n  const total = questionGroupAttempts.length;\r\n  const completed = questionGroupAttempts.reduce((acc, curr) => {\r\n    if (curr.isCompleted) {\r\n      acc += 1;\r\n    }\r\n\r\n    return acc;\r\n  }, 0);\r\n\r\n  return total !== 0 ? Math.floor((completed / total) * 100) : 100;\r\n};\r\n\r\nconst columns = [\r\n  {\r\n    field: 'name',\r\n    headerName: 'Naam',\r\n    flex: 0.2,\r\n    valueGetter: (params) => params.row.student.name,\r\n  },\r\n  {\r\n    field: 'progress',\r\n    headerName: 'Voortgang (%)',\r\n    flex: 0.1,\r\n    valueGetter: (params) =>\r\n      calculateProgress(params.row.questionGroupAttempts),\r\n  },\r\n  {\r\n    field: 'duration',\r\n    headerName: 'Tijdsduur (minuten)',\r\n    flex: 0.15,\r\n  },\r\n  { field: 'correct', headerName: 'Correct', flex: 0.1, type: 'number' },\r\n  { field: 'incorrect', headerName: 'Incorrect', flex: 0.1, type: 'number' },\r\n  { field: 'performance', headerName: 'Prestatie', flex: 0.1, type: 'number' },\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  datagrid: {\r\n    marginTop: '1rem',\r\n    '& .MuiDataGrid-row:hover': {\r\n      cursor: 'pointer',\r\n    },\r\n  },\r\n}));\r\n\r\nconst Lesson = (props) => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const params = useParams();\r\n\r\n  const { lessonStore } = props;\r\n\r\n  useEffect(() => {\r\n    lessonStore.loadLessonAttempts(params.lessonId);\r\n  }, [lessonStore, params.lessonId]);\r\n\r\n  if (lessonStore.isLoading) {\r\n    return <CircularProgress />;\r\n  }\r\n\r\n  const onClickStudent = (event) =>\r\n    history.push(`/dashboard/students/${event.row.student.id}`);\r\n\r\n  return (\r\n    <Grid container spacing={2}>\r\n      <Grid item xs={12} md={6}>\r\n        <Doughnut\r\n          lessonAttempts={lessonStore.lessonAttempts}\r\n          title=\"Algemene voortgang\"\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} md={6}>\r\n        <Histogram\r\n          lessonAttempts={lessonStore.lessonAttempts}\r\n          title=\"Cijfer verdeling\"\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Paper>\r\n          <DataGrid\r\n            className={classes.datagrid}\r\n            autoHeight\r\n            rows={lessonStore.lessonAttempts}\r\n            columns={columns}\r\n            pageSize={12}\r\n            onRowClick={onClickStudent}\r\n          />\r\n        </Paper>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default observer(Lesson);\r\n","import React, { useEffect } from 'react';\r\nimport { useParams, useHistory, useLocation } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\n\r\nconst typeLabels = {\r\n  open: 'Open',\r\n  clickTheRightWords: 'Selecteer het correcte antwoord',\r\n  multipleChoice: 'Meerkeuze',\r\n  divideTheWord: 'Verdeel het woord',\r\n  combineAndFillInTheBlanks: 'Combineer en vul in',\r\n};\r\n\r\nconst columns = [\r\n  {\r\n    field: 'name',\r\n    headerName: 'Naam',\r\n\r\n    flex: 0.2,\r\n  },\r\n  {\r\n    field: 'index',\r\n    headerName: 'Opdrachtnummer',\r\n    flex: 0.1,\r\n    type: 'number',\r\n    valueGetter: (params) => params.value + 1,\r\n  },\r\n  {\r\n    field: 'questionGroups',\r\n    headerName: 'Vragen',\r\n    flex: 0.1,\r\n    valueGetter: (params) => params.row.questions.length,\r\n    type: 'number',\r\n  },\r\n  {\r\n    field: 'type',\r\n    headerName: 'Type',\r\n    flex: 0.2,\r\n    valueGetter: (params) => {\r\n      const type = params.row.questions[0].type;\r\n      const label = typeLabels[type] || type;\r\n      return label;\r\n    },\r\n  },\r\n  {\r\n    field: 'averageScore',\r\n    headerName: 'Gem. score (%)',\r\n    flex: 0.1,\r\n    type: 'number',\r\n  },\r\n  {\r\n    field: 'completions',\r\n    headerName: 'Klaar',\r\n    flex: 0.1,\r\n    type: 'number',\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  datagrid: {\r\n    marginTop: '1rem',\r\n    '& .MuiDataGrid-row:hover': {\r\n      cursor: 'pointer',\r\n    },\r\n  },\r\n}));\r\n\r\nconst LessonContent = (props) => {\r\n  const { lessonStore } = props;\r\n  const location = useLocation();\r\n  const classes = useStyles();\r\n  const params = useParams();\r\n  const history = useHistory();\r\n\r\n  const onClickStudent = (event) =>\r\n    history.push(\r\n      `${location.pathname}/questionGroups/${event.row.id}/question_group_insights`\r\n    );\r\n\r\n  useEffect(() => {\r\n    lessonStore.loadLesson(params.lessonId);\r\n  }, [lessonStore, params.lessonId]);\r\n\r\n  if (lessonStore.isLoading || !lessonStore.lesson) {\r\n    return <CircularProgress />;\r\n  }\r\n\r\n  return (\r\n    <DataGrid\r\n      className={classes.datagrid}\r\n      autoHeight\r\n      rows={lessonStore.lesson.questionGroups}\r\n      columns={columns}\r\n      pageSize={12}\r\n      onRowClick={onClickStudent}\r\n      sortModel={[\r\n        {\r\n          field: 'index',\r\n          sort: 'asc',\r\n        },\r\n      ]}\r\n    />\r\n  );\r\n};\r\n\r\nexport default observer(LessonContent);\r\n","import React from 'react';\r\nimport { useParams, useHistory, useLocation } from 'react-router-dom';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { observer } from 'mobx-react-lite';\r\nimport Insights from './Insights';\r\nimport Questions from './LessonContent';\r\nimport TabContent from '../_shared/TabContent';\r\nimport Breadcrumbs from '../_shared/Breadcrumbs';\r\nimport PageContainer from '../_shared/PageContainer';\r\n\r\nconst Lesson = (props) => {\r\n  const { crumbs } = props;\r\n  const history = useHistory();\r\n  const params = useParams();\r\n  const location = useLocation();\r\n\r\n  const onClickTab = (event, newTab) => {\r\n    const currentTab = params.lessonTab;\r\n    const newPath = location.pathname.replace(currentTab, newTab);\r\n    history.push(newPath);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <AppBar position=\"static\">\r\n        <Tabs value={params.lessonTab} onChange={onClickTab}>\r\n          <Tab\r\n            label=\"Inzicht (les)\"\r\n            value=\"lesson_insights\"\r\n            icon={<EqualizerIcon />}\r\n          />\r\n          <Tab\r\n            label=\"Opdrachten\"\r\n            value=\"lesson_questions\"\r\n            icon={<EditIcon />}\r\n          />\r\n        </Tabs>\r\n      </AppBar>\r\n\r\n      <PageContainer maxWidth=\"lg\">\r\n        <Breadcrumbs crumbs={crumbs} />\r\n        <TabContent index=\"lesson_insights\" value={params.lessonTab}>\r\n          <Insights {...props} />\r\n        </TabContent>\r\n        <TabContent index=\"lesson_questions\" value={params.lessonTab}>\r\n          <Questions {...props} />\r\n        </TabContent>\r\n      </PageContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default observer(Lesson);\r\n","import React from 'react';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\r\n\r\nconst Lesson = (props) => {\r\n  const { name, id, prefix } = props;\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const onClick = () => history.push(`${location.pathname}/lessons/${id}`);\r\n\r\n  return (\r\n    <ListItem\r\n      component=\"div\"\r\n      alignItems=\"flex-start\"\r\n      key={id}\r\n      button\r\n      onClick={onClick}\r\n    >\r\n      <ListItemText primary={`${prefix} - ${name}`} />\r\n      <ListItemSecondaryAction>\r\n        <IconButton edge=\"end\" aria-label=\"comments\">\r\n          <ArrowForwardIosIcon />\r\n        </IconButton>\r\n      </ListItemSecondaryAction>\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nexport default Lesson;\r\n","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport Lesson from './Lesson';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  fullWidth: {\r\n    width: '100%',\r\n  },\r\n}));\r\n\r\nconst Course = (props) => {\r\n  const { name, id, lessons } = props;\r\n  const classes = useStyles();\r\n  const [expanded, setExpanded] = useState(true);\r\n  const onChange = () => setExpanded(!expanded);\r\n  return (\r\n    <ListItem component=\"div\" alignItems=\"flex-start\" key={id}>\r\n      <Accordion\r\n        className={classes.fullWidth}\r\n        TransitionProps={{ unmountOnExit: true }}\r\n        expanded={expanded}\r\n        onChange={onChange}\r\n      >\r\n        <AccordionSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel1a-content\"\r\n          id=\"panel1a-header\"\r\n        >\r\n          <Typography>{name}</Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n          <List\r\n            subheader={\r\n              <ListSubheader component=\"div\" id=\"nested-list-subheader\">\r\n                Lessen\r\n              </ListSubheader>\r\n            }\r\n            style={{ width: '100%' }}\r\n          >\r\n            {lessons.map((lesson) => (\r\n              <Lesson key={lesson.id} {...lesson} />\r\n            ))}\r\n          </List>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nexport default Course;\r\n","import React from 'react';\r\nimport List from '@material-ui/core/List';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport Course from './Course';\r\n\r\nconst Courses = (props) => {\r\n  const { courses } = props;\r\n  return (\r\n    <List\r\n      subheader={\r\n        <ListSubheader component=\"div\" id=\"nested-list-subheader\">\r\n          Cursussen\r\n        </ListSubheader>\r\n      }\r\n    >\r\n      {courses.map((course) => (\r\n        <Course key={course.id} {...course} />\r\n      ))}\r\n    </List>\r\n  );\r\n};\r\n\r\nexport default Courses;\r\n","import React from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  title: {\r\n    textAlign: 'center',\r\n    background: 'black',\r\n    color: 'white',\r\n    alignItems: 'baseline',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n  },\r\n}));\r\n\r\nconst ProfileHeader = (props) => {\r\n  const { name } = props;\r\n  const classes = useStyles();\r\n  return (\r\n    <Paper className={classes.title}>\r\n      <Typography style={{ variant: 'h5' }}> Naam Leerling: </Typography>\r\n      <Typography style={{ variant: 'h6', marginLeft: '10%' }}>\r\n        {name}\r\n      </Typography>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default ProfileHeader;\r\n","import React from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport RestoreIcon from '@material-ui/icons/Restore';\r\n\r\nconst createRow = (courseName, lessonName, category) => ({\r\n  courseName,\r\n  lessonName,\r\n  category,\r\n});\r\n\r\nconst getIcon = (category) => {\r\n  switch (category) {\r\n    case 'progress':\r\n      return <RestoreIcon style={{ color: 'orange' }} />;\r\n    case 'completed':\r\n      return <DoneIcon style={{ color: 'green' }} />;\r\n    default:\r\n      return <ClearIcon style={{ color: 'red' }} />;\r\n  }\r\n};\r\n\r\nconst getRows = (courses) => {\r\n  const rows = [];\r\n\r\n  courses.forEach((course) => {\r\n    const courseName = course.name;\r\n    course.lessons.forEach((lesson) => {\r\n      const lessonName = lesson.name;\r\n      lesson.lessonAttempts.forEach((lessonAttempt) => {\r\n        if (lessonAttempt.isStarted && lessonAttempt.isCompleted) {\r\n          rows.push(createRow(courseName, lessonName, 'completed'));\r\n        } else if (lessonAttempt.isStarted && !lessonAttempt.isCompleted) {\r\n          rows.push(createRow(courseName, lessonName, 'progress'));\r\n        } else {\r\n          rows.push(createRow(courseName, lessonName, 'notstarted'));\r\n        }\r\n      });\r\n    });\r\n  });\r\n  return rows;\r\n};\r\n\r\nconst Progress = (props) => {\r\n  const { courses } = props;\r\n  const rows = getRows(courses);\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table aria-label=\"spanning table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell align=\"left\">Cursus</TableCell>\r\n            <TableCell align=\"left\">Les</TableCell>\r\n            <TableCell align=\"left\">Voortgang</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map((row, index) => (\r\n            <TableRow key={index}>\r\n              {index === 0 ? (\r\n                <TableCell rowSpan={rows.length}> {row.courseName}</TableCell>\r\n              ) : null}\r\n\r\n              <TableCell align=\"left\">{row.lessonName}</TableCell>\r\n              <TableCell> {getIcon(row.category)} </TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\nexport default Progress;\r\n","import React, { useState, useEffect, useCallback } from 'react';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { useParams } from 'react-router-dom';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport PageContainer from '../_shared/PageContainer';\r\nimport service from '../../service';\r\nimport Courses from './Courses';\r\nimport ProfileHeader from './ProfileHeader';\r\nimport Progress from './Progress';\r\nimport PaperWithHeader from '../_shared/PaperWithHeader';\r\nimport ProgressBar from '../_shared/ProgressBar';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  widget: {\r\n    height: 230,\r\n    padding: theme.spacing(3),\r\n    marginBottom: theme.spacing(12),\r\n  },\r\n  paper: {\r\n    borderBottomLeftRadius: 4,\r\n    borderBottomRightRadius: 4,\r\n    borderTopLeftRadius: 0,\r\n    borderTopRightRadius: 0,\r\n    height: 230,\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nconst Student = (props) => {\r\n  const classes = useStyles();\r\n  const params = useParams();\r\n  const theme = useTheme();\r\n  const [loading, setLoading] = useState(false);\r\n  const [student, setStudent] = useState([]);\r\n  const [courses, setCourses] = useState([]);\r\n\r\n  const loadCourses = useCallback(async () => {\r\n    const studentId = params.studentId;\r\n    const response = await service.loadCourses({ studentId });\r\n    if (!response) {\r\n      return;\r\n    }\r\n    setCourses(response.body.data);\r\n  }, [params.studentId]);\r\n\r\n  const loadStudent = useCallback(async () => {\r\n    const studentId = params.studentId;\r\n    const response = await service.loadStudent(studentId);\r\n    if (!response) {\r\n      return;\r\n    }\r\n    setStudent(response.body.data);\r\n  }, [params.studentId]);\r\n\r\n  const loadAll = useCallback(async () => {\r\n    setLoading(true);\r\n\r\n    const promises = [loadCourses(), loadStudent()];\r\n    await Promise.all(promises);\r\n\r\n    setLoading(false);\r\n  }, [loadCourses, loadStudent]);\r\n\r\n  useEffect(() => {\r\n    loadAll();\r\n  }, [loadAll]);\r\n\r\n  if (loading) {\r\n    return <CircularProgress />;\r\n  }\r\n\r\n  return (\r\n    <PageContainer>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12}>\r\n          <ProfileHeader {...student} />\r\n        </Grid>\r\n        <Grid container spacing={3} className={classes.widget}>\r\n          <Grid item xs={12}>\r\n            <Progress courses={courses} />\r\n          </Grid>\r\n\r\n          <PaperWithHeader\r\n            headercolor={theme.widget.secondary.main}\r\n            headertitle=\"Probleem categorieën\"\r\n          >\r\n            <Paper className={classes.paper}>\r\n              <ProgressBar title=\"1. Herken morfemen in woorden\" value={38} />\r\n              <ProgressBar title=\"2. Herken morfemen in een zin\" value={48} />\r\n              <ProgressBar title=\"3. Verwisselen morfemen\" value={55} />\r\n            </Paper>\r\n          </PaperWithHeader>\r\n          <PaperWithHeader\r\n            headercolor={theme.widget.secondary.main}\r\n            headertitle=\"Top categorieën\"\r\n          >\r\n            <Paper className={classes.paper}>\r\n              <ProgressBar title=\"1. Betekenis morfemen\" value={97} />\r\n              <ProgressBar title=\"2. Splits morfemen\" value={83} />\r\n              <ProgressBar\r\n                title=\"3. Alternatieve betekenis morfemen\"\r\n                value={74}\r\n              />\r\n            </Paper>\r\n          </PaperWithHeader>\r\n          <Grid item xs={12}>\r\n            <Courses courses={courses} />\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </PageContainer>\r\n  );\r\n};\r\n\r\nexport default observer(Student);\r\n","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Modal from '@material-ui/core/Modal';\r\n\r\nimport Title from '../_shared/Title';\r\n\r\nconst convertDateToReadableString = (date) => {\r\n  return `${date.substring(0, 10)} ${date.substring(11, 19)}`;\r\n};\r\n\r\nconst columns = [\r\n  {\r\n    field: 'updatedAt',\r\n    headerName: 'Datum',\r\n    flex: 0.2,\r\n    renderCell: (params) => convertDateToReadableString(params.row.updatedAt),\r\n  },\r\n  {\r\n    field: 'questionGroup',\r\n    headerName: 'Vraag groep',\r\n    flex: 0.4,\r\n    valueGetter: (params) => params.row.question.questions.name,\r\n  },\r\n  {\r\n    field: 'questionGroupIndex',\r\n    headerName: 'Vraag groep index',\r\n    flex: 0.2,\r\n    valueGetter: (params) => params.row.question.questions.index + 1,\r\n  },\r\n  {\r\n    field: 'question',\r\n    headerName: 'Vraag nummer',\r\n    flex: 0.2,\r\n    valueGetter: (params) => params.row.question.index + 1,\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    position: 'absolute',\r\n    width: 400,\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n  },\r\n  datagrid: {\r\n    marginTop: '1rem',\r\n    '& .MuiDataGrid-row:hover': {\r\n      cursor: 'pointer',\r\n    },\r\n  },\r\n}));\r\n\r\nconst QuestionAttempts = (props) => {\r\n  const classes = useStyles();\r\n  const { questionAttempts } = props;\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const [modalContent, setModalContent] = useState({});\r\n\r\n  const handleModalOpen = (event) => {\r\n    setModalContent(event.row);\r\n    setModalOpen(true);\r\n  };\r\n\r\n  const handleModalClose = () => {\r\n    setModalOpen(false);\r\n    setModalContent({});\r\n  };\r\n\r\n  const Body = React.forwardRef((props, ref) => (\r\n    <div {...props} className={classes.paper} ref={ref}>\r\n      <h2 id=\"simple-modal-title\">Antwoord</h2>\r\n      <p id=\"simple-modal-description\">{JSON.stringify(modalContent.answer)}</p>\r\n    </div>\r\n  ));\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Modal\r\n        open={modalOpen}\r\n        onClose={handleModalClose}\r\n        aria-labelledby=\"simple-modal-title\"\r\n        aria-describedby=\"simple-modal-description\"\r\n      >\r\n        <Body />\r\n      </Modal>\r\n      <Title>Antwoorden</Title>\r\n      <Grid item xs={12}>\r\n        <DataGrid\r\n          className={classes.datagrid}\r\n          autoHeight\r\n          rows={questionAttempts}\r\n          columns={columns}\r\n          pageSize={5}\r\n          onRowClick={(event) => handleModalOpen(event)}\r\n        />\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default QuestionAttempts;\r\n","import React, { useEffect, useCallback } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\n// import BarGraph from './BarGraph'; // TODO (working on this): IF we want to implement all question types\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport PageContainer from '../_shared/PageContainer';\r\nimport QuestionAttempts from './QuestionAttempts';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n}));\r\n\r\nconst StudentLesson = (props) => {\r\n  const { questionStore } = props;\r\n  const classes = useStyles();\r\n  const params = useParams();\r\n\r\n  const loadAll = useCallback(async () => {\r\n    await questionStore.loadQuestionAttemptsWithInfo(\r\n      params.studentId,\r\n      params.lessonId\r\n    );\r\n  }, [questionStore, params.studentId, params.lessonId]);\r\n\r\n  useEffect(() => {\r\n    loadAll();\r\n  }, [loadAll]);\r\n\r\n  if (questionStore.isLoading) {\r\n    return <CircularProgress />;\r\n  }\r\n\r\n  return (\r\n    <PageContainer>\r\n      {/* / TODO (working on this): IF we want to implement all question types\r\n      <Grid item xs={12} md={12}>\r\n        <BarGraph\r\n          questionAttempts={questionStore.questionAttempts}\r\n          title=\"Correctheid verdeling per vraag\"\r\n        />\r\n      </Grid> */}\r\n      <Grid item xs={12}>\r\n        <Paper className={classes.paper}>\r\n          <QuestionAttempts questionAttempts={questionStore.questionAttempts} />\r\n        </Paper>\r\n      </Grid>\r\n    </PageContainer>\r\n  );\r\n};\r\n\r\nexport default StudentLesson;\r\n","import React from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport Title from '../_shared/Title';\r\n\r\nconst calculateDistribution = (\r\n  questionGroupAttempts,\r\n  amountQuestions,\r\n  questionIds\r\n) => {\r\n  const correctPerQuestion = Array(amountQuestions).fill(0);\r\n  const incorrectPerQuestion = Array(amountQuestions).fill(0);\r\n  const missedPerQuestion = Array(amountQuestions).fill(0);\r\n\r\n  questionGroupAttempts.forEach((questionGroupAttempt) => {\r\n    if (questionGroupAttempt.isCompleted) {\r\n      questionGroupAttempt.questionAttempts.forEach((questionAttempt) => {\r\n        const indexCorrect = questionIds.findIndex(\r\n          (el) => el === questionAttempt.questionId && questionAttempt.correct\r\n        );\r\n        correctPerQuestion[indexCorrect] += 1;\r\n        const indexIncorrect = questionIds.findIndex(\r\n          (el) => el === questionAttempt.questionId && questionAttempt.incorrect\r\n        );\r\n        incorrectPerQuestion[indexIncorrect] += 1;\r\n        const indexMissed = questionIds.findIndex(\r\n          (el) => el === questionAttempt.questionId && questionAttempt.missed\r\n        );\r\n        missedPerQuestion[indexMissed] += 1;\r\n      });\r\n    }\r\n  });\r\n  return [correctPerQuestion, incorrectPerQuestion, missedPerQuestion];\r\n};\r\n\r\nconst getLabels = (amountQuestions) => {\r\n  const labels = [];\r\n  for (let i = 0; i < amountQuestions; i++) {\r\n    labels.push('Vraag ' + parseInt(i + 1));\r\n  }\r\n  return labels;\r\n};\r\n\r\nconst BarGraph = (props) => {\r\n  const { questionGroup, title } = props;\r\n  const amountQuestions = questionGroup.questions.length;\r\n  const questionIds = [];\r\n  questionGroup.questions.forEach((question) => {\r\n    questionIds.push(question.id);\r\n  });\r\n\r\n  const distributions = calculateDistribution(\r\n    questionGroup.questionGroupAttempts,\r\n    amountQuestions,\r\n    questionIds\r\n  );\r\n  const data = {\r\n    datasets: [\r\n      {\r\n        label: 'Aantal juiste antwoorden',\r\n        data: distributions[0],\r\n      },\r\n      {\r\n        label: 'Aantal incorrect antwoorden',\r\n        data: distributions[1],\r\n      },\r\n      {\r\n        label: 'Aantal gemiste antwoorden',\r\n        data: distributions[2],\r\n      },\r\n    ],\r\n    labels: getLabels(amountQuestions),\r\n  };\r\n\r\n  return (\r\n    <Paper>\r\n      <Title>{title}</Title>\r\n      <Bar data={data} />\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default BarGraph;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Title from '../_shared/Title';\r\nimport { Doughnut } from 'react-chartjs-2';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    textAlign: 'center',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n  fixedHeight: {\r\n    height: 400,\r\n  },\r\n}));\r\n\r\nconst CustomDoughnut = (props) => {\r\n  const { questionGroupAttempts, title } = props;\r\n  const classes = useStyles();\r\n  const { correct, incorrect, missed } = questionGroupAttempts.reduce(\r\n    (acc, curr) => {\r\n      acc.correct += curr.correct;\r\n      acc.incorrect += curr.incorrect;\r\n      acc.missed += curr.missed;\r\n      return acc;\r\n    },\r\n    { correct: 0, incorrect: 0, missed: 0 }\r\n  );\r\n\r\n  const data = {\r\n    datasets: [\r\n      {\r\n        data: [correct, incorrect, missed],\r\n      },\r\n    ],\r\n    labels: ['Correct', 'Incorrect', 'Gemist'],\r\n  };\r\n\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  return (\r\n    <Paper className={fixedHeightPaper}>\r\n      <Title>{title}</Title>\r\n      <Doughnut data={data} />\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default CustomDoughnut;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Typography } from '@material-ui/core';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport PropTypes from 'prop-types';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    height: 180,\r\n    display: 'flex',\r\n    width: 600,\r\n  },\r\n  widget: {\r\n    height: '100%',\r\n    color: 'white',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    textAlign: 'center',\r\n\r\n    padding: theme.spacing(2),\r\n  },\r\n  widgetTop: {\r\n    fontWeight: 400,\r\n    padding: theme.spacing(2),\r\n  },\r\n  widgetBottom: {\r\n    fontWeight: 100,\r\n    padding: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst Tile = (props) => {\r\n  const { questionGroup, title, number, color } = props;\r\n  const classes = useStyles();\r\n  const amountLessons = questionGroup.questions.length;\r\n  const averageElapsedTime = questionGroup.averageElapsedTime;\r\n  const value = number === 1 ? amountLessons : averageElapsedTime + ' sec.';\r\n\r\n  return (\r\n    <Card style={{ backgroundColor: color }} className={classes.card}>\r\n      <CardActionArea onClick={props.onClick}>\r\n        <CardContent>\r\n          <Grid container spacing={1} className={classes.widget}>\r\n            <Typography variant=\"h5\" className={classes.widgetTop}>\r\n              {title}\r\n            </Typography>\r\n            <Typography variant=\"h5\" className={classes.widgetBottom}>\r\n              {value}\r\n            </Typography>\r\n          </Grid>\r\n        </CardContent>\r\n      </CardActionArea>\r\n    </Card>\r\n  );\r\n};\r\n\r\nTile.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Tile;\r\n","import React, { useEffect, useCallback } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport BarGraph from './BarGraph';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Doughnut from './Doughnut';\r\nimport Tile from './Tile';\r\nimport { observer } from 'mobx-react-lite';\r\n\r\nconst Insights = (props) => {\r\n  const { questionStore } = props;\r\n  const theme = useTheme();\r\n  const params = useParams();\r\n\r\n  const loadAll = useCallback(async () => {\r\n    await questionStore.loadQuestionGroupWithAttempts(params.questionGroupId);\r\n  }, [questionStore, params.questionGroupId]);\r\n\r\n  useEffect(() => {\r\n    loadAll();\r\n  }, [loadAll]);\r\n\r\n  if (questionStore.isLoading || !questionStore.questionGroup) {\r\n    return <CircularProgress />;\r\n  }\r\n\r\n  return (\r\n    <Grid container spacing={2}>\r\n      <Grid item xs={12} md={6}>\r\n        <Doughnut\r\n          questionGroupAttempts={\r\n            questionStore.questionGroup.questionGroupAttempts\r\n          }\r\n          title=\"Correctheid verdeling van de vragen\"\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} md={6} style={{ padding: '1rem' }}>\r\n        <Tile\r\n          questionGroup={questionStore.questionGroup}\r\n          title=\"Totaal aantal vragen: \"\r\n          number={1}\r\n          color={theme.widget.tertiary.main}\r\n        />\r\n        <Tile\r\n          questionGroup={questionStore.questionGroup}\r\n          title=\"Gemiddelde tijdsduur vragengroep: \"\r\n          number={2}\r\n          color={theme.widget.secondary.main}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} md={12}>\r\n        <BarGraph\r\n          questionGroup={questionStore.questionGroup}\r\n          title=\"Correctheid verdeling per vraag\"\r\n        />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default observer(Insights);\r\n","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport CancelRoundedIcon from '@material-ui/icons/CancelRounded';\r\nimport ClearRoundedIcon from '@material-ui/icons/ClearRounded';\r\nimport CheckCircleRoundedIcon from '@material-ui/icons/CheckCircleRounded';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Popover from '@material-ui/core/Popover';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  fullWidth: {\r\n    width: '100%',\r\n  },\r\n  popover: {\r\n    pointerEvents: 'none',\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst RemoveButton = ({ onClick }) => (\r\n  <label htmlFor=\"icon-button-file\">\r\n    <IconButton\r\n      color=\"primary\"\r\n      aria-label=\"upload picture\"\r\n      component=\"span\"\r\n      onClick={onClick}\r\n    >\r\n      <ClearRoundedIcon />\r\n    </IconButton>\r\n  </label>\r\n);\r\n\r\nconst MultipleChoice = (props) => {\r\n  const classes = useStyles();\r\n  const { id, instruction, data: originalData, save, setIsBlocking } = props;\r\n  const dataCopy = { ...originalData };\r\n  const [data, setData] = useState(dataCopy);\r\n  const [popoverText, setPopoverText] = useState('');\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [editing, setEditing] = useState(false);\r\n\r\n  const addOption = () => {\r\n    setIsBlocking(true);\r\n    const newOption = { isCorrect: false, value: '' };\r\n    const newOptions = [...data.options, newOption];\r\n    const newData = { ...data, options: newOptions };\r\n    setData(newData);\r\n  };\r\n\r\n  const removeOption = (optionToRemove) => {\r\n    setIsBlocking(true);\r\n    const newOptions = data.options.filter(\r\n      (option) => option !== optionToRemove\r\n    );\r\n    const newData = { ...data, options: newOptions };\r\n    setData(newData);\r\n  };\r\n\r\n  const editOption = (optionToEdit, event) => {\r\n    setIsBlocking(true);\r\n    const newOptions = data.options.map((option) => {\r\n      if (option === optionToEdit) {\r\n        return { ...option, value: event.target.value };\r\n      }\r\n      return option;\r\n    });\r\n    const newData = { ...data, options: newOptions };\r\n    setData(newData);\r\n  };\r\n\r\n  const editCorrect = (newCorrectOption, event) => {\r\n    setIsBlocking(true);\r\n    const newOptions = data.options.map((option) => {\r\n      if (option === newCorrectOption) {\r\n        return { ...newCorrectOption, isCorrect: !option.isCorrect };\r\n      }\r\n      return option;\r\n    });\r\n    const newData = { ...data, options: newOptions };\r\n    setData(newData);\r\n  };\r\n\r\n  const enableEdit = () => setEditing(true);\r\n\r\n  const saveEdit = () => {\r\n    handlePopoverClose();\r\n    setEditing(false);\r\n    save(data);\r\n    setIsBlocking(false);\r\n  };\r\n\r\n  const cancelEdit = () => {\r\n    handlePopoverClose();\r\n    setEditing(false);\r\n    setData(originalData);\r\n    setIsBlocking(false);\r\n  };\r\n\r\n  const handlePopoverOpen = (event, message) => {\r\n    setPopoverText(message);\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handlePopoverClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const open = Boolean(anchorEl);\r\n\r\n  return (\r\n    <>\r\n      <Popover\r\n        id=\"mouse-over-popover\"\r\n        className={classes.popover}\r\n        classes={{\r\n          paper: classes.paper,\r\n        }}\r\n        open={open}\r\n        anchorEl={anchorEl}\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'left',\r\n        }}\r\n        transformOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'left',\r\n        }}\r\n        onClose={handlePopoverClose}\r\n        disableRestoreFocus\r\n      >\r\n        <Typography>{popoverText}</Typography>\r\n      </Popover>\r\n      <ListItem component=\"div\" alignItems=\"flex-start\" key={id}>\r\n        <Grid container>\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"body1\" className={classes.marginBottom}>\r\n              {instruction}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Typography>{data.value}</Typography>\r\n          </Grid>\r\n          <Grid item xs={10}>\r\n            <FormControl component=\"fieldset\">\r\n              <FormLabel component=\"legend\">\r\n                Selecteer het juiste antwoord\r\n              </FormLabel>\r\n              <RadioGroup>\r\n                {data.options.map((option, index) => (\r\n                  <div key={index}>\r\n                    <FormControlLabel\r\n                      value={option.value}\r\n                      control={\r\n                        <Radio\r\n                          color=\"primary\"\r\n                          checked={option.isCorrect}\r\n                          onClick={(event) => editCorrect(option, event)}\r\n                        />\r\n                      }\r\n                      label={\r\n                        editing ? (\r\n                          <TextField\r\n                            value={option.value}\r\n                            onChange={(event) => editOption(option, event)}\r\n                            placeholder=\"Nieuw antwoord\"\r\n                          />\r\n                        ) : (\r\n                          option.value\r\n                        )\r\n                      }\r\n                      disabled={!editing}\r\n                    />\r\n                    {editing && (\r\n                      <RemoveButton onClick={() => removeOption(option)} />\r\n                    )}\r\n                  </div>\r\n                ))}\r\n              </RadioGroup>\r\n              {editing ? (\r\n                <label htmlFor=\"icon-button-file\">\r\n                  <IconButton\r\n                    color=\"primary\"\r\n                    aria-label=\"upload picture\"\r\n                    component=\"span\"\r\n                    onClick={addOption}\r\n                  >\r\n                    <AddCircleIcon />\r\n                  </IconButton>\r\n                  Antwoord toevoegen\r\n                </label>\r\n              ) : null}\r\n            </FormControl>\r\n          </Grid>\r\n          {editing ? (\r\n            <>\r\n              <Grid item xs={1}>\r\n                <IconButton\r\n                  color=\"primary\"\r\n                  aria-label=\"upload picture\"\r\n                  component=\"span\"\r\n                  onClick={saveEdit}\r\n                  onMouseEnter={(e) =>\r\n                    handlePopoverOpen(e, 'Aanpassingen opslaan')\r\n                  }\r\n                  onMouseLeave={handlePopoverClose}\r\n                  aria-owns={open ? 'mouse-over-popover' : undefined}\r\n                  aria-haspopup=\"true\"\r\n                >\r\n                  <CheckCircleRoundedIcon />\r\n                </IconButton>\r\n              </Grid>\r\n              <Grid item xs={1}>\r\n                <IconButton\r\n                  color=\"secondary\"\r\n                  component=\"span\"\r\n                  onClick={cancelEdit}\r\n                  onMouseEnter={(e) =>\r\n                    handlePopoverOpen(e, 'Aanpassingen ongedaan maken')\r\n                  }\r\n                  onMouseLeave={handlePopoverClose}\r\n                  aria-owns={open ? 'mouse-over-popover' : undefined}\r\n                  aria-haspopup=\"true\"\r\n                >\r\n                  <CancelRoundedIcon />\r\n                </IconButton>\r\n              </Grid>\r\n            </>\r\n          ) : (\r\n            <Grid item xs={2}>\r\n              <IconButton\r\n                color=\"primary\"\r\n                onClick={enableEdit}\r\n                onMouseEnter={(e) => handlePopoverOpen(e, 'Vraag aanpassen')}\r\n                onMouseLeave={handlePopoverClose}\r\n                aria-owns={open ? 'mouse-over-popover' : undefined}\r\n                aria-haspopup=\"true\"\r\n              >\r\n                <EditIcon />\r\n              </IconButton>\r\n            </Grid>\r\n          )}\r\n        </Grid>\r\n      </ListItem>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MultipleChoice;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  fullWidth: {\r\n    width: '100%',\r\n  },\r\n}));\r\n\r\nconst MultipleChoiceGroup = (props) => {\r\n  const { id, index, data } = props;\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <ListItem component=\"div\" alignItems=\"flex-start\" key={id}>\r\n      <Grid container>\r\n        <Grid item xs={12} md={6} className={classes.fullWidth}>\r\n          <Typography>{`${index + 1}. ${data.word}`}</Typography>\r\n        </Grid>\r\n        {(data.morphemes || []).map((morpheme, index) => (\r\n          <Grid item xs={12} key={morpheme.value}>\r\n            <Typography>{morpheme.value}</Typography>\r\n            <RadioGroup>\r\n              {morpheme.options.map((option, index) => (\r\n                <div key={index}>\r\n                  <FormControlLabel\r\n                    value={option.value}\r\n                    disabled\r\n                    control={\r\n                      <Radio color=\"primary\" checked={option.isCorrect} />\r\n                    }\r\n                    label={\r\n                      <TextField\r\n                        value={option.value}\r\n                        placeholder=\"Nieuw antwoord\"\r\n                        disabled\r\n                      />\r\n                    }\r\n                  />\r\n                </div>\r\n              ))}\r\n            </RadioGroup>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nexport default MultipleChoiceGroup;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  fullWidth: {\r\n    width: '100%',\r\n  },\r\n}));\r\n\r\nconst Open = (props) => {\r\n  const { id } = props;\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <ListItem component=\"div\" alignItems=\"flex-start\" key={id}>\r\n      <Grid container>\r\n        <Grid item xs={12} md={6} className={classes.fullWidth}>\r\n          <Typography variant=\"body1\">\r\n            {`${props.index + 1}. ${props.instruction}`}\r\n          </Typography>\r\n          <TextField\r\n            disabled\r\n            multiline\r\n            rows={4}\r\n            className={classes.fullWidth}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nexport default Open;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  fullWidth: {\r\n    width: '100%',\r\n  },\r\n}));\r\n\r\nconst insertDividers = (word, answer, divider = ' | ') => {\r\n  const spread = divider.length;\r\n\r\n  answer.forEach((slice, index) => {\r\n    const pre = word.slice(0, slice + index * spread);\r\n    const post = word.slice(slice + index * spread);\r\n    word = `${pre}${divider}${post}`;\r\n  });\r\n\r\n  return word;\r\n};\r\n\r\nconst DivideTheWord = (props) => {\r\n  const { id, data } = props;\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <ListItem component=\"div\" alignItems=\"flex-start\" key={id}>\r\n      <Grid container>\r\n        <Grid item xs={12} md={6} className={classes.fullWidth}>\r\n          <Typography variant=\"body1\">{`${props.index + 1}. ${\r\n            data.word\r\n          }`}</Typography>\r\n          <Typography>\r\n            {insertDividers(data.word, data.correctAnswer)}\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nexport default DivideTheWord;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  fullWidth: {\r\n    width: '100%',\r\n  },\r\n}));\r\n\r\nconst ClickTheRightWords = (props) => {\r\n  const { id } = props;\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <ListItem component=\"div\" alignItems=\"flex-start\" key={id}>\r\n      <Grid container>\r\n        <Grid item xs={12}>\r\n          <Typography variant=\"body1\" className={classes.marginBottom}>\r\n            {/* {instruction} */}\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Typography>Oh oh, dit wordt nog niet ondersteund.</Typography>\r\n        </Grid>\r\n      </Grid>\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nexport default ClickTheRightWords;\r\n","import React, { useState } from 'react';\r\nimport { Prompt } from 'react-router-dom';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport MultipleChoice from '../_shared/questionTypes/MultipleChoice';\r\nimport MultipleChoiceGroup from '../_shared/questionTypes/MultipleChoiceGroup';\r\nimport Open from '../_shared/questionTypes/Open';\r\nimport DivideTheWord from '../_shared/questionTypes/DivideTheWord';\r\nimport ClickTheRightWords from '../_shared/questionTypes/clickTheRightWords';\r\n\r\nconst Question = (props) => {\r\n  const { type } = props;\r\n  switch (type) {\r\n    case 'multipleChoice':\r\n      return <MultipleChoice {...props} />;\r\n    case 'multipleChoiceGroup':\r\n      return <MultipleChoiceGroup {...props} />;\r\n    case 'open':\r\n      return <Open {...props} />;\r\n    case 'divideTheWord':\r\n      return <DivideTheWord {...props} />;\r\n    case 'clickTheRightWords':\r\n      return <ClickTheRightWords {...props} />;\r\n    default:\r\n      return (\r\n        <p>{`Er is iets fout gegaan, ${type} wordt niet herkend als vraag type`}</p>\r\n      );\r\n  }\r\n};\r\n\r\nconst QuestionGroup = (props) => {\r\n  const { questions, save } = props;\r\n  const [isBlocking, setIsBlocking] = useState(false);\r\n\r\n  questions.sort((el1, el2) => {\r\n    if (el1.index > el2.index) {\r\n      return 1;\r\n    } else {\r\n      return -1;\r\n    }\r\n  });\r\n\r\n  const saveQuestion = async (id, newData) => {\r\n    save(id, newData);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Prompt\r\n        when={isBlocking}\r\n        message={(location) =>\r\n          'Je hebt je aanpassingen niet opgeslagen, weet je zeker dat je deze pagina wilt verlaten? (Uw aanpassingen zullen NIET opgeslagen worden!)'\r\n        }\r\n      />\r\n      <Paper>\r\n        <List\r\n          subheader={\r\n            <ListSubheader component=\"div\" id=\"nested-list-subheader\">\r\n              Instructie\r\n            </ListSubheader>\r\n          }\r\n        >\r\n          {questions.map((question, index) => (\r\n            <ListItem component=\"div\" key={question.id}>\r\n              <Question\r\n                {...question}\r\n                setIsBlocking={setIsBlocking}\r\n                index={index}\r\n                save={(newData) => saveQuestion(question.id, newData)}\r\n              />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default QuestionGroup;\r\n","import React, { useState, useEffect, useCallback } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport QuestionGroup from '../_shared/QuestionGroup';\r\nimport service from '../../service';\r\n\r\nconst Question = (props) => {\r\n  const { authStore } = props;\r\n  const [questionGroup, setQuestionGroup] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const params = useParams();\r\n\r\n  const loadQuestionGroup = useCallback(async () => {\r\n    setLoading(true);\r\n    const response = await service.loadQuestionGroup(params.questionGroupId);\r\n    if (!response) {\r\n      return;\r\n    }\r\n    setQuestionGroup(response.body.data);\r\n    setLoading(false);\r\n  }, [params.questionGroupId]);\r\n\r\n  useEffect(() => {\r\n    loadQuestionGroup();\r\n  }, [loadQuestionGroup]);\r\n\r\n  const save = async (questionId, newData) => {\r\n    setLoading(true);\r\n    const response = await service.updateQuestion(questionId, newData);\r\n    setLoading(false);\r\n    if (!response) {\r\n      return;\r\n    }\r\n    authStore.setSuccess('Vraag succesvol geüpdatet');\r\n    await loadQuestionGroup();\r\n  };\r\n\r\n  if (loading || !questionGroup) {\r\n    return <CircularProgress />;\r\n  }\r\n\r\n  return (\r\n    <Grid container spacing={2}>\r\n      <Grid item xs={12}></Grid>\r\n      <Grid item xs={12}>\r\n        <QuestionGroup {...questionGroup} save={save} />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Question;\r\n","import Paper from '@material-ui/core/Paper';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Typography, Box } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    display: 'flex',\r\n    textAlign: 'center',\r\n    overflow: 'auto',\r\n    justifyContent: 'center',\r\n    backgroundColor: theme.widget.secondary.main,\r\n    color: 'white',\r\n    alignItems: 'baseline',\r\n  },\r\n  fixedHeight: {\r\n    height: 400,\r\n  },\r\n}));\r\n\r\nconst CustomTitle = (props) => {\r\n  const { name, label } = props;\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Paper className={classes.paper}>\r\n      <Typography variant=\"h6\">{name} </Typography>\r\n      <Box paddingLeft={2}>\r\n        <Typography variant=\"subtitle1\">({label})</Typography>\r\n      </Box>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default CustomTitle;\r\n","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  answer: (props) => ({\r\n    background: getColor(props.correct),\r\n\r\n    width: '90%',\r\n  }),\r\n}));\r\n\r\nconst getColor = (isCorrect) => {\r\n  if (isCorrect) {\r\n    return '#C5E6A6';\r\n  } else {\r\n    return 'white';\r\n  }\r\n};\r\n\r\nconst AnswerHighlight = (props) => {\r\n  const classes = useStyles(props);\r\n  return <Typography className={classes.answer}> {props.answer}</Typography>;\r\n};\r\n\r\nexport default AnswerHighlight;\r\n","import React, { useState } from 'react';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport CustomTitle from './CustomTitle';\r\nimport AnswerHighlight from './AnswerHighlight';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport FiberManualRecordOutlinedIcon from '@material-ui/icons/FiberManualRecordOutlined';\r\nimport { ListItemSecondaryAction } from '@material-ui/core';\r\nimport { observer } from 'mobx-react-lite';\r\n\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  questionName: {\r\n    display: 'flex',\r\n    flexGrow: 0,\r\n    backgroundColor: theme.widget.primary.main,\r\n    color: 'white',\r\n  },\r\n  grid: {\r\n    display: 'flex',\r\n\r\n    direction: 'column',\r\n    wrap: 'nowrap',\r\n    flexGrow: 1,\r\n  },\r\n  title: {\r\n    backgroundColor: theme.widget.tertiary.main,\r\n    color: 'white',\r\n    textAlign: 'center',\r\n    fontWeight: 'fontWeightBold',\r\n  },\r\n}));\r\n\r\nconst Answers = (props) => {\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n  const { questionStore } = props;\r\n\r\n  const [filterValue, setFilterValue] = useState(null);\r\n  const [filterInputValue, setFilterInputValue] = useState('');\r\n\r\n  const typeLabels = {\r\n    open: 'Open',\r\n    clickTheRightWords: 'Selecteer het correcte antwoord',\r\n    multipleChoice: 'Meerkeuze',\r\n    divideTheWord: 'Verdeel het woord',\r\n    combineAndFillInTheBlanks: 'Combineer en vul in',\r\n  };\r\n\r\n  if (questionStore.isLoading || !questionStore.questionGroup) {\r\n    return <CircularProgress />;\r\n  }\r\n\r\n  const calculateDistribution = (questionId, index) => {\r\n    let acc = 0;\r\n    let total = 0;\r\n    questionStore.questionGroup.questionGroupAttempts.forEach((qga) => {\r\n      if (qga.isCompleted) {\r\n        qga.questionAttempts.forEach((qa) => {\r\n          if (qa.questionId === questionId) {\r\n            qa.content.forEach((attempt) => {\r\n              total += 1;\r\n              if (attempt === index) {\r\n                acc += 1;\r\n              }\r\n            });\r\n          }\r\n        });\r\n      }\r\n    });\r\n\r\n    return Math.round((acc / total) * 100);\r\n  };\r\n\r\n  const getRows = (questionId) => {\r\n    const rows = [];\r\n    questionStore.questionGroup.questionGroupAttempts.forEach((qga) => {\r\n      qga.questionAttempts.forEach((qa) => {\r\n        if (qa.questionId === questionId) {\r\n          rows.push({\r\n            id: qa.id,\r\n            studentName: qa.studentName,\r\n            answer: qa.answer,\r\n            studentId: qa.studentId,\r\n          });\r\n        }\r\n      });\r\n    });\r\n    return rows;\r\n  };\r\n\r\n  const getRowsFilter = (questionId, filterValue) => {\r\n    const rows = [];\r\n    questionStore.questionGroup.questionGroupAttempts.forEach((qga) => {\r\n      qga.questionAttempts.forEach((qa) => {\r\n        if (qa.questionId === questionId && qa.answer === filterValue.answer) {\r\n          rows.push({\r\n            id: qa.id,\r\n            studentName: qa.studentName,\r\n            answer: qa.answer,\r\n            studentId: qa.studentId,\r\n          });\r\n        }\r\n      });\r\n    });\r\n    return rows;\r\n  };\r\n\r\n  const getOptions = (questionId) => {\r\n    const options = [];\r\n    questionStore.questionGroup.questions.forEach((q) => {\r\n      if (q.id === questionId) {\r\n        q.data.options.forEach((option) => {\r\n          options.push({ answer: option.value });\r\n        });\r\n      }\r\n    });\r\n    return options;\r\n  };\r\n\r\n  const onClickStudent = (event) =>\r\n    history.push(`/dashboard/students/${event.row.studentId}`);\r\n\r\n  const onFilterInputChange = (event, newInputValue) => {\r\n    setFilterInputValue(newInputValue);\r\n  };\r\n\r\n  const onFilterChange = (event, newValue) => {\r\n    setFilterValue(newValue);\r\n  };\r\n\r\n  const categoryQuestions = questionStore.questionGroup.questions[0].type;\r\n  const nameQuestionGroup = questionStore.questionGroup.name;\r\n  const label = typeLabels[categoryQuestions] || categoryQuestions;\r\n\r\n  const columns = [\r\n    {\r\n      field: 'studentName',\r\n      headerName: 'Naam',\r\n      flex: 1.0,\r\n      valueGetter: (params) => params.row.studentName,\r\n    },\r\n\r\n    {\r\n      field: 'answer',\r\n      headerName: 'Antwoord',\r\n      flex: 1.0,\r\n      valueGetter: (params) => params.row.answer,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Grid container spacing={2}>\r\n      <Grid item xs={12} md={12}>\r\n        <CustomTitle name={nameQuestionGroup} label={label} />\r\n      </Grid>\r\n\r\n      <Grid item xs={12} md={12}>\r\n        {questionStore.questionGroup.questions.map((item, index) => {\r\n          return (\r\n            <Accordion defaultExpanded key={item.id}>\r\n              <AccordionSummary\r\n                expandIcon={<ExpandMoreIcon />}\r\n                className={classes.questionName}\r\n              >\r\n                <Typography key={index} style={{ marginLeft: '45%' }}>\r\n                  {'Vraag ' + parseInt(index + 1)}\r\n                </Typography>\r\n              </AccordionSummary>\r\n              <AccordionDetails>\r\n                <Grid container spacing={1}>\r\n                  <Grid item xs={12} md={12}>\r\n                    <Typography key={index}>{item.instruction}</Typography>\r\n                  </Grid>\r\n                  <Grid item xs={6} md={3}>\r\n                    <List>\r\n                      {item.data.options.map((item2, index2) => {\r\n                        return (\r\n                          <ListItem key={index2}>\r\n                            <ListItemIcon>\r\n                              <FiberManualRecordOutlinedIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText\r\n                              key={index}\r\n                              primary={\r\n                                <AnswerHighlight\r\n                                  answer={item2.value}\r\n                                  correct={item2.isCorrect}\r\n                                />\r\n                              }\r\n                            />\r\n                            <ListItemSecondaryAction>\r\n                              <Typography style={{ color: 'grey' }}>\r\n                                {calculateDistribution(item.id, index2)}%\r\n                              </Typography>\r\n                            </ListItemSecondaryAction>\r\n                          </ListItem>\r\n                        );\r\n                      })}\r\n                    </List>\r\n                  </Grid>\r\n                  <Divider style={{ margin: '1rem 0', width: '100%' }} />\r\n                  <Grid item xs={12} md={12}>\r\n                    <Grid item xs={12} md={12}>\r\n                      <Typography className={classes.title}>\r\n                        Filter op antoord :\r\n                      </Typography>\r\n                      <Autocomplete\r\n                        value={filterValue}\r\n                        onChange={onFilterChange}\r\n                        inputValue={filterInputValue}\r\n                        onInputChange={onFilterInputChange}\r\n                        options={getOptions(item.id)}\r\n                        getOptionLabel={(option) => option.answer}\r\n                        renderInput={(params) => (\r\n                          <TextField {...params} variant=\"outlined\" />\r\n                        )}\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12} md={12}>\r\n                    <DataGrid\r\n                      autoHeight\r\n                      rows={\r\n                        filterValue\r\n                          ? getRowsFilter(item.id, filterValue)\r\n                          : getRows(item.id)\r\n                      }\r\n                      columns={columns}\r\n                      pageSize={12}\r\n                      onRowClick={onClickStudent}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </AccordionDetails>\r\n            </Accordion>\r\n          );\r\n        })}\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default observer(Answers);\r\n","import React, { useEffect, useCallback } from 'react';\r\nimport { useParams, useHistory, useLocation } from 'react-router-dom';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\r\nimport Details from './Insights';\r\nimport Question from './Question';\r\nimport TabContent from '../_shared/TabContent';\r\nimport Breadcrumbs from '../_shared/Breadcrumbs';\r\nimport PageContainer from '../_shared/PageContainer';\r\nimport AssignmentTurnedInIcon from '@material-ui/icons/AssignmentTurnedIn';\r\nimport AnswersMultipleChoice from './AnswersMultipleChoice';\r\n\r\nconst Answers = (props) => {\r\n  const { questionStore } = props;\r\n  const type = questionStore.questionGroup.questions[0].type;\r\n  switch (type) {\r\n    case 'multipleChoice':\r\n      return <AnswersMultipleChoice {...props} />;\r\n    default:\r\n      return (\r\n        <p>{`Er is iets fout gegaan, ${type} wordt niet herkend als vraag type`}</p>\r\n      );\r\n  }\r\n};\r\n\r\nconst QuestionStats = (props) => {\r\n  const history = useHistory();\r\n  const params = useParams();\r\n  const location = useLocation();\r\n  const { questionStore, crumbs } = props;\r\n\r\n  const loadAll = useCallback(async () => {\r\n    await questionStore.loadQuestionGroupWithAttempts(params.questionGroupId);\r\n  }, [questionStore, params.questionGroupId]);\r\n\r\n  useEffect(() => {\r\n    loadAll();\r\n  }, [loadAll]);\r\n\r\n  const onClickTab = (event, newTab) => {\r\n    const currentTab = params.questionGroupTab;\r\n    const newPath = location.pathname.replace(currentTab, newTab);\r\n    history.push(newPath);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <AppBar position=\"static\">\r\n        <Tabs value={params.questionGroupTab} onChange={onClickTab}>\r\n          <Tab\r\n            label=\"Inzicht (opdracht)\"\r\n            icon={<EqualizerIcon />}\r\n            value=\"question_group_insights\"\r\n          />\r\n          <Tab\r\n            label=\"Opdracht\"\r\n            icon={<VisibilityIcon />}\r\n            value=\"question_group_questions\"\r\n          />\r\n          <Tab\r\n            label=\"Antwoorden\"\r\n            icon={<AssignmentTurnedInIcon />}\r\n            value=\"question_group_answers\"\r\n          />\r\n        </Tabs>\r\n      </AppBar>\r\n      <PageContainer maxWidth=\"lg\">\r\n        <Breadcrumbs crumbs={crumbs} />\r\n        <TabContent\r\n          index=\"question_group_questions\"\r\n          value={params.questionGroupTab}\r\n        >\r\n          <Question {...props} />\r\n        </TabContent>\r\n        <TabContent\r\n          index=\"question_group_insights\"\r\n          value={params.questionGroupTab}\r\n        >\r\n          <Details {...props} />\r\n        </TabContent>\r\n        <TabContent\r\n          index=\"question_group_answers\"\r\n          value={params.questionGroupTab}\r\n        >\r\n          <Answers {...props} />\r\n        </TabContent>\r\n      </PageContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default QuestionStats;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { observer } from 'mobx-react-lite';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport service from '../../service';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst columns = [\r\n  {\r\n    field: 'name',\r\n    headerName: 'Naam',\r\n    flex: 0.25,\r\n  },\r\n  {\r\n    field: 'classes',\r\n    headerName: 'Klas',\r\n    flex: 0.75,\r\n    valueGetter: (params) => params.row.classes[0].name, // TODO: Make this column not hardcoded to the first class\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    padding: theme.spacing(4, 12, 4, 12),\r\n  },\r\n  datagrid: {\r\n    marginTop: '1rem',\r\n    '& .MuiDataGrid-row:hover': {\r\n      cursor: 'pointer',\r\n    },\r\n  },\r\n}));\r\n\r\nconst Students = () => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [loading, setLoading] = useState(false);\r\n  const [students, setStudents] = useState([]);\r\n  const [studentFilterValue, setStudentFilterValue] = useState(null);\r\n  const [studentFilterInputValue, setStudentFilterInputValue] = useState('');\r\n\r\n  const loadStudents = async () => {\r\n    setLoading(true);\r\n    const response = await service.loadStudents();\r\n    setLoading(false);\r\n    if (!response) {\r\n      return;\r\n    }\r\n    setStudents(response.body.data);\r\n  };\r\n\r\n  const onStudentFilterInputChange = (event, newInputValue) => {\r\n    setStudentFilterInputValue(newInputValue);\r\n  };\r\n\r\n  const onStudentFilterChange = (event, newValue) => {\r\n    setStudentFilterValue(newValue);\r\n  };\r\n\r\n  const shownStudents = studentFilterValue ? [studentFilterValue] : students;\r\n\r\n  useEffect(() => {\r\n    loadStudents();\r\n  }, []);\r\n\r\n  const onClickStudent = (event) =>\r\n    history.push(`/dashboard/students/${event.row.id}`);\r\n\r\n  if (loading) {\r\n    return <CircularProgress />;\r\n  }\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <Autocomplete\r\n        value={studentFilterValue}\r\n        onChange={onStudentFilterChange}\r\n        inputValue={studentFilterInputValue}\r\n        onInputChange={onStudentFilterInputChange}\r\n        options={students}\r\n        getOptionLabel={(option) => option.name}\r\n        renderInput={(params) => (\r\n          <TextField {...params} label=\"Leerling zoeken\" variant=\"outlined\" />\r\n        )}\r\n      />\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12}>\r\n          <Paper>\r\n            <DataGrid\r\n              className={classes.datagrid}\r\n              autoHeight\r\n              rows={shownStudents}\r\n              columns={columns}\r\n              pageSize={24}\r\n              onRowClick={onClickStudent}\r\n              components={{\r\n                ColumnMenuIcon: () => null, // We dont want to show anything for now\r\n              }}\r\n            />\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default observer(Students);\r\n","// PAGES\r\nimport LessonView from './pages/home';\r\nimport Profile from './pages/profile';\r\nimport Class from './pages/class';\r\nimport Lesson from './pages/lesson';\r\nimport Student from './pages/student';\r\nimport StudentLesson from './pages/studentLesson';\r\nimport QuestionGroup from './pages/questionGroup';\r\nimport Students from './pages/students';\r\n\r\nconst routes = [\r\n  {\r\n    exact: true,\r\n    path: '/dashboard/home',\r\n    Component: LessonView,\r\n    name: 'Home',\r\n  },\r\n  {\r\n    exact: true,\r\n    path: '/dashboard/profile',\r\n    Component: Profile,\r\n    name: 'Profile',\r\n  },\r\n  {\r\n    exact: true,\r\n    path: '/dashboard/classes/:classId/:classTab',\r\n    Component: Class,\r\n    name: 'Klas',\r\n  },\r\n  {\r\n    exact: true,\r\n    path: '/dashboard/classes/:classId/:classTab/lessons/:lessonId/:lessonTab',\r\n    Component: Lesson,\r\n    name: 'Les',\r\n  },\r\n  {\r\n    exact: true,\r\n    path: '/dashboard/students/:studentId',\r\n    Component: Student,\r\n    name: 'Leerling',\r\n  },\r\n  {\r\n    exact: true,\r\n    path: '/dashboard/students/:studentId/lessons/:lessonId',\r\n    Component: StudentLesson,\r\n    name: 'Les Inzicht',\r\n  },\r\n  {\r\n    exact: true,\r\n    path:\r\n      '/dashboard/classes/:classId/:classTab/lessons/:lessonId/:lessonTab/questionGroups/:questionGroupId/:questionGroupTab',\r\n    Component: QuestionGroup,\r\n    name: 'Vraag Groep',\r\n  },\r\n  {\r\n    exact: true,\r\n    path: '/dashboard/students',\r\n    Component: Students,\r\n    name: 'Leerlingen',\r\n  },\r\n];\r\n\r\nexport default routes;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport TreeView from '@material-ui/lab/TreeView';\r\nimport TreeItem from '@material-ui/lab/TreeItem';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport GroupRoundedIcon from '@material-ui/icons/GroupRounded';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\r\nimport HomeRoundedIcon from '@material-ui/icons/HomeRounded';\r\nimport SchoolRoundedIcon from '@material-ui/icons/SchoolRounded';\r\nimport NoMeetingRoomRoundedIcon from '@material-ui/icons/NoMeetingRoomRounded';\r\nimport service from './service';\r\n\r\nconst drawerWidth = 245;\r\n\r\nconst useTreeItemStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: drawerWidth,\r\n    color: theme.palette.text.secondary,\r\n    '&:hover > $content': {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n    '&:focus > $content, &$selected > $content': {\r\n      backgroundColor: `var(--tree-view-bg-color, ${theme.palette.grey[400]})`,\r\n      color: 'var(--tree-view-color)',\r\n    },\r\n    '&:focus > $content $label, &:hover > $content $label, &$selected > $content $label': {\r\n      backgroundColor: 'transparent',\r\n    },\r\n  },\r\n  content: {\r\n    color: theme.palette.text.secondary,\r\n    borderTopRightRadius: theme.spacing(2),\r\n    borderBottomRightRadius: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n    fontWeight: theme.typography.fontWeightMedium,\r\n    '$expanded > &': {\r\n      fontWeight: theme.typography.fontWeightRegular,\r\n    },\r\n  },\r\n  group: {\r\n    marginLeft: 0,\r\n    '& $content': {\r\n      paddingLeft: theme.spacing(2),\r\n    },\r\n  },\r\n  expanded: {},\r\n  selected: {},\r\n  label: {\r\n    fontWeight: 'inherit',\r\n    color: 'inherit',\r\n  },\r\n  labelRoot: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: theme.spacing(0.5, 0),\r\n  },\r\n  labelIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  labelText: {\r\n    fontWeight: 'inherit',\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nconst StyledTreeItem = (props) => {\r\n  const classes = useTreeItemStyles();\r\n  const {\r\n    labelText,\r\n    labelIcon: LabelIcon,\r\n    labelInfo,\r\n    color,\r\n    bgColor,\r\n    ...other\r\n  } = props;\r\n\r\n  return (\r\n    <TreeItem\r\n      label={\r\n        <div className={classes.labelRoot}>\r\n          {LabelIcon && (\r\n            <LabelIcon color=\"inherit\" className={classes.labelIcon} />\r\n          )}\r\n          <Typography variant=\"body2\" className={classes.labelText}>\r\n            {labelText}\r\n          </Typography>\r\n          <Typography variant=\"caption\" color=\"inherit\">\r\n            {labelInfo}\r\n          </Typography>\r\n        </div>\r\n      }\r\n      style={{\r\n        '--tree-view-color': color,\r\n        '--tree-view-bg-color': bgColor,\r\n      }}\r\n      classes={{\r\n        root: classes.root,\r\n        content: classes.content,\r\n        expanded: classes.expanded,\r\n        selected: classes.selected,\r\n        group: classes.group,\r\n        label: classes.label,\r\n      }}\r\n      {...other}\r\n    />\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles({});\r\n\r\nconst Menu = (props) => {\r\n  const { authStore } = props;\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [classList, setClassList] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const loadClasses = async () => {\r\n    setLoading(true);\r\n    const response = await service.loadClasses();\r\n    if (response) {\r\n      setClassList(response.body.data);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadClasses();\r\n  }, []);\r\n\r\n  const onNodeSelect = (event, value) => {\r\n    if (value === '/') {\r\n      authStore.logout(); // logout route\r\n    }\r\n    history.push(value);\r\n  };\r\n\r\n  return (\r\n    <TreeView\r\n      className={classes.root}\r\n      defaultExpanded={['/dashboard/classes']}\r\n      defaultCollapseIcon={<ArrowDropDownIcon />}\r\n      defaultExpandIcon={<ArrowRightIcon />}\r\n      defaultEndIcon={<div style={{ width: 24 }} />}\r\n      onNodeSelect={onNodeSelect}\r\n    >\r\n      <div style={{ marginTop: '64px', padding: 0 }} />\r\n      <Divider />\r\n      <ListSubheader inset>Leraren dashboard</ListSubheader>\r\n      <StyledTreeItem\r\n        nodeId=\"/dashboard/home\"\r\n        labelText=\"Overzicht\"\r\n        labelIcon={HomeRoundedIcon}\r\n      />\r\n      <StyledTreeItem\r\n        nodeId=\"/dashboard/classes\"\r\n        labelText=\"Klassen\"\r\n        labelIcon={SchoolRoundedIcon}\r\n      >\r\n        {loading ? (\r\n          <CircularProgress />\r\n        ) : (\r\n          classList.map((classItem) => (\r\n            <StyledTreeItem\r\n              key={classItem.id}\r\n              nodeId={`/dashboard/classes/${classItem.id}/class_insights`}\r\n              labelText={classItem.name}\r\n              color=\"#1a73e8\"\r\n              bgColor=\"#e8f0fe\"\r\n            />\r\n          ))\r\n        )}\r\n      </StyledTreeItem>\r\n      <StyledTreeItem\r\n        nodeId=\"/dashboard/students\"\r\n        labelText=\"Leerlingen\"\r\n        labelIcon={GroupRoundedIcon}\r\n      />\r\n      {/* <StyledTreeItem\r\n        nodeId=\"/dashboard/lessons\"\r\n        labelText=\"Lessen\"\r\n        labelIcon={ImportContactsRoundedIcon}\r\n      /> */}\r\n      <StyledTreeItem\r\n        nodeId=\"/\"\r\n        labelText=\"Uitloggen\"\r\n        labelIcon={NoMeetingRoomRoundedIcon}\r\n      />\r\n    </TreeView>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","import React, { useState, useEffect, useCallback } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport SchoolRoundedIcon from '@material-ui/icons/SchoolRounded';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport { observer } from 'mobx-react-lite';\r\n\r\nimport service from './service';\r\n\r\nconst StyledMenu = withStyles({\r\n  paper: {\r\n    border: '1px solid #d3d4d5',\r\n  },\r\n})((props) => (\r\n  <Menu\r\n    getContentAnchorEl={null}\r\n    anchorOrigin={{\r\n      vertical: 'bottom',\r\n      horizontal: 'left',\r\n    }}\r\n    transformOrigin={{\r\n      vertical: 'top',\r\n      horizontal: 'left',\r\n    }}\r\n    {...props}\r\n  />\r\n));\r\n\r\nconst StyledMenuItem = withStyles((theme) => ({\r\n  root: {\r\n    '&:focus': {\r\n      backgroundColor: theme.palette.primary.main,\r\n      '& .MuiListItemIcon-root, & .MuiListItemText-primary': {\r\n        color: theme.palette.common.white,\r\n      },\r\n    },\r\n  },\r\n}))(MenuItem);\r\n\r\nconst Notifications = (props) => {\r\n  const { notificationStore } = props;\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [classes, setClasses] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const history = useHistory();\r\n\r\n  const loadClasses = useCallback(async () => {\r\n    setLoading(true);\r\n\r\n    const response = await service.loadClasses();\r\n    if (!response) {\r\n      return;\r\n    }\r\n    setClasses(response.body.data);\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    loadClasses();\r\n  }, [loadClasses]);\r\n\r\n  const isNotification = (acc) => {\r\n    return acc === 1;\r\n  };\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      if (isNotification(notificationStore.accumulator)) {\r\n        notificationStore.pushNotification({\r\n          id: uuidv4(),\r\n          classId: classes[0].id,\r\n          category: 'classes',\r\n          value: 'Klas 1 heeft nieuwe probleem categorieën',\r\n          index: notificationStore.notifications.length,\r\n        });\r\n        notificationStore.pushNotification({\r\n          id: uuidv4(),\r\n          classId: classes[0].id,\r\n          category: 'classes',\r\n          value: 'Klas 1 heeft les 1 volledig afgerond',\r\n          index: notificationStore.notifications.length,\r\n        });\r\n      }\r\n      notificationStore.pushAccumulator();\r\n    }, 5000);\r\n    return () => clearInterval(interval);\r\n  }, [notificationStore, classes]);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const onClickNotification = (notification) => {\r\n    if (notification.category === 'classes') {\r\n      notificationStore.deleteNotification(notification.index);\r\n      history.push(\r\n        `/dashboard/${notification.category}/${notification.classId}/class_insights`\r\n      );\r\n    }\r\n  };\r\n\r\n  if (loading || !classes) {\r\n    return <CircularProgress />;\r\n  }\r\n\r\n  return (\r\n    <Grid container>\r\n      <Grid item>\r\n        <IconButton color=\"inherit\" onClick={handleClick}>\r\n          <Badge\r\n            badgeContent={notificationStore.notifications.length}\r\n            color=\"secondary\"\r\n          >\r\n            <NotificationsIcon />\r\n          </Badge>\r\n        </IconButton>\r\n      </Grid>\r\n      <StyledMenu\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleClose}\r\n      >\r\n        {notificationStore.notifications.length ? (\r\n          notificationStore.notifications.map((notification) => (\r\n            <StyledMenuItem\r\n              key={notification.id}\r\n              onClick={() => onClickNotification(notification)}\r\n            >\r\n              <ListItemIcon>\r\n                <SchoolRoundedIcon fontSize=\"small\" />\r\n              </ListItemIcon>\r\n              <ListItemText primary={notification.value} />\r\n            </StyledMenuItem>\r\n          ))\r\n        ) : (\r\n          <StyledMenuItem onClick={handleClose}>\r\n            <ListItemText primary=\"Geen notificaties!\" />\r\n          </StyledMenuItem>\r\n        )}\r\n      </StyledMenu>\r\n    </Grid>\r\n  );\r\n};\r\nexport default observer(Notifications);\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Notifications from './Notifications.jsx';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\n\r\nconst drawerWidth = 245;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  icons: {\r\n    display: 'flex',\r\n  },\r\n}));\r\n\r\nconst CustomAppBar = (props) => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  const goToProfile = () => history.push('/dashboard/profile');\r\n  const goBack = () => history.goBack();\r\n\r\n  return (\r\n    <AppBar\r\n      position=\"absolute\"\r\n      className={clsx(classes.appBar, classes.appBarShift)}\r\n    >\r\n      <Toolbar className={classes.toolbar}>\r\n        <IconButton onClick={goBack}>\r\n          <ChevronLeftIcon style={{ color: 'white' }} />\r\n        </IconButton>\r\n        <Typography\r\n          component=\"h1\"\r\n          variant=\"h6\"\r\n          color=\"inherit\"\r\n          noWrap\r\n          className={classes.title}\r\n        ></Typography>\r\n        <div className={classes.icons}>\r\n          <Notifications {...props} />\r\n          <IconButton color=\"inherit\" onClick={goToProfile}>\r\n            <AccountCircle />\r\n          </IconButton>\r\n        </div>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default CustomAppBar;\r\n","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport 'chartjs-plugin-colorschemes';\r\nimport routes from './routes';\r\nimport Menu from './Menu';\r\nimport AppBar from './AppBar';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n  },\r\n}));\r\n\r\nconst Dashboard = (props) => {\r\n  const {\r\n    authStore,\r\n    lessonStore,\r\n    questionStore,\r\n    notificationStore,\r\n    studentStore,\r\n  } = props;\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Switch>\r\n      {routes.map(({ exact, path, name, Component }) => (\r\n        <Route\r\n          key={path}\r\n          exact={exact}\r\n          path={path}\r\n          render={(props) => {\r\n            const crumbs = routes\r\n              // Get all routes that contain the current one.\r\n              .filter(({ path }) => props.match.path.includes(path))\r\n              // Swap out any dynamic routes with their param values.\r\n              // E.g. \"/pizza/:pizzaId\" will become \"/pizza/1\"\r\n              .map(({ path, ...rest }) => ({\r\n                path: Object.keys(props.match.params).length\r\n                  ? Object.keys(props.match.params).reduce(\r\n                      (path, param) =>\r\n                        path.replace(`:${param}`, props.match.params[param]),\r\n                      path\r\n                    )\r\n                  : path,\r\n                ...rest,\r\n              }));\r\n\r\n            return (\r\n              <>\r\n                <AppBar notificationStore={notificationStore} {...props} />\r\n                <Menu authStore={authStore} />\r\n                <main className={classes.content}>\r\n                  <div className={classes.appBarSpacer} />\r\n                  <Component\r\n                    authStore={authStore}\r\n                    lessonStore={lessonStore}\r\n                    questionStore={questionStore}\r\n                    notificationStore={notificationStore}\r\n                    studentStore={studentStore}\r\n                    crumbs={crumbs}\r\n                    {...props}\r\n                  />\r\n                </main>\r\n              </>\r\n            );\r\n          }}\r\n          name={name}\r\n        />\r\n      ))}\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","export default __webpack_public_path__ + \"static/media/loginBanner.8df90453.jpg\";","import React, { useState } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { observer } from 'mobx-react-lite';\r\nimport loginBanner from '../../assets/loginBanner.jpg';\r\n\r\nconst Copyright = () => {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Wordfactory\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '100vh',\r\n  },\r\n  image: {\r\n    backgroundImage: `url(${loginBanner})`,\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundColor:\r\n      theme.palette.type === 'light'\r\n        ? theme.palette.grey[50]\r\n        : theme.palette.grey[900],\r\n    backgroundSize: 'cover',\r\n    backgroundPosition: 'center',\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nconst Login = (props) => {\r\n  const { authStore } = props;\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const login = async (e) => {\r\n    setLoading(true);\r\n    e.preventDefault(); // Prevent reloading of page, due to \"submit\" role on button\r\n    const response = await authStore.login(email, password);\r\n    setLoading(false);\r\n    if (response) {\r\n      history.push('/dashboard/home');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Grid container component=\"main\" className={classes.root}>\r\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Log in\r\n          </Typography>\r\n          <form className={classes.form} noValidate>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Email Adres\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Wachtwoord\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n            <FormControlLabel\r\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n              label=\"Herinner mij\"\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n              disabled={loading}\r\n              onClick={login}\r\n            >\r\n              Inloggen\r\n            </Button>\r\n            <Grid container>\r\n              <Grid item xs>\r\n                <Link href=\"#\" variant=\"body2\">\r\n                  Wachtwoord vergeten?\r\n                </Link>\r\n              </Grid>\r\n              <Grid item>\r\n                <Link href=\"#\" variant=\"body2\">\r\n                  {'Geen account? Registreer hier.'}\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n            <Box mt={5}>\r\n              <Copyright />\r\n            </Box>\r\n          </form>\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default observer(Login);\r\n","const addDuration = (lessonAttempts) => {\r\n  return lessonAttempts.map((lessonAttempt) => {\r\n    const duration = lessonAttempt.questionGroupAttempts.reduce(\r\n      (acc, curr) => acc + curr.timeElapsedSeconds,\r\n      0\r\n    );\r\n    lessonAttempt.duration = Math.round(duration / 60);\r\n    return lessonAttempt;\r\n  });\r\n};\r\n\r\nconst addPerformance = (lessonAttempts) => {\r\n  return lessonAttempts.map((lessonAttempt) => {\r\n    const { correct, incorrect } = lessonAttempt.questionGroupAttempts.reduce(\r\n      (acc, curr) => {\r\n        acc.correct += curr.correct;\r\n        acc.incorrect += curr.incorrect + curr.missed;\r\n        return acc;\r\n      },\r\n      { correct: 0, incorrect: 0 }\r\n    );\r\n    lessonAttempt.correct = correct;\r\n    lessonAttempt.incorrect = incorrect;\r\n\r\n    const unroundedGrade = ((correct / (correct + incorrect)) * 100) / 10;\r\n\r\n    // unroundedGrade could be NaN if both correct and incorrect are 0\r\n    lessonAttempt.performance = Math.max(1, Math.round(unroundedGrade || 1));\r\n    return lessonAttempt;\r\n  });\r\n};\r\n\r\nconst addQuestionGroupAttemptStats = (questionGroup) => {\r\n  const { elapsedTime, total } = questionGroup.questionGroupAttempts.reduce(\r\n    (acc, curr) => {\r\n      if (curr.isCompleted) {\r\n        acc.elapsedTime += curr.timeElapsedSeconds;\r\n        acc.total += 1;\r\n      }\r\n      return acc;\r\n    },\r\n    { elapsedTime: 0, total: 0 }\r\n  );\r\n  questionGroup.averageElapsedTime = Math.round(elapsedTime / total);\r\n  return questionGroup;\r\n};\r\n\r\nconst addInformation = (questionAttempts) => {\r\n  questionAttempts.forEach((qa) => {\r\n    const answers = [];\r\n    let answerAttempt = '';\r\n    let correct = 0;\r\n    let incorrect = 0;\r\n    let missed = 0;\r\n    const correctAnswers = [];\r\n    if (qa.question.type === 'multipleChoice') {\r\n      qa.question.data.options.forEach((q, index) => {\r\n        answers.push(q.value);\r\n        if (q.isCorrect) {\r\n          correctAnswers.push(index);\r\n        }\r\n      });\r\n\r\n      if (qa.content !== []) {\r\n        qa.content.forEach((attempt, index) => {\r\n          if (correctAnswers.includes(attempt)) {\r\n            correct += 1;\r\n          } else {\r\n            incorrect += 1;\r\n          }\r\n          answerAttempt += answers[index];\r\n        });\r\n        missed += correctAnswers.length - qa.content.length;\r\n      } else {\r\n        answerAttempt = qa.content;\r\n        correct = incorrect = missed = 0;\r\n      }\r\n    } else {\r\n      answerAttempt = qa.content;\r\n    }\r\n    qa.correct = correct;\r\n    qa.incorrect = incorrect;\r\n    qa.missed = missed;\r\n    qa.answer = answerAttempt;\r\n  });\r\n  return questionAttempts;\r\n};\r\n\r\nconst addQuestionAttemptInformation = (questionGroup) => {\r\n  const questionType = questionGroup.questions[0].type;\r\n  if (!questionType || questionType !== 'multipleChoice') {\r\n    return questionGroup;\r\n  }\r\n\r\n  const answers = [];\r\n  questionGroup.questions.forEach((q) => {\r\n    answers.push(q.data.options);\r\n  });\r\n\r\n  let acc = 0;\r\n  questionGroup.questionGroupAttempts.forEach((qga) => {\r\n    if (qga.isCompleted) {\r\n      const studentName = qga.lessonAttempts.student.name;\r\n      const studentId = qga.lessonAttempts.student.id;\r\n\r\n      qga.questionAttempts.forEach((qa) => {\r\n        let correct = 0;\r\n        let incorrect = 0;\r\n        let missed = 0;\r\n        let answer = '';\r\n        const answerAttempt = qa.content;\r\n        if (answerAttempt.length !== 0) {\r\n          for (\r\n            let j = 0;\r\n            j < answers[acc % qga.questionAttempts.length].length;\r\n            j++\r\n          ) {\r\n            const isCorrect =\r\n              answers[acc % qga.questionAttempts.length][j].isCorrect;\r\n            const value = answers[acc % qga.questionAttempts.length][j].value;\r\n            if (answerAttempt.includes(j)) {\r\n              answer += value + ', ';\r\n              if (isCorrect) {\r\n                correct += 1;\r\n              } else {\r\n                incorrect += 1;\r\n              }\r\n            } else if (!answerAttempt.includes(j) && isCorrect) {\r\n              missed += 1;\r\n            }\r\n          }\r\n        } else {\r\n          missed += 1;\r\n        }\r\n\r\n        qa.studentName = studentName;\r\n        qa.studentId = studentId;\r\n        qa.answer = answer.slice(0, -2); //Remove last comma and whitespace\r\n        qa.correct = correct;\r\n        qa.incorrect = incorrect;\r\n        qa.missed = missed;\r\n      });\r\n      acc += 1;\r\n    }\r\n  });\r\n\r\n  return questionGroup;\r\n};\r\n\r\nconst addQuestionGroupAverages = (lesson, questionGroup) => {\r\n  lesson.questionGroups = lesson.questionGroups.map((questionGroup) => {\r\n    const {\r\n      correct,\r\n      total,\r\n      completions,\r\n    } = questionGroup.questionGroupAttempts.reduce(\r\n      (acc, curr) => {\r\n        if (curr.isCompleted) {\r\n          acc.correct += curr.correct;\r\n          acc.total += curr.correct + curr.incorrect + curr.missed;\r\n          acc.completions += 1;\r\n        }\r\n        return acc;\r\n      },\r\n      {\r\n        correct: 0,\r\n        total: 0,\r\n        completions: 0,\r\n      }\r\n    );\r\n    let averageScore = Math.round((correct / total) * 100) / 10;\r\n    if (!averageScore) {\r\n      averageScore = 0;\r\n    }\r\n    return { ...questionGroup, averageScore, completions };\r\n  });\r\n\r\n  return lesson;\r\n};\r\n\r\nconst utils = {\r\n  addDuration,\r\n  addPerformance,\r\n  addInformation,\r\n  addQuestionGroupAverages,\r\n  addQuestionGroupAttemptStats,\r\n  addQuestionAttemptInformation,\r\n};\r\n\r\nexport default utils;\r\n","import { action, makeObservable, observable, computed } from 'mobx';\r\nimport service from '../service';\r\nimport utils from './_utils';\r\n\r\n// Tutorial on mobx state management: https://blog.logrocket.com/introduction-to-mobx-with-react/\r\nclass LessonStore {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      lesson: observable,\r\n      lessonAttempts: observable,\r\n      loading: observable,\r\n      loadLesson: action,\r\n      loadLessonAttempts: action,\r\n      questionGroup: observable,\r\n      popLoad: action,\r\n      pushLoad: action,\r\n      setlesson: action,\r\n      setlessonAttempts: action,\r\n      clearLesson: action,\r\n      isLoading: computed,\r\n    });\r\n  }\r\n\r\n  lesson = null;\r\n  lessonAttempts = [];\r\n  questionGroup = [];\r\n  loading = 0;\r\n\r\n  popLoad = () => (this.loading -= 1);\r\n  pushLoad = () => (this.loading += 1);\r\n\r\n  setlesson = (lesson) => (this.lesson = lesson);\r\n  clearLesson = () => (this.lesson = null);\r\n\r\n  setlessonAttempts = (lessonAttempts) =>\r\n    (this.lessonAttempts = lessonAttempts);\r\n  clearLessonAttempts = () => (this.lessonAttempts = null);\r\n\r\n  loadLesson = async (lessonId) => {\r\n    if (this.lesson?.id === lessonId) {\r\n      return;\r\n    }\r\n    this.pushLoad();\r\n    const response = await service.loadLesson(lessonId);\r\n    if (!response) {\r\n      return;\r\n    }\r\n    // Calculate average score... not pretty. Do this in the backend query at some point\r\n    const lesson = utils.addQuestionGroupAverages(\r\n      response.body.data,\r\n      this.questionGroup\r\n    );\r\n    this.setlesson(lesson);\r\n    this.popLoad();\r\n  };\r\n\r\n  loadLessonAttempts = async (lessonId) => {\r\n    if (\r\n      this.lessonAttempts?.length &&\r\n      this.lessonAttempts[0]?.lessonId === lessonId\r\n    ) {\r\n      return;\r\n    }\r\n    this.pushLoad();\r\n    const response = await service.loadLessonAttempts(lessonId);\r\n    if (!response) {\r\n      return;\r\n    }\r\n    let loadedLessonAttempts = response.body.data;\r\n    loadedLessonAttempts = utils.addDuration(loadedLessonAttempts);\r\n    loadedLessonAttempts = utils.addPerformance(loadedLessonAttempts);\r\n    this.setlessonAttempts(loadedLessonAttempts);\r\n    this.popLoad();\r\n  };\r\n\r\n  get isLoading() {\r\n    return this.loading > 0;\r\n  }\r\n}\r\n\r\nexport default new LessonStore();\r\n","import { action, makeObservable, observable, computed } from 'mobx';\r\nimport service from '../service';\r\nimport utils from './_utils';\r\n\r\n// Tutorial on mobx state management: https://blog.logrocket.com/introduction-to-mobx-with-react/\r\nclass QuestionStore {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      questionGroup: observable,\r\n      questionAttempts: observable,\r\n      loading: observable,\r\n      popLoad: action,\r\n      pushLoad: action,\r\n      isLoading: computed,\r\n    });\r\n  }\r\n\r\n  questionGroup = null;\r\n  questionAttempts = [];\r\n  loading = 0;\r\n\r\n  popLoad = () => (this.loading -= 1);\r\n  pushLoad = () => (this.loading += 1);\r\n\r\n  loadQuestionGroupWithAttempts = async (questionGroupId) => {\r\n    this.pushLoad();\r\n    const response = await service.loadQuestionGroup(questionGroupId);\r\n    if (response) {\r\n      let questionGroup = response.body.data;\r\n      questionGroup = utils.addQuestionGroupAttemptStats(questionGroup);\r\n      questionGroup = utils.addQuestionAttemptInformation(questionGroup);\r\n      this.questionGroup = questionGroup;\r\n    }\r\n\r\n    this.popLoad();\r\n  };\r\n\r\n  loadQuestionAttemptsWithInfo = async (studentId, lessonId) => {\r\n    this.pushLoad();\r\n    const response = await service.loadQuestionAttempts({\r\n      studentId: studentId,\r\n      lessonId: lessonId,\r\n    });\r\n\r\n    if (response) {\r\n      let questionAttempts = response.body.data;\r\n      questionAttempts = utils.addInformation(questionAttempts);\r\n      this.questionAttempts = questionAttempts;\r\n    }\r\n    this.popLoad();\r\n  };\r\n\r\n  get isLoading() {\r\n    return this.loading > 0;\r\n  }\r\n}\r\n\r\nexport default new QuestionStore();\r\n","import { action, makeObservable, observable } from 'mobx';\r\n\r\nclass NotificationStore {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      accumulator: observable,\r\n      pushAccumulator: action,\r\n      amountNotifications: observable,\r\n      pushNotification: action,\r\n      notifications: observable,\r\n      setNotifications: action,\r\n      setAmountNotifications: action,\r\n      pushAmountNotifications: action,\r\n      popAmountNotifications: action,\r\n      deleteNotification: action,\r\n    });\r\n  }\r\n\r\n  accumulator = 0;\r\n  amountNotifications = 0;\r\n  notifications = [];\r\n\r\n  pushAmountNotifications = () => (this.amountNotifications += 1);\r\n\r\n  popAmountNotifications = () => (this.amountNotifications -= 1);\r\n\r\n  pushAccumulator = () => (this.accumulator += 1);\r\n\r\n  pushNotification = (notification) => this.notifications.push(notification);\r\n\r\n  setAmountNotifications = (amountNotifications) =>\r\n    (this.amountNotifications = amountNotifications);\r\n\r\n  setNotifications = (notifications) => (this.notifications = notifications);\r\n\r\n  deleteNotification = (notificationIndex) => {\r\n    this.notifications.splice(notificationIndex, 1);\r\n    this.restoreIndices();\r\n  };\r\n\r\n  restoreIndices = () => {\r\n    let restoredNotifications = this.notifications;\r\n    for (let i = 0; i < this.notifications.length; i++) {\r\n      restoredNotifications[i].index = i;\r\n    }\r\n    this.setNotifications(restoredNotifications);\r\n  };\r\n}\r\n\r\nexport default new NotificationStore();\r\n","import { action, makeObservable, observable, computed } from 'mobx';\r\nimport service from '../service';\r\n\r\nclass StudentStore {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      topResults: observable,\r\n      students: observable,\r\n      bottomResults: observable,\r\n      loadStudents: action,\r\n      setTopResults: action,\r\n      setBottomResults: action,\r\n      popLoad: action,\r\n      pushLoad: action,\r\n      isLoading: computed,\r\n    });\r\n  }\r\n\r\n  students = null;\r\n  topResults = [];\r\n  bottomResults = [];\r\n\r\n  popLoad = () => (this.loading -= 1);\r\n\r\n  pushLoad = () => (this.loading += 1);\r\n\r\n  setTopResults = (topResults) => (this.topResults = topResults);\r\n\r\n  setBottomResults = (bottomResults) => (this.bottomResults = bottomResults);\r\n\r\n  loadStudents = async (classId) => {\r\n    this.pushLoad();\r\n    const response = await service.loadStudents(classId);\r\n    if (response) {\r\n      this.students = response.body.data;\r\n    }\r\n\r\n    const [studentsInfo, distribution] = this.computeDistribution(\r\n      this.students\r\n    );\r\n\r\n    const topResults = this.computeTop(\r\n      studentsInfo,\r\n      distribution.sort(),\r\n      Math.round(distribution.length * 0.25)\r\n    );\r\n\r\n    const bottomResults = this.computeBottom(\r\n      studentsInfo,\r\n      distribution.sort(),\r\n      Math.round(distribution.length * 0.25),\r\n      response.body.data\r\n    );\r\n\r\n    this.setTopResults(topResults);\r\n    this.setBottomResults(bottomResults);\r\n    this.popLoad();\r\n  };\r\n\r\n  computeDistribution = (students) => {\r\n    const studentsCorrect = Array(students.length).fill(0);\r\n    const studentsInfo = [];\r\n    const studentsIncorrect = Array(students.length).fill(0);\r\n    let total = 0;\r\n\r\n    students.forEach((student, index) => {\r\n      studentsInfo.push({ name: student.name, id: student.id });\r\n      student.lessonAttempts.forEach((lessonAtempt) => {\r\n        lessonAtempt.questionGroupAttempts.forEach(\r\n          (questionGroupAttempt, index) => {\r\n            if (\r\n              !(\r\n                questionGroupAttempt.correct === 0 &&\r\n                questionGroupAttempt.incorrect === 0 &&\r\n                questionGroupAttempt.missed === 0\r\n              ) &&\r\n              questionGroupAttempt.isCompleted\r\n            ) {\r\n              total +=\r\n                questionGroupAttempt.correct +\r\n                questionGroupAttempt.incorrect +\r\n                questionGroupAttempt.missed;\r\n              studentsCorrect[index] += Math.round(\r\n                (questionGroupAttempt.correct / total) * 100\r\n              );\r\n              studentsIncorrect[index] +=\r\n                (questionGroupAttempt.incorrect + questionGroupAttempt.missed) /\r\n                total;\r\n            }\r\n          }\r\n        );\r\n      });\r\n    });\r\n    return [studentsInfo, studentsCorrect, studentsIncorrect];\r\n  };\r\n\r\n  computeTop = (studentsInfo, distribution, cutoffValue) => {\r\n    const slicedDistribution = distribution.slice(\r\n      distribution.length - cutoffValue,\r\n      distribution.length\r\n    );\r\n    const slicedStudentInfo = studentsInfo.slice(\r\n      studentsInfo.length - cutoffValue,\r\n      studentsInfo.length\r\n    );\r\n\r\n    return [slicedDistribution, slicedStudentInfo];\r\n  };\r\n\r\n  computeBottom = (studentsInfo, distribution, cutoffValue, students) => {\r\n    const slicedDistribution = distribution.slice(0, cutoffValue);\r\n    const slicedStudentInfo = studentsInfo.slice(0, cutoffValue);\r\n    this.updateBottomStudents(students, slicedStudentInfo);\r\n\r\n    return [slicedDistribution, slicedStudentInfo];\r\n  };\r\n\r\n  updateBottomStudents = (students, studentsInfo) => {\r\n    students.forEach((student) => {\r\n      studentsInfo.forEach((info) => {\r\n        if (student.id === info.id) {\r\n          student.bottom = true;\r\n        }\r\n      });\r\n      if (!student.bottom) {\r\n        student.bottom = false;\r\n      }\r\n    });\r\n    this.students = students;\r\n  };\r\n\r\n  get isLoading() {\r\n    return this.loading > 0;\r\n  }\r\n}\r\n\r\nexport default new StudentStore();\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport { makeStyles, ThemeProvider } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { defaults } from 'react-chartjs-2';\r\nimport { Classic10 } from 'chartjs-plugin-colorschemes/src/colorschemes/colorschemes.tableau';\r\nimport 'chartjs-plugin-colorschemes';\r\n\r\nimport extendChart from './config/extendChart';\r\nimport theme from './theme';\r\nimport Dashboard from './Dashboard';\r\nimport Login from './pages/login';\r\n\r\n// STORES\r\nimport authStore from './stores/auth';\r\nimport lessonStore from './stores/lessonStore';\r\nimport questionStore from './stores/questionStore';\r\nimport notificationStore from './stores/notificationStore';\r\nimport studentStore from './stores/studentStore';\r\n\r\ndefaults.global.plugins.colorschemes.scheme = Classic10;\r\nextendChart();\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n}));\r\n\r\nconst Alert = (props) => {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n};\r\n\r\nconst ErrorPopup = observer((props) => {\r\n  const { authStore } = props;\r\n  return (\r\n    <Snackbar open={!!authStore.error}>\r\n      <Alert severity=\"warning\">{authStore.error}</Alert>\r\n    </Snackbar>\r\n  );\r\n});\r\n\r\nconst SuccessPopup = observer((props) => {\r\n  const { authStore } = props;\r\n  return (\r\n    <Snackbar open={!!authStore.success}>\r\n      <Alert severity=\"success\">{authStore.success}</Alert>\r\n    </Snackbar>\r\n  );\r\n});\r\n\r\nconst LoginPage = () => <Login authStore={authStore} />;\r\n\r\nconst App = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <div className={classes.root}>\r\n        <Router>\r\n          <CssBaseline />\r\n          {/* Two main routers, this top router checks if the user is logged in;\r\n        If logged in -> Delegate routing to the dashboard component.\r\n        Else -> Show login page */}\r\n          <Switch>\r\n            <Route path=\"/\" exact component={LoginPage} />\r\n            <Route\r\n              path=\"/dashboard\"\r\n              component={(props) => (\r\n                <Dashboard\r\n                  authStore={authStore}\r\n                  lessonStore={lessonStore}\r\n                  questionStore={questionStore}\r\n                  notificationStore={notificationStore}\r\n                  studentStore={studentStore}\r\n                  {...props}\r\n                />\r\n              )}\r\n            />\r\n          </Switch>\r\n        </Router>\r\n        <ErrorPopup authStore={authStore} />\r\n        <SuccessPopup authStore={authStore} />\r\n      </div>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}