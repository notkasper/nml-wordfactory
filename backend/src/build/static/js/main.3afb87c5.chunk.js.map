{"version":3,"sources":["config/extendChart.js","theme.js","pages/_shared/Title.jsx","stores/_utils.js","stores/lessonStore.js","stores/notificationStore.js","socket.js","stores/auth.js","service.js","pages/_shared/PageContainer.jsx","pages/home/Activity.jsx","pages/home/Widget.jsx","pages/_shared/PercentageDoughnut.jsx","pages/home/index.jsx","assets/bartVis.png","pages/profile/ProfileHeader.jsx","pages/profile/AccountInformation.jsx","pages/profile/index.jsx","pages/_shared/PaperWithHeader.jsx","pages/_shared/ProgressBar.jsx","pages/class/Insights.jsx","pages/class/Course.jsx","pages/class/Courses.jsx","pages/class/Student.jsx","pages/class/Students.jsx","pages/_shared/TabContent.jsx","pages/_shared/Breadcrumbs.jsx","pages/class/index.jsx","pages/lesson/Doughnut.jsx","pages/lesson/Histogram.jsx","pages/lesson/InsightsAfter.jsx","pages/lesson/Activity.jsx","pages/lesson/InsightsDuring.jsx","pages/lesson/Insights.jsx","pages/lesson/LessonContent.jsx","pages/lesson/index.jsx","pages/student/Lesson.jsx","pages/student/Course.jsx","pages/student/Courses.jsx","pages/student/ProfileHeader.jsx","pages/student/Progress.jsx","pages/student/index.jsx","pages/studentLesson/QuestionAttempts.jsx","pages/studentLesson/index.jsx","pages/questionGroup/BarGraph.jsx","pages/questionGroup/Doughnut.jsx","pages/questionGroup/Tile.jsx","pages/questionGroup/Insights.jsx","pages/_shared/questionTypes/MultipleChoice.jsx","pages/_shared/questionTypes/MultipleChoiceGroup.jsx","pages/_shared/questionTypes/Open.jsx","pages/_shared/questionTypes/DivideTheWord.jsx","pages/_shared/questionTypes/clickTheRightWords.jsx","pages/_shared/QuestionGroup.jsx","pages/questionGroup/Question.jsx","pages/questionGroup/CustomTitle.jsx","pages/questionGroup/AnswerHighlight.jsx","pages/questionGroup/AnswersMultipleChoice.jsx","pages/questionGroup/index.jsx","pages/students/index.jsx","routes.js","pages/_shared/MenuItem.jsx","Menu.jsx","Notifications.jsx","AppBar.jsx","Dashboard.jsx","assets/loginBanner.jpg","pages/login/index.jsx","stores/questionStore.js","stores/studentStore.js","App.js","index.js"],"names":["extendChart","originalDoughnutDraw","Chart","controllers","doughnut","prototype","draw","helpers","extend","apply","this","arguments","chart","config","options","elements","center","text","color","ctx","width","height","fontSize","toFixed","font","textBaseline","fillStyle","textX","Math","round","measureText","textY","fillText","createMuiTheme","widget","primary","main","secondary","tertiary","statistics","red","green","orange","Title","props","Typography","component","variant","style","textAlign","gutterBottom","children","utils","addDuration","lessonAttempts","map","lessonAttempt","duration","questionGroupAttempts","reduce","acc","curr","timeElapsedSeconds","addPerformance","correct","incorrect","missed","total","performance","min","addInformation","questionAttempts","forEach","qa","answers","answerAttempt","correctAnswers","question","type","data","q","index","push","value","isCorrect","content","attempt","includes","length","answer","addQuestionGroupAverages","lesson","questionGroup","questionGroups","isCompleted","completions","elapsedTime","averageScore","averageElapsedTime","addQuestionGroupAttemptStats","addQuestionAttemptInformation","questionType","questions","qga","studentName","student","name","studentId","id","j","slice","convertCategoryToString","category","loading","popLoad","pushLoad","setlesson","clearLesson","setlessonAttempts","clearLessonAttempts","loadLesson","lessonId","a","service","response","body","refreshLessonAttempts","console","log","lessonIdToRefresh","loadLessonAttempts","isRefresh","loadedLessonAttempts","onNewQuestionAttempts","makeObservable","observable","action","isLoading","computed","accumulator","amountNotifications","notifications","pushAmountNotifications","popAmountNotifications","pushAccumulator","pushNotification","notification","setAmountNotifications","setNotifications","deleteNotification","notificationIndex","splice","restoreIndices","restoredNotifications","i","socket","io","auth","token","jscookie","get","subscribe","eventName","callback","on","info","lessonStore","notificationStore","message","path","obj","unsubscribe","off","disconnect","connect","isConnected","connected","error","success","setError","setTimeout","setSuccess","login","email","password","logout","cookie","remove","handleResponse","req","authStore","loadStudents","query","request","loadClass","classId","loadCourses","loadClasses","loadQuestionAttemptsID","questionId","post","send","loadStudent","loadQuestionAttempts","loadQuestionGroupAttempts","questionGroupId","pageSize","loadQuestionGroups","ids","JSON","stringify","loadLessonCategories","loadStudentCategories","updateQuestion","patch","useStyles","makeStyles","theme","container","paddingTop","spacing","paddingBottom","PageContainer","classes","Container","maxWidth","className","columns","field","headerName","flex","renderCell","params","date","row","updatedAt","substring","valueGetter","QuestionGroup","prefix","datagrid","marginTop","cursor","Activity","history","useHistory","useState","setQuestionGroupAttempts","setLoading","useCallback","useEffect","CircularProgress","Grid","item","xs","autoHeight","rows","onRowClick","event","padding","display","flexDirection","justifyContent","widgetLeft","fontWeight","widgetRight","Widget","md","Card","backgroundColor","CardActionArea","onClick","CardContent","left","right","paper","overflow","PercentageDoughnut","useTheme","title","titleColor","Paper","Dashboard","setClassList","datasets","cutoutPercentage","tooltips","enabled","hover","mode","responsive","avatar","ProfileHeader","lg","Avatar","src","Link","href","preventDefault","marginRight","root","divider","marginBottom","account","margin","label","alignItems","header","AccountInformation","Divider","TextField","disabled","fullWidth","Profile","paperheader","borderBottomLeftRadius","borderBottomRightRadius","borderTopLeftRadius","borderTopRightRadius","papercontent","PaperWithHeader","headercolor","headertitle","calculateRGB","percentage","floor","rgb","join","borderRadius","bar","colorPrimary","ProgessBar","Box","mr","LinearProgress","minWidth","correctness","learning_process","recognizing_morphemes_sentence","meaning_morphemes","splitsing_morphemes","create_morphemes_prefix","background_morphemes","recognizing_morphemes_text","intuition","create_alternative_morphemes","create_morphemes_suffix","create_new_morphemes","Insights","topResults","bottomResults","categories","sortModel","sort","ProgressBar","key","Course","lessons","location","useLocation","goToLesson","pathname","List","subheader","ListSubheader","ListItem","button","ListItemText","inline","ListItemSecondaryAction","IconButton","edge","aria-label","pagination","Courses","courses","courseFilterValue","setCourseFilterValue","courseFilterInputValue","setCourseFilterInputValue","shownCourses","Autocomplete","onChange","newValue","inputValue","onInputChange","newInputValue","getOptionLabel","option","renderInput","course","getIcon","isBottom","Student","ListItemIcon","ListItemAvatar","alt","Students","students","page","setPage","studentFilterValue","setStudentFilterValue","studentFilterInputValue","setStudentFilterInputValue","start","shownStudents","bottom","Pagination","count","ceil","TabContent","CustomBreadcrumbs","crumbs","Breadcrumbs","crumb","handleClick","observer","studentStore","useParams","theClass","setTheClass","setCourses","setCategories","loadAll","promises","Promise","all","AppBar","position","Tabs","classTab","newTab","currentTab","newPath","replace","Tab","icon","fixedHeight","CustomDoughnut","completed","isStarted","started","notStarted","labels","fixedHeightPaper","clsx","Histogram","calculateProgress","Doughnut","getRows","gp","math","create","questionGroupIds","questionStore","ratioCorrect","ratioProgress","averageTime","loadQuestionGroupsWithAttempts","totalCorrect","totalNotComplete","totalComplete","totalScores","totalTime","elapsedTimes","qg","sortedTimes","b","median","std","rangeMin","rangeMax","time","parseInt","getAverageValues","getDoughnutData","ratio","String","totalSeconds","minutes","seconds","convertToMinutes","showCategory","setShowCategory","changeCategory","getQuestionGroupIds","e","direction","paddingRight","Button","paddingLeft","typeLabels","open","clickTheRightWords","multipleChoice","divideTheWord","combineAndFillInTheBlanks","lessonTab","Lesson","expanded","setExpanded","Accordion","TransitionProps","unmountOnExit","AccordionSummary","expandIcon","aria-controls","AccordionDetails","background","marginLeft","createRow","courseName","lessonName","Progress","TableContainer","Table","TableHead","TableRow","TableCell","align","TableBody","rowSpan","setStudent","palette","border","boxShadow","shadows","top","transform","QuestionAttempts","modalOpen","setModalOpen","modalContent","setModalContent","Body","React","forwardRef","ref","Fragment","Modal","onClose","aria-labelledby","aria-describedby","handleModalOpen","StudentLesson","loadQuestionAttemptsWithInfo","getLabels","amountQuestions","BarGraph","questionIds","distributions","correctPerQuestion","Array","fill","incorrectPerQuestion","missedPerQuestion","questionGroupAttempt","questionAttempt","indexCorrect","findIndex","el","indexIncorrect","indexMissed","calculateDistribution","card","widgetTop","widgetBottom","Tile","number","amountLessons","popover","pointerEvents","RemoveButton","htmlFor","MultipleChoice","instruction","originalData","save","setIsBlocking","dataCopy","setData","popoverText","setPopoverText","anchorEl","setAnchorEl","editing","setEditing","handlePopoverOpen","currentTarget","handlePopoverClose","Boolean","Popover","anchorOrigin","vertical","horizontal","transformOrigin","disableRestoreFocus","FormControl","FormLabel","RadioGroup","FormControlLabel","control","Radio","checked","newCorrectOption","newOptions","newData","editCorrect","optionToEdit","target","editOption","placeholder","optionToRemove","filter","removeOption","onMouseEnter","onMouseLeave","aria-owns","undefined","aria-haspopup","MultipleChoiceGroup","word","morphemes","morpheme","Open","multiline","insertDividers","spread","pre","DivideTheWord","correctAnswer","ClickTheRightWords","Question","isBlocking","el1","el2","saveQuestion","when","setQuestionGroup","CustomTitle","getColor","AnswerHighlight","questionName","flexGrow","grid","wrap","filterValue","setFilterValue","filterInputValue","setFilterInputValue","getRowsFilter","getOptions","onClickStudent","onFilterInputChange","onFilterChange","categoryQuestions","nameQuestionGroup","defaultExpanded","item2","index2","Answers","AnswersMultipleChoice","QuestionStats","questionGroupTab","routes","exact","Component","LessonView","Class","setStudents","components","ColumnMenuIcon","useTreeItemStyles","grey","typography","fontWeightMedium","fontWeightRegular","group","selected","labelRoot","labelIcon","labelText","MenuItem","LabelIcon","labelInfo","bgColor","other","TreeItem","drawer","logoutButton","Menu","classList","dialogOpen","setDialogOpen","handleDialogOpen","handleDialogClose","Drawer","TreeView","defaultCollapseIcon","defaultExpandIcon","defaultEndIcon","onNodeSelect","nodeId","HomeRoundedIcon","SchoolRoundedIcon","classItem","GroupRoundedIcon","NoMeetingRoomRoundedIcon","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","StyledMenu","withStyles","getContentAnchorEl","StyledMenuItem","common","white","setClasses","handleClose","Badge","badgeContent","keepMounted","onClickNotification","appBar","zIndex","transition","transitions","easing","sharp","leavingScreen","appBarShift","enteringScreen","icons","CustomAppBar","Toolbar","toolbar","goBack","noWrap","appBarSpacer","mixins","render","match","rest","Object","keys","param","Copyright","Date","getFullYear","image","backgroundImage","loginBanner","backgroundRepeat","backgroundSize","backgroundPosition","form","submit","setEmail","setPassword","sm","elevation","square","noValidate","required","autoComplete","autoFocus","Checkbox","mt","setTopResults","setBottomResults","distribution","computeDistribution","cutoffValue","max","updateBottomStudents","currentTotal","_","mergeWith","obj1","obj2","isNumber","totalPoints","some","defaults","global","plugins","colorschemes","scheme","Classic10","Alert","ErrorPopup","Snackbar","severity","SuccessPopup","LoginPage","App","ThemeProvider","CssBaseline","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.3afb87c5.chunk.js","sourcesContent":["import { Chart } from 'react-chartjs-2';\n\nconst extendChart = () => {\n  const originalDoughnutDraw = Chart.controllers.doughnut.prototype.draw;\n  Chart.helpers.extend(Chart.controllers.doughnut.prototype, {\n    draw: function () {\n      originalDoughnutDraw.apply(this, arguments);\n\n      if (this.chart.config.options.elements.center) {\n        const chart = this.chart.chart;\n        const { text, color } = this.chart.config.options.elements.center;\n        const { ctx, width, height } = chart;\n        const fontSize = (height / 114).toFixed(2);\n        ctx.font = fontSize + 'em Verdana';\n        ctx.textBaseline = 'middle';\n        ctx.fillStyle = color;\n\n        const textX = Math.round((width - ctx.measureText(text).width) / 2);\n        const textY = height / 2;\n\n        ctx.fillText(text, textX, textY);\n      }\n    },\n  });\n};\n\nexport default extendChart;\n","import { createMuiTheme } from '@material-ui/core/styles';\n\nexport default createMuiTheme({\n  widget: {\n    primary: {\n      main: '#729ece',\n    },\n    secondary: {\n      main: '#ff9e4a',\n    },\n    tertiary: {\n      main: '#67bf5c',\n    },\n  },\n  statistics: {\n    red: {\n      main: '#d64238',\n    },\n    green: {\n      main: '#36d41e',\n    },\n    orange: {\n      main: '#f58220',\n    },\n  },\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\n\nconst Title = (props) => {\n  return (\n    <Typography\n      component=\"h2\"\n      variant=\"h6\"\n      style={{ color: props.color, textAlign: 'center' }}\n      gutterBottom\n    >\n      {props.children}\n    </Typography>\n  );\n};\n\nTitle.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default Title;\n","const addDuration = (lessonAttempts) => {\n  return lessonAttempts.map((lessonAttempt) => {\n    const duration = lessonAttempt.questionGroupAttempts.reduce(\n      (acc, curr) => acc + curr.timeElapsedSeconds,\n      0\n    );\n    lessonAttempt.duration = Math.round(duration / 60);\n    return lessonAttempt;\n  });\n};\n\nconst addPerformance = (lessonAttempts) => {\n  return lessonAttempts.map((lessonAttempt) => {\n    const { correct, incorrect } = lessonAttempt.questionGroupAttempts.reduce(\n      (acc, curr) => {\n        acc.correct += curr.correct;\n        acc.incorrect += curr.incorrect + curr.missed;\n        return acc;\n      },\n      { correct: 0, incorrect: 0 }\n    );\n\n    lessonAttempt.correct = correct;\n    lessonAttempt.incorrect = incorrect;\n\n    // unroundedGrade could be NaN if both correct and incorrect are 0\n    const total = correct + incorrect;\n    const performance = Math.min(\n      Math.round((correct / total || 0) * 9 + 1),\n      10\n    );\n    lessonAttempt.performance = performance;\n\n    return lessonAttempt;\n  });\n};\n\nconst addQuestionGroupAttemptStats = (questionGroup) => {\n  const { elapsedTime, total } = questionGroup.questionGroupAttempts.reduce(\n    (acc, curr) => {\n      if (curr.isCompleted) {\n        acc.elapsedTime += curr.timeElapsedSeconds;\n        acc.total += 1;\n      }\n      return acc;\n    },\n    { elapsedTime: 0, total: 0 }\n  );\n  questionGroup.averageElapsedTime = Math.round(elapsedTime / total);\n  return questionGroup;\n};\n\nconst addInformation = (questionAttempts) => {\n  questionAttempts.forEach((qa) => {\n    const answers = [];\n    let answerAttempt = '';\n    let correct = 0;\n    let incorrect = 0;\n    let missed = 0;\n    const correctAnswers = [];\n    if (qa.question.type === 'multipleChoice') {\n      qa.question.data.options.forEach((q, index) => {\n        answers.push(q.value);\n        if (q.isCorrect) {\n          correctAnswers.push(index);\n        }\n      });\n\n      if (qa.content !== []) {\n        qa.content.forEach((attempt, index) => {\n          if (correctAnswers.includes(attempt)) {\n            correct += 1;\n          } else {\n            incorrect += 1;\n          }\n          answerAttempt += answers[index];\n        });\n        missed += correctAnswers.length - qa.content.length;\n      } else {\n        answerAttempt = qa.content;\n        correct = incorrect = missed = 0;\n      }\n    } else {\n      answerAttempt = qa.content;\n    }\n    qa.correct = correct;\n    qa.incorrect = incorrect;\n    qa.missed = missed;\n    qa.answer = answerAttempt;\n  });\n  return questionAttempts;\n};\n\nconst addQuestionAttemptInformation = (questionGroup) => {\n  const questionType = questionGroup.questions[0].type;\n  if (!questionType || questionType !== 'multipleChoice') {\n    return questionGroup;\n  }\n\n  const answers = [];\n  questionGroup.questions.forEach((q) => {\n    answers.push(q.data.options);\n  });\n\n  let acc = 0;\n  questionGroup.questionGroupAttempts.forEach((qga) => {\n    if (qga.isCompleted) {\n      const studentName = qga.lessonAttempts.student.name;\n      const studentId = qga.lessonAttempts.student.id;\n\n      qga.questionAttempts.forEach((qa) => {\n        let correct = 0;\n        let incorrect = 0;\n        let missed = 0;\n        let answer = '';\n        const answerAttempt = qa.content;\n        if (answerAttempt.length !== 0) {\n          for (\n            let j = 0;\n            j < answers[acc % qga.questionAttempts.length].length;\n            j++\n          ) {\n            const isCorrect =\n              answers[acc % qga.questionAttempts.length][j].isCorrect;\n            const value = answers[acc % qga.questionAttempts.length][j].value;\n            if (answerAttempt.includes(j)) {\n              answer += value + ', ';\n              if (isCorrect) {\n                correct += 1;\n              } else {\n                incorrect += 1;\n              }\n            } else if (!answerAttempt.includes(j) && isCorrect) {\n              missed += 1;\n            }\n          }\n        } else {\n          missed += 1;\n        }\n\n        qa.studentName = studentName;\n        qa.studentId = studentId;\n        qa.answer = answer.slice(0, -2); //Remove last comma and whitespace\n        qa.correct = correct;\n        qa.incorrect = incorrect;\n        qa.missed = missed;\n      });\n      acc += 1;\n    }\n  });\n\n  return questionGroup;\n};\n\nconst addQuestionGroupAverages = (lesson, questionGroup) => {\n  lesson.questionGroups = lesson.questionGroups.map((questionGroup) => {\n    const { correct, total, completions, elapsedTime } =\n      questionGroup.questionGroupAttempts.reduce(\n        (acc, curr) => {\n          if (curr.isCompleted) {\n            acc.correct += curr.correct;\n            acc.total += curr.correct + curr.incorrect + curr.missed;\n            acc.completions += 1;\n            acc.elapsedTime += curr.timeElapsedSeconds;\n          }\n          return acc;\n        },\n        {\n          correct: 0,\n          total: 0,\n          completions: 0,\n          elapsedTime: 0,\n        }\n      );\n    let averageScore = Math.round((correct / total) * 100) / 10;\n    if (!averageScore) {\n      averageScore = 0;\n    }\n    let averageElapsedTime = Math.round(elapsedTime / completions);\n    if (!averageElapsedTime) {\n      averageElapsedTime = 0;\n    }\n\n    return { ...questionGroup, averageScore, completions, averageElapsedTime };\n  });\n\n  return lesson;\n};\n\nconst convertCategoryToString = (category) => {\n  switch (category) {\n    case 'learning_process':\n      return 'Leerproces';\n    case 'recognizing_morphemes_sentence':\n      return 'Herkennen morfemen in een zin';\n    case 'meaning_morphemes':\n      return 'Betekenis morfemen';\n    case 'splitsing_morphemes':\n      return 'Splits morfemen';\n    case 'create_morphemes_prefix':\n      return 'Creëren morfemen (voorvoegsel)';\n    case 'background_morphemes':\n      return 'Alternatieve betekenis morfemen';\n    case 'recognizing_morphemes_text':\n      return 'Herkennen morfemen in een tekst';\n    case 'intuition':\n      return 'Intuïtie';\n    case 'create_alternative_morphemes':\n      return 'Creëren alternatieve morfemen';\n    case 'create_morphemes_suffix':\n      return 'Creëren morfemen (achtervoegsel)';\n    case 'create_new_morphemes':\n      return 'Creëren nieuwe morfemen';\n    default:\n      return null;\n  }\n};\n\nconst utils = {\n  addDuration,\n  addPerformance,\n  addInformation,\n  addQuestionGroupAverages,\n  addQuestionGroupAttemptStats,\n  addQuestionAttemptInformation,\n  convertCategoryToString,\n};\n\nexport default utils;\n","import { action, makeObservable, observable, computed } from 'mobx';\nimport service from '../service';\nimport utils from './_utils';\n\n// Tutorial on mobx state management: https://blog.logrocket.com/introduction-to-mobx-with-react/\nclass LessonStore {\n  constructor() {\n    makeObservable(this, {\n      lesson: observable,\n      lessonAttempts: observable,\n      loading: observable,\n      loadLesson: action,\n      loadLessonAttempts: action,\n      refreshLessonAttempts: action,\n      questionGroup: observable,\n      popLoad: action,\n      pushLoad: action,\n      setlesson: action,\n      setlessonAttempts: action,\n      clearLesson: action,\n      isLoading: computed,\n    });\n  }\n\n  lesson = null;\n  lessonAttempts = [];\n  questionGroup = [];\n  loading = 0;\n\n  popLoad = () => (this.loading -= 1);\n  pushLoad = () => (this.loading += 1);\n\n  setlesson = (lesson) => (this.lesson = lesson);\n  clearLesson = () => (this.lesson = null);\n\n  setlessonAttempts = (lessonAttempts) =>\n    (this.lessonAttempts = lessonAttempts);\n  clearLessonAttempts = () => (this.lessonAttempts = null);\n\n  loadLesson = async (lessonId) => {\n    if (this.lesson?.id === lessonId) {\n      return;\n    }\n    this.pushLoad();\n    const response = await service.loadLesson(lessonId);\n    if (!response) {\n      return;\n    }\n    // Calculate average score... not pretty. Do this in the backend query at some point\n    const lesson = utils.addQuestionGroupAverages(\n      response.body.data,\n      this.questionGroup\n    );\n    this.setlesson(lesson);\n    this.popLoad();\n  };\n\n  refreshLessonAttempts = async () => {\n    console.log('GONNA REFRESH');\n    if (!this.lessonAttempts.length) {\n      console.log('no lesson attempts, returning');\n      return;\n    }\n    const lessonIdToRefresh = this.lessonAttempts[0]?.lessonId;\n    if (!lessonIdToRefresh) {\n      console.log('no lesson id to refresh, returning');\n      return;\n    }\n    console.log('refreshing', lessonIdToRefresh);\n    await this.loadLessonAttempts(lessonIdToRefresh, true);\n  };\n\n  loadLessonAttempts = async (lessonId, isRefresh = false) => {\n    if (\n      this.lessonAttempts?.length &&\n      this.lessonAttempts[0]?.lessonId === lessonId &&\n      !isRefresh\n    ) {\n      return;\n    }\n    this.pushLoad();\n    const response = await service.loadLessonAttempts(lessonId);\n    if (!response) {\n      return;\n    }\n    let loadedLessonAttempts = response.body.data;\n    loadedLessonAttempts = utils.addDuration(loadedLessonAttempts);\n    loadedLessonAttempts = utils.addPerformance(loadedLessonAttempts);\n    this.setlessonAttempts(loadedLessonAttempts);\n    this.popLoad();\n  };\n\n  onNewQuestionAttempts = (data) => {\n    console.log('NEW', data);\n  };\n\n  get isLoading() {\n    return this.loading > 0;\n  }\n}\n\nexport default new LessonStore();\n","import { action, makeObservable, observable } from 'mobx';\n\nclass NotificationStore {\n  constructor() {\n    makeObservable(this, {\n      accumulator: observable,\n      pushAccumulator: action,\n      amountNotifications: observable,\n      pushNotification: action,\n      notifications: observable,\n      setNotifications: action,\n      setAmountNotifications: action,\n      pushAmountNotifications: action,\n      popAmountNotifications: action,\n      deleteNotification: action,\n    });\n  }\n\n  accumulator = 0;\n  amountNotifications = 0;\n  notifications = [];\n\n  pushAmountNotifications = () => (this.amountNotifications += 1);\n\n  popAmountNotifications = () => (this.amountNotifications -= 1);\n\n  pushAccumulator = () => (this.accumulator += 1);\n\n  pushNotification = (notification) => this.notifications.push(notification);\n\n  setAmountNotifications = (amountNotifications) =>\n    (this.amountNotifications = amountNotifications);\n\n  setNotifications = (notifications) => (this.notifications = notifications);\n\n  deleteNotification = (notificationIndex) => {\n    this.notifications.splice(notificationIndex, 1);\n    this.restoreIndices();\n  };\n\n  restoreIndices = () => {\n    let restoredNotifications = this.notifications;\n    for (let i = 0; i < this.notifications.length; i++) {\n      restoredNotifications[i].index = i;\n    }\n    this.setNotifications(restoredNotifications);\n  };\n}\n\nexport default new NotificationStore();\n","import { io } from 'socket.io-client';\nimport jscookie from 'js-cookie';\nimport lessonStore from '../src/stores/lessonStore';\nimport notificationStore from '../src/stores/notificationStore';\n\nconst socket = io({\n  auth: {\n    token: jscookie.get('token'),\n  },\n});\n\nconst onDisconnect = () => console.info('Socket disconnected');\nconst onConnect = () => console.info('Socket connected');\nconst onReconnect = () => console.info('Socket reconnected');\nconst subscribe = (eventName, callback) => {\n  socket.on(eventName, callback);\n  console.info(`Socket started listening to ${eventName}`);\n};\n\nconst unsubscribe = (eventName) => {\n  socket.off(eventName);\n  console.info(`Socket stopped listening to ${eventName}`);\n};\n\nconst isConnected = () => socket.connected;\n\nconst connect = () => {\n  socket.connect();\n  console.log('Socket connected');\n};\n\nconst disconnect = () => {\n  socket.disconnect();\n  console.log('Socket disconnected');\n};\n\nsubscribe('connect', onConnect);\nsubscribe('reconnect', onReconnect);\nsubscribe('disconnect', onDisconnect);\nsubscribe('newQuestionAttempts', lessonStore.refreshLessonAttempts);\nsubscribe('notification', (data) => {\n  notificationStore.pushNotification({\n    id: data.message,\n    category: 'classes',\n    path: data.path,\n    value: data.message,\n    index: notificationStore.notifications.length,\n  });\n});\n\nconst obj = { subscribe, unsubscribe, disconnect, connect, isConnected };\n\nexport default obj;\n","import { action, makeObservable, observable } from 'mobx';\nimport cookie from 'js-cookie';\nimport service from '../service';\nimport socket from '../socket';\n\n// Tutorial on mobx state management: https://blog.logrocket.com/introduction-to-mobx-with-react/\nclass AuthStore {\n  constructor() {\n    makeObservable(this, {\n      error: observable,\n      success: observable,\n      login: action,\n      logout: action,\n      setError: action,\n    });\n  }\n\n  error = null;\n  success = null;\n\n  setError = (error) => {\n    this.error = error;\n    setTimeout(() => {\n      this.error = null;\n    }, 4000);\n  };\n\n  setSuccess = (success) => {\n    this.success = success;\n    setTimeout(() => {\n      this.success = null;\n    }, 4000);\n  };\n\n  login = async (email, password) => {\n    const response = await service.login(email, password);\n    if (!response) {\n      return false;\n    }\n    socket.connect();\n    return true;\n  };\n\n  logout = () => {\n    cookie.remove('token');\n    socket.disconnect();\n  };\n}\n\nexport default new AuthStore();\n","import request from 'superagent';\nimport authStore from './stores/auth';\n\nconst handleResponse = async (req) => {\n  try {\n    const response = await req;\n    return response;\n  } catch (error) {\n    authStore.setError(\n      `Er is iets mis gegaan: ${\n        error.response.body?.message ||\n        error.response.body?.error ||\n        error.response.error ||\n        'server error'\n      }`\n    );\n    return null;\n  }\n};\n\nconst loadStudents = async (query) => {\n  const req = request.get(`/api/v1/students`).query(query);\n  const response = await handleResponse(req);\n  return response;\n};\n\nconst loadClass = async (classId) => {\n  const req = request.get(`/api/v1/classes/${classId}`);\n  const response = await handleResponse(req);\n  return response;\n};\n\nconst loadCourses = async (query) => {\n  const req = request.get(`/api/v1/courses`).query(query);\n  const response = await handleResponse(req);\n  return response;\n};\n\nconst loadClasses = async () => {\n  const req = request.get('/api/v1/classes');\n  const response = await handleResponse(req);\n  return response;\n};\n\nconst loadLessonAttempts = async (lessonId) => {\n  const req = request.get(`/api/v1/lessonAttempts`).query({ lessonId });\n  const response = await handleResponse(req);\n  return response;\n};\n\nconst loadQuestionAttemptsID = async (questionId) => {\n  const req = request.get(`/api/v1/questionAttempts/${questionId}`);\n  const response = await handleResponse(req);\n  return response;\n};\n\nconst loadLesson = async (lessonId) => {\n  const req = request.get(`/api/v1/lessons/${lessonId}`);\n  const response = await handleResponse(req);\n  return response;\n};\n\nconst login = async (email, password) => {\n  const req = request.post('/api/v1/auth/login').send({\n    email,\n    password,\n  });\n  const response = await handleResponse(req);\n  return response;\n};\n\nconst loadStudent = async (id) => {\n  const req = request.get(`/api/v1/students/${id}`);\n  const response = await handleResponse(req);\n  return response;\n};\n\nconst loadQuestionAttempts = async ({ studentId, lessonId }) => {\n  const req = request\n    .get('/api/v1/questionAttempts')\n    .query({ studentId, lessonId });\n  const response = await handleResponse(req);\n  return response;\n};\n\nconst loadQuestionGroupAttempts = async ({ questionGroupId, pageSize }) => {\n  const req = request\n    .get('/api/v1/questionGroupAttempts')\n    .query({ questionGroupId, pageSize });\n  const response = await handleResponse(req);\n  return response;\n};\n\nconst loadQuestionGroups = async (ids) => {\n  const req = request\n    .get(`/api/v1/questionGroup/`)\n    .query({ ids: JSON.stringify(ids) });\n  const response = await handleResponse(req);\n\n  return response;\n};\n\nconst loadLessonCategories = async (id) => {\n  const req = request.get(`/api/v1/classes/${id}/categories`);\n  const response = await handleResponse(req);\n  return response;\n};\n\nconst loadStudentCategories = async (id) => {\n  const req = request.get(`/api/v1/students/${id}/categories`);\n  const response = await handleResponse(req);\n  return response;\n};\n\nconst updateQuestion = async (id, data) => {\n  const req = request.patch(`/api/v1/question/${id}`).send({ data });\n  const response = await handleResponse(req);\n  return response;\n};\n\nconst service = {\n  loadStudents,\n  loadStudent,\n  loadClass,\n  loadCourses,\n  loadClasses,\n  loadLessonAttempts,\n  loadQuestionAttempts,\n  loadQuestionAttemptsID,\n  loadLesson,\n  login,\n  loadQuestionGroupAttempts,\n  loadQuestionGroups,\n  loadLessonCategories,\n  loadStudentCategories,\n  updateQuestion,\n};\n\nexport default service;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n}));\n\nconst PageContainer = (props) => {\n  const { children } = props;\n  const classes = useStyles();\n\n  return (\n    <Container maxWidth=\"lg\" className={classes.container}>\n      {children}\n    </Container>\n  );\n};\n\nexport default PageContainer;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { DataGrid } from '@material-ui/data-grid';\nimport { useHistory } from 'react-router-dom';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport DoneRoundedIcon from '@material-ui/icons/DoneRounded';\nimport CloseRoundedIcon from '@material-ui/icons/CloseRounded';\nimport Grid from '@material-ui/core/Grid';\n\nimport Title from '../_shared/Title';\nimport service from '../../service';\nimport PageContainer from '../_shared/PageContainer';\n\nconst convertDateToReadableString = (date) => {\n  return `${date.substring(0, 10)} ${date.substring(11, 19)}`;\n};\n\nconst columns = [\n  {\n    field: 'updatedAt',\n    headerName: 'Datum',\n    flex: 0.2,\n    renderCell: (params) => convertDateToReadableString(params.row.updatedAt),\n  },\n  {\n    field: 'student',\n    headerName: 'Leerling',\n    flex: 0.2,\n    valueGetter: (params) => params.row.lessonAttempts.student.name,\n  },\n  {\n    field: 'lesson',\n    headerName: 'Les',\n    flex: 0.2,\n    valueGetter: (params) => params.row.QuestionGroup.lesson.prefix,\n  },\n  {\n    field: 'question',\n    headerName: 'Vraag',\n    flex: 0.2,\n    valueGetter: (params) => params.row.QuestionGroup.index + 1,\n  },\n  {\n    field: 'isCompleted',\n    headerName: 'Voltooid',\n    flex: 0.2,\n    renderCell: (params) =>\n      params.row.isCompleted ? <DoneRoundedIcon /> : <CloseRoundedIcon />,\n  },\n];\n\nconst useStyles = makeStyles((theme) => ({\n  datagrid: {\n    marginTop: '1rem',\n    '& .MuiDataGrid-row:hover': {\n      cursor: 'pointer',\n    },\n  },\n}));\n\nconst Activity = (props) => {\n  const classes = useStyles();\n  const history = useHistory();\n  const [questionGroupAttempts, setQuestionGroupAttempts] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const loadQuestionGroupAttempts = useCallback(async () => {\n    setLoading(true);\n\n    const response = await service.loadQuestionGroupAttempts({ pageSize: 10 });\n    if (!response) {\n      return;\n    }\n\n    setQuestionGroupAttempts(response.body.data);\n    setLoading(false);\n  }, []);\n\n  useEffect(() => {\n    loadQuestionGroupAttempts();\n\n    return () => {\n      setQuestionGroupAttempts([]);\n    };\n  }, [loadQuestionGroupAttempts]);\n\n  if (loading) {\n    return <CircularProgress />;\n  }\n\n  const onClickStudent = (event) =>\n    history.push(`/dashboard/students/${event.row.lessonAttempts.student.id}`);\n\n  return (\n    <PageContainer>\n      <Title>Recente leerlingen activiteit</Title>\n      <Grid item xs={12}>\n        <DataGrid\n          className={classes.datagrid}\n          autoHeight\n          rows={questionGroupAttempts}\n          columns={columns}\n          pageSize={5}\n          onRowClick={onClickStudent}\n        />\n      </Grid>\n    </PageContainer>\n  );\n};\n\nexport default Activity;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActionArea from '@material-ui/core/CardActionArea';\n\nconst useStyles = makeStyles((theme) => ({\n  widget: {\n    height: 150,\n    padding: theme.spacing(3),\n    color: 'white',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n  },\n  widgetLeft: {\n    textAlign: 'right',\n    fontWeight: 400,\n  },\n  widgetRight: {\n    textAlign: 'left',\n    fontWeight: 100,\n  },\n}));\n\nconst Widget = (props) => {\n  const classes = useStyles();\n\n  return (\n    <Grid item xs={12} md={4}>\n      <Card style={{ backgroundColor: props.color }}>\n        <CardActionArea onClick={props.onClick}>\n          <CardContent>\n            <Grid container spacing={3} className={classes.widget}>\n              <Grid item xs={6}>\n                <Typography variant=\"h2\" className={classes.widgetLeft}>\n                  {props.left}\n                </Typography>\n              </Grid>\n              <Grid item xs={6}>\n                <Typography variant=\"h5\" className={classes.widgetRight}>\n                  {props.right}\n                </Typography>\n              </Grid>\n            </Grid>\n          </CardContent>\n        </CardActionArea>\n      </Card>\n    </Grid>\n  );\n};\n\nWidget.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default Widget;\n","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { Doughnut } from 'react-chartjs-2';\n\nimport Title from './Title';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n}));\n\nconst PercentageDoughnut = (props) => {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  const { title, data, options, titleColor } = props;\n  const color = titleColor ? titleColor : theme.widget.primary.main;\n\n  return (\n    <Grid item xs={12} md={4}>\n      <Paper className={classes.paper}>\n        <Title color={color}>{title}</Title>\n        <Doughnut data={data} options={options} />\n      </Paper>\n    </Grid>\n  );\n};\n\nPercentageDoughnut.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default PercentageDoughnut;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { useHistory } from 'react-router-dom';\n\nimport Activity from './Activity';\nimport Widget from './Widget';\nimport PercentageDoughnut from '../_shared/PercentageDoughnut';\nimport service from '../../service';\nimport PageContainer from '../_shared/PageContainer';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n}));\n\nconst Dashboard = (props) => {\n  const theme = useTheme();\n  const classes = useStyles();\n  const history = useHistory();\n  const [, setClassList] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const loadClasses = useCallback(async () => {\n    setLoading(true);\n\n    const response = await service.loadClasses();\n    if (!response) {\n      return;\n    }\n\n    setClassList(response.body.data);\n    setLoading(false);\n  }, []);\n\n  useEffect(() => {\n    loadClasses();\n  }, [loadClasses]);\n\n  if (loading) {\n    return <CircularProgress />;\n  }\n\n  const data = ({ color, variant }) => ({\n    datasets: [\n      {\n        data: [100 - variant * 25, variant * 25],\n        backgroundColor: ['rgb(0, 0, 0, 0)', color],\n      },\n    ],\n  });\n\n  const options = ({ color, text }) => ({\n    cutoutPercentage: 75,\n    tooltips: { enabled: false },\n    hover: { mode: null },\n    responsive: true,\n    elements: {\n      center: {\n        text,\n        color: color || '#FFFFFF',\n      },\n    },\n  });\n\n  return (\n    <PageContainer>\n      <Grid container spacing={3}>\n        {/* Widgets with general information */}\n        <Widget\n          left={6}\n          right=\"lessen\"\n          color={theme.widget.primary.main}\n          onClick={() => history.push('/dashboard/lessons')}\n        />\n        <Widget\n          left={206}\n          right=\"leerlingen\"\n          color={theme.widget.secondary.main}\n          onClick={() => history.push('/dashboard/students')}\n        />\n        <Widget\n          left={25}\n          right=\"na te kijken opdrachten\"\n          color={theme.widget.tertiary.main}\n          onClick={() => history.push('/dashboard/tasks')}\n        />\n        {/* Average percentage statistics */}\n        <PercentageDoughnut\n          title=\"Gemiddelde correctheid\"\n          data={data({ color: theme.widget.primary.main, variant: 1 })}\n          options={options({ color: theme.widget.primary.main, text: '25%' })}\n        />\n        <PercentageDoughnut\n          title=\"Gemiddelde voortgang\"\n          data={data({ color: theme.widget.secondary.main, variant: 2 })}\n          options={options({ color: theme.widget.secondary.main, text: '50%' })}\n        />\n        <PercentageDoughnut\n          title=\"Opdrachten nagekeken\"\n          data={data({ color: theme.widget.tertiary.main, variant: 3 })}\n          options={options({ color: theme.widget.tertiary.main, text: '75%' })}\n        />\n        {/* Recent activity */}\n        <Grid item xs={12}>\n          <Paper className={classes.paper}>\n            <Activity />\n          </Paper>\n        </Grid>\n      </Grid>\n    </PageContainer>\n  );\n};\n\nexport default Dashboard;\n","export default __webpack_public_path__ + \"static/media/bartVis.cee2b69e.png\";","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\n\nimport avatar from '../../assets/bartVis.png';\n\nconst useStyles = makeStyles((theme) => ({\n  avatar: {\n    width: theme.spacing(24),\n    height: theme.spacing(24),\n  },\n  email: {\n    color: 'blue',\n    fontWeight: 'bold',\n  },\n}));\n\nconst ProfileHeader = (props) => {\n  const classes = useStyles();\n\n  const preventDefault = (event) => event.preventDefault();\n\n  return (\n    <Grid container>\n      <Grid item xs={12} lg={3}>\n        <Avatar src={avatar} className={classes.avatar} />\n      </Grid>\n      <Grid item xs={12} lg={9}>\n        <Typography variant=\"h3\">Bert Vis</Typography>\n        <Link href={`mailto:${'b.vis@outlook.com'}`} onClick={preventDefault}>\n          <Typography\n            className={classes.email}\n            style={{ display: 'inline-block', marginRight: 8 }}\n          >\n            b.vis@outlook.com\n          </Typography>\n        </Link>\n        <Typography style={{ display: 'inline-block' }}>- Docent</Typography>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default ProfileHeader;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport TextField from '@material-ui/core/TextField';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(4, 4, 0, 4),\n  },\n  divider: {\n    marginTop: theme.spacing(4),\n    marginBottom: theme.spacing(4),\n  },\n  account: {\n    margin: theme.spacing(4),\n  },\n  label: {\n    height: '100%',\n    display: 'flex',\n    alignItems: 'center',\n  },\n  header: {\n    fontWeight: 'bold',\n  },\n}));\n\nconst AccountInformation = (props) => {\n  const classes = useStyles();\n\n  // TODO: contains mocked data, need to retrieve this via store\n  return (\n    <Grid container>\n      <Grid item xs={12} className={classes.divider}>\n        <Typography variant=\"h5\" className={classes.header}>\n          Account Informatie\n        </Typography>\n        <Divider />\n        <Grid container className={classes.account}>\n          <Grid item xs={12} md={3}>\n            <Typography className={classes.label}>Gebruikersnaam</Typography>\n          </Grid>\n          <Grid item xs={12} md={9}>\n            <TextField\n              disabled\n              value={'bertvis1971'}\n              className={classes.fullWidth}\n            />\n          </Grid>\n        </Grid>\n        <Grid container className={classes.account}>\n          <Grid item xs={12} md={3}>\n            <Typography className={classes.label}>E-mailadres</Typography>\n          </Grid>\n          <Grid item xs={12} md={9}>\n            <TextField\n              disabled\n              value={'b.vis@outlook.com'}\n              className={classes.fullWidth}\n            />\n          </Grid>\n        </Grid>\n        <Grid container className={classes.account}>\n          <Grid item xs={12} md={3}>\n            <Typography className={classes.label}>Wachtwoord</Typography>\n          </Grid>\n          <Grid item xs={12} md={9}>\n            <TextField\n              disabled\n              type=\"password\"\n              value={'superuser'}\n              className={classes.fullWidth}\n            />\n          </Grid>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default AccountInformation;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\n\nimport PageContainer from '../_shared/PageContainer';\nimport ProfileHeader from './ProfileHeader';\nimport AccountInformation from './AccountInformation';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(4, 4, 0, 4),\n  },\n}));\n\nconst Profile = (props) => {\n  const classes = useStyles();\n\n  return (\n    <PageContainer>\n      <Paper className={classes.root}>\n        <ProfileHeader />\n        <AccountInformation />\n      </Paper>\n    </PageContainer>\n  );\n};\n\nexport default Profile;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\n\nconst useStyles = makeStyles((theme) => ({\n  paperheader: {\n    textAlign: 'center',\n    color: 'white',\n    borderBottomLeftRadius: 0,\n    borderBottomRightRadius: 0,\n    borderTopLeftRadius: 4,\n    borderTopRightRadius: 4,\n  },\n  papercontent: {\n    borderBottomLeftRadius: 4,\n    borderBottomRightRadius: 4,\n    borderTopLeftRadius: 0,\n    borderTopRightRadius: 0,\n  },\n}));\n\nconst PaperWithHeader = (props) => {\n  const classes = useStyles();\n\n  return (\n    <Grid item xs={12} md={6}>\n      <Paper\n        className={classes.paperheader}\n        style={{ backgroundColor: props.headercolor }}\n      >\n        <Typography>{props.headertitle}</Typography>\n      </Paper>\n      <Paper\n        className={classes.papercontent}\n        style={props.height ? { height: props.height } : {}}\n      >\n        {props.children}\n      </Paper>\n    </Grid>\n  );\n};\n\nPaperWithHeader.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default PaperWithHeader;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\nconst calculateRGB = (percentage) => {\n  const shade = 0.8;\n  const color = Math.floor(\n    (percentage <= 50 ? percentage / 50 : (100 - percentage) / 50) * 255\n  );\n  const rgb = (percentage <= 50\n    ? [255, color, 0]\n    : [color, 255, 0]\n  ).map((color) => Math.round(color * shade));\n  return `rgb(${rgb.join(',')})`;\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: 20,\n    borderRadius: 5,\n    margin: theme.spacing(1),\n  },\n  bar: (props) => ({\n    borderRadius: 5,\n    backgroundColor: calculateRGB(props.value),\n  }),\n  colorPrimary: {\n    backgroundColor: '#DDDDDD',\n  },\n}));\n\nconst ProgessBar = (props) => {\n  const classes = useStyles(props);\n\n  return (\n    <Box>\n      <Typography>{props.title}</Typography>\n      <Box display=\"flex\" alignItems=\"center\">\n        <Box width=\"100%\" mr={1}>\n          <LinearProgress\n            variant=\"determinate\"\n            classes={{\n              root: classes.root,\n              colorPrimary: classes.colorPrimary,\n              bar: classes.bar,\n            }}\n            {...props}\n          />\n        </Box>\n        <Box minWidth={35}>\n          <Typography variant=\"body2\" color=\"textSecondary\">{`${Math.round(\n            props.value\n          )}%`}</Typography>\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nProgessBar.propTypes = {\n  value: PropTypes.number.isRequired,\n};\n\nexport default ProgessBar;\n","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { DataGrid } from '@material-ui/data-grid';\nimport PaperWithHeader from '../_shared/PaperWithHeader';\nimport ProgressBar from '../_shared/ProgressBar';\nimport PageContainer from '../_shared/PageContainer';\n\nconst useStyles = makeStyles((theme) => ({\n  widget: {\n    padding: theme.spacing(3),\n  },\n  paper: {\n    borderBottomLeftRadius: 4,\n    borderBottomRightRadius: 4,\n    borderTopLeftRadius: 0,\n    borderTopRightRadius: 0,\n    height: 230,\n    padding: theme.spacing(3),\n  },\n}));\n\nconst columns = [\n  {\n    field: 'student',\n    headerName: 'Naam',\n    flex: 0.65,\n    valueGetter: (params) => params.row.name,\n  },\n  {\n    field: 'correctness',\n    headerName: 'Gem. correctheid',\n    flex: 0.5,\n    valueGetter: (params) => params.row.correctness,\n  },\n];\n\n// TODO: this is duplicate code! Make sure to create store for this and then call shared _utils.js\nconst convertCategoryToString = (category) => {\n  const conversion = {\n    learning_process: 'Leerproces',\n    recognizing_morphemes_sentence: 'Herkennen morfemen in een zin',\n    meaning_morphemes: 'Betekenis morfemen',\n    splitsing_morphemes: 'Splits morfemen',\n    create_morphemes_prefix: 'Creëren morfemen (voorvoegsel)',\n    background_morphemes: 'Alternatieve betekenis morfemen',\n    recognizing_morphemes_text: 'Herkennen morfemen in een tekst',\n    intuition: 'Intuïtie',\n    create_alternative_morphemes: 'Creëren alternatieve morfemen',\n    create_morphemes_suffix: 'Creëren morfemen (achtervoegsel)',\n    create_new_morphemes: 'Creëren nieuwe morfemen',\n  };\n\n  return conversion[category];\n};\n\nconst Insights = (props) => {\n  const { topResults, bottomResults, categories } = props;\n  const classes = useStyles();\n  const theme = useTheme();\n\n  return (\n    <PageContainer>\n      <Grid container spacing={2} className={classes.widget}>\n        <PaperWithHeader\n          headercolor={theme.widget.primary.main}\n          headertitle=\"Ondergemiddelde prestaties\"\n          height={370}\n        >\n          <DataGrid\n            pageSize={5}\n            rows={bottomResults}\n            columns={columns}\n            sortModel={[\n              {\n                field: 'correctness',\n                sort: 'asc',\n              },\n            ]}\n          />\n        </PaperWithHeader>\n        <PaperWithHeader\n          headercolor={theme.widget.primary.main}\n          headertitle=\"Bovengemiddelde prestaties\"\n          height={370}\n        >\n          <DataGrid\n            rows={topResults}\n            pageSize={5}\n            sortModel={[\n              {\n                field: 'correctness',\n                sort: 'desc',\n              },\n            ]}\n            columns={columns}\n          />\n        </PaperWithHeader>\n      </Grid>\n      <Grid container spacing={3} className={classes.widget}>\n        <PaperWithHeader\n          headercolor={theme.widget.secondary.main}\n          headertitle=\"Probleemcategorieën\"\n        >\n          <Paper className={classes.paper}>\n            {categories.slice(0, 3).map((category, index) => (\n              <ProgressBar\n                key={category.key}\n                title={`${index + 1}. ${convertCategoryToString(category.key)}`}\n                value={category.correctness}\n              />\n            ))}\n          </Paper>\n        </PaperWithHeader>\n        <PaperWithHeader\n          headercolor={theme.widget.secondary.main}\n          headertitle=\"Topcategorieën\"\n        >\n          <Paper className={classes.paper}>\n            {categories.slice(-3).map((category, index) => (\n              <ProgressBar\n                key={category.key}\n                title={`${index + 1}. ${convertCategoryToString(category.key)}`}\n                value={category.correctness}\n              />\n            ))}\n          </Paper>\n        </PaperWithHeader>\n      </Grid>\n    </PageContainer>\n  );\n};\n\nexport default Insights;\n","import React from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\n\nconst useStyles = makeStyles((theme) => ({}));\n\nconst Course = (props) => {\n  const { name, lessons } = props;\n  const classes = useStyles();\n  const history = useHistory();\n  const location = useLocation();\n\n  const goToLesson = (id) =>\n    history.push(`${location.pathname}/lessons/${id}/lesson_insights`);\n\n  return (\n    <List\n      subheader={\n        <ListSubheader component=\"div\" id=\"nested-list-subheader\">\n          {name}\n        </ListSubheader>\n      }\n    >\n      {lessons.map((lesson) => (\n        <ListItem\n          component=\"div\"\n          alignItems=\"flex-start\"\n          key={lesson.id}\n          button\n          onClick={() => goToLesson(lesson.id)}\n        >\n          <ListItemText\n            primary={`${lesson.prefix} - ${lesson.name}`}\n            secondary={\n              <Typography\n                component=\"span\"\n                variant=\"body2\"\n                className={classes.inline}\n                color=\"textPrimary\"\n              ></Typography>\n            }\n          />\n          <ListItemSecondaryAction>\n            <IconButton\n              edge=\"end\"\n              aria-label=\"comments\"\n              onClick={() => goToLesson(lesson.id)}\n            >\n              <ArrowForwardIosIcon />\n            </IconButton>\n          </ListItemSecondaryAction>\n        </ListItem>\n      ))}\n    </List>\n  );\n};\n\nexport default Course;\n","import React, { useState } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport TextField from '@material-ui/core/TextField';\nimport Course from './Course';\n\nconst useStyles = makeStyles((theme) => ({\n  marginBottom: {\n    marginBottom: '1rem',\n  },\n  pagination: {\n    margin: '1rem auto',\n  },\n}));\n\nconst Courses = (props) => {\n  const { courses } = props;\n  const classes = useStyles();\n\n  const [courseFilterValue, setCourseFilterValue] = useState(null);\n  const [courseFilterInputValue, setCourseFilterInputValue] = useState('');\n\n  const onCourseFilterInputChange = (event, newInputValue) => {\n    setCourseFilterInputValue(newInputValue);\n  };\n\n  const onCourseFilterChange = (event, newValue) => {\n    setCourseFilterValue(newValue);\n  };\n\n  const shownCourses = courseFilterValue ? [courseFilterValue] : courses;\n\n  return (\n    <Grid container spacing={2}>\n      <Grid item xs={12}>\n        <Typography variant=\"h5\" className={classes.marginBottom}>\n          Lessen\n        </Typography>\n        <Autocomplete\n          value={courseFilterValue}\n          onChange={onCourseFilterChange}\n          inputValue={courseFilterInputValue}\n          onInputChange={onCourseFilterInputChange}\n          options={courses}\n          getOptionLabel={(option) => option.name}\n          renderInput={(params) => (\n            <TextField {...params} label=\"Les zoeken\" variant=\"outlined\" />\n          )}\n        />\n        <Divider style={{ margin: '1rem 0' }} />\n        <Paper>\n          <List className={classes.root}>\n            {shownCourses.map((course) => (\n              <Course key={course.id} {...course} />\n            ))}\n          </List>\n        </Paper>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Courses;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\n\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport EmojiObjectsIcon from '@material-ui/icons/EmojiObjects';\n\nconst useStyles = makeStyles((theme) => ({}));\n\nconst getIcon = (isBottom) => {\n  return isBottom ? <EmojiObjectsIcon style={{ color: 'orange' }} /> : null;\n};\n\nconst Student = (props) => {\n  const { id, name, email, onClick, isBottom } = props;\n  const classes = useStyles();\n\n  return (\n    <ListItem\n      component=\"div\"\n      alignItems=\"flex-start\"\n      key={id}\n      button\n      style={{ alignItems: 'center' }}\n      onClick={onClick}\n    >\n      <ListItemIcon>{getIcon(isBottom)}</ListItemIcon>{' '}\n      <ListItemAvatar>\n        <Avatar alt=\"Travis Howard\" />\n      </ListItemAvatar>\n      <ListItemText\n        primary={name}\n        secondary={\n          <Typography\n            component=\"span\"\n            variant=\"body2\"\n            className={classes.inline}\n            color=\"textPrimary\"\n          >\n            {email || 'geen email'}\n          </Typography>\n        }\n      />\n      <ListItemSecondaryAction>\n        <IconButton edge=\"end\" aria-label=\"comments\">\n          <ArrowForwardIosIcon />\n        </IconButton>\n      </ListItemSecondaryAction>\n    </ListItem>\n  );\n};\n\nexport default Student;\n","import React, { useState } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useHistory } from 'react-router-dom';\nimport List from '@material-ui/core/List';\nimport Student from './Student';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport TextField from '@material-ui/core/TextField';\nimport Pagination from '@material-ui/lab/Pagination';\n\nconst PAGE_SIZE = 20;\n\nconst useStyles = makeStyles((theme) => ({\n  marginTop: {\n    marginTop: '1rem',\n  },\n  marginBottom: {\n    marginBottom: '1rem',\n  },\n}));\n\nconst Students = (props) => {\n  const { students } = props;\n  const classes = useStyles();\n  const history = useHistory();\n  const [page, setPage] = useState(0);\n  const [studentFilterValue, setStudentFilterValue] = useState(null);\n  const [studentFilterInputValue, setStudentFilterInputValue] = useState('');\n\n  const onStudentFilterInputChange = (event, newInputValue) => {\n    setStudentFilterInputValue(newInputValue);\n  };\n\n  const onStudentFilterChange = (event, newValue) => {\n    setStudentFilterValue(newValue);\n  };\n\n  const onChangePage = (event, value) => {\n    setPage(value - 1);\n  };\n\n  const start = page * PAGE_SIZE;\n\n  const shownStudents = studentFilterValue\n    ? [studentFilterValue]\n    : students.slice(start, start + PAGE_SIZE);\n\n  const onClick = (studentId) =>\n    history.push(`/dashboard/students/${studentId}`);\n\n  return (\n    <Grid container spacing={2}>\n      <Grid item xs={12}>\n        <Typography variant=\"h5\" className={classes.marginBottom}>\n          Leerlingen\n        </Typography>\n        <Autocomplete\n          value={studentFilterValue}\n          onChange={onStudentFilterChange}\n          inputValue={studentFilterInputValue}\n          onInputChange={onStudentFilterInputChange}\n          options={students}\n          getOptionLabel={(option) => option.name}\n          renderInput={(params) => (\n            <TextField {...params} label=\"Leerling zoeken\" variant=\"outlined\" />\n          )}\n        />\n        <Divider style={{ margin: '1rem 0' }} />\n        <Paper>\n          <List className={classes.root}>\n            {shownStudents.map((student) => (\n              <Student\n                key={student.id}\n                {...student}\n                isBottom={student.bottom}\n                onClick={() => onClick(student.id)}\n              />\n            ))}\n          </List>\n        </Paper>\n        {studentFilterValue ? null : (\n          <Pagination\n            className={classes.marginTop}\n            count={Math.ceil(students.length / PAGE_SIZE)}\n            color=\"primary\"\n            onChange={onChangePage}\n          />\n        )}\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Students;\n","const TabContent = (props) => {\n  const { value, index, children } = props;\n  if (value !== index) {\n    return null;\n  }\n  return children;\n};\n\nexport default TabContent;\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { useHistory } from 'react-router-dom';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Link from '@material-ui/core/Link';\n\nconst CustomBreadcrumbs = (props) => {\n  const { crumbs } = props;\n  const history = useHistory();\n\n  const handleClick = (event, crumb) => {\n    event.preventDefault();\n    history.push(crumb.path);\n  };\n\n  return (\n    <Breadcrumbs aria-label=\"breadcrumb\" style={{ marginBottom: '1rem' }}>\n      <Typography variant=\"body2\">Locatie:</Typography>\n      {crumbs.map((crumb) => (\n        <Link\n          key={crumb.path}\n          component=\"button\"\n          color=\"inherit\"\n          onClick={(event) => handleClick(event, crumb)}\n        >\n          {crumb.name}\n        </Link>\n      ))}\n    </Breadcrumbs>\n  );\n};\n\nexport default CustomBreadcrumbs;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { observer } from 'mobx-react-lite';\nimport { useParams, useHistory, useLocation } from 'react-router-dom';\nimport Typography from '@material-ui/core/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport MenuBookIcon from '@material-ui/icons/MenuBook';\nimport PeopleIcon from '@material-ui/icons/People';\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\nimport service from '../../service';\nimport Insights from './Insights';\nimport Courses from './Courses';\nimport Students from './Students';\nimport PageContainer from '../_shared/PageContainer';\nimport TabContent from '../_shared/TabContent';\nimport Breadcrumbs from '../_shared/Breadcrumbs';\nimport socket from '../../socket';\n\nconst useStyles = makeStyles((theme) => ({\n  marginBottom: {\n    marginBottom: '1rem',\n  },\n  pagination: {\n    margin: '1rem auto',\n  },\n}));\n\nconst Lesson = (props) => {\n  const { crumbs, studentStore } = props;\n  const classes = useStyles();\n  const history = useHistory();\n  const params = useParams();\n  const location = useLocation();\n  const [loading, setLoading] = useState(false);\n  const [theClass, setTheClass] = useState([]);\n  const [courses, setCourses] = useState([]);\n  const [categories, setCategories] = useState([]);\n\n  const classId = params.classId;\n\n  const loadStudents = useCallback(async () => {\n    await studentStore.loadStudents({ classId });\n  }, [studentStore, classId]);\n\n  const loadClass = useCallback(async () => {\n    const response = await service.loadClass(params.classId);\n    if (!response) return;\n    setTheClass(response.body.data);\n  }, [params.classId]);\n\n  const loadCourses = useCallback(async () => {\n    const response = await service.loadCourses({ classId });\n    if (!response) return;\n    setCourses(response.body.data);\n  }, [classId]);\n\n  const loadLessonCategories = useCallback(async () => {\n    const response = await service.loadLessonCategories(classId);\n    if (!response) return;\n    setCategories(response.body.data);\n  }, [classId]);\n\n  const loadAll = useCallback(async () => {\n    setLoading(true);\n    const promises = [\n      loadStudents(),\n      loadCourses(),\n      loadClass(),\n      loadLessonCategories(),\n    ];\n    await Promise.all(promises);\n    setLoading(false);\n  }, [loadClass, loadStudents, loadCourses, loadLessonCategories]);\n\n  const onClickTab = (event, newTab) => {\n    const currentTab = params.classTab;\n    const newPath = location.pathname.replace(currentTab, newTab);\n    history.push(newPath);\n  };\n\n  useEffect(() => {\n    loadAll();\n    socket.subscribe('newQuestionAttempts_temp', () => {\n      loadAll();\n    });\n  }, [loadAll]);\n\n  if (loading || studentStore.isLoading) {\n    return <CircularProgress />;\n  }\n\n  return (\n    <>\n      <AppBar position=\"static\">\n        <Tabs value={params.classTab} onChange={onClickTab}>\n          <Tab\n            label=\"Inzicht (klas)\"\n            value=\"class_insights\"\n            icon={<EqualizerIcon />}\n          />\n          <Tab label=\"Lessen\" value=\"class_lessons\" icon={<MenuBookIcon />} />\n          <Tab\n            label=\"Leerlingen\"\n            value=\"class_students\"\n            icon={<PeopleIcon />}\n          />\n        </Tabs>\n      </AppBar>\n      <PageContainer>\n        <Breadcrumbs crumbs={crumbs} />\n        <Grid item xs={12}>\n          <Typography variant=\"h4\" className={classes.marginBottom}>\n            {theClass.name}\n          </Typography>\n        </Grid>\n        <TabContent index=\"class_insights\" value={params.classTab}>\n          <Insights\n            topResults={studentStore.topResults}\n            bottomResults={studentStore.bottomResults}\n            categories={categories}\n          />\n        </TabContent>\n        <TabContent index=\"class_lessons\" value={params.classTab}>\n          <Courses courses={courses} />\n        </TabContent>\n        <TabContent index=\"class_students\" value={params.classTab}>\n          <Students\n            students={studentStore.students}\n            bottomResults={studentStore.bottomResults}\n          />\n        </TabContent>\n      </PageContainer>\n    </>\n  );\n};\n\nexport default observer(Lesson);\n","import React, { useEffect } from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Paper from '@material-ui/core/Paper';\nimport Title from '../_shared/Title';\nimport { Doughnut } from 'react-chartjs-2';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 400,\n  },\n}));\n\nconst CustomDoughnut = (props) => {\n  const theme = useTheme();\n  const { lessonAttempts, title } = props;\n  const classes = useStyles();\n  const { started, completed, notStarted } = lessonAttempts.reduce(\n    (acc, curr) => {\n      if (curr.isCompleted) {\n        acc.completed += 1;\n      } else if (curr.isStarted) {\n        acc.started += 1;\n      } else {\n        acc.notStarted += 1;\n      }\n      return acc;\n    },\n    { started: 0, completed: 0, notStarted: 0 }\n  );\n\n  useEffect(() => {}, []);\n\n  const data = {\n    datasets: [\n      {\n        data: [notStarted, started, completed],\n        backgroundColor: [\n          theme.statistics.red.main,\n          theme.statistics.orange.main,\n          theme.statistics.green.main,\n        ],\n      },\n    ],\n    labels: ['Niet begonnen', 'Begonnen', 'Voltooid'],\n  };\n\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n  return (\n    <Paper className={fixedHeightPaper}>\n      <Title>{title}</Title>\n      <Doughnut data={data} />\n    </Paper>\n  );\n};\n\nexport default CustomDoughnut;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Paper from '@material-ui/core/Paper';\nimport Title from '../_shared/Title';\nimport { Bar } from 'react-chartjs-2';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 400,\n  },\n}));\n\nconst Histogram = (props) => {\n  const { lessonAttempts, title } = props;\n  const classes = useStyles();\n  const gradeDistribution = lessonAttempts.reduce(\n    (acc, curr) => {\n      const index = curr.performance;\n      acc[index - 1] += 1;\n      return acc;\n    },\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n  );\n\n  const data = {\n    datasets: [\n      {\n        label: 'Aantal leerlingen',\n        data: gradeDistribution,\n      },\n    ],\n    labels: ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10'],\n  };\n\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n  return (\n    <Paper className={fixedHeightPaper}>\n      <Title>{title}</Title>\n      <Bar data={data} />\n    </Paper>\n  );\n};\n\nexport default Histogram;\n","import React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useParams, useHistory } from 'react-router-dom';\nimport { DataGrid } from '@material-ui/data-grid';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { observer } from 'mobx-react-lite';\nimport Doughnut from './Doughnut';\nimport Histogram from './Histogram';\n\nconst calculateProgress = (questionGroupAttempts = []) => {\n  const total = questionGroupAttempts.length;\n  const completed = questionGroupAttempts.reduce((acc, curr) => {\n    if (curr.isCompleted) {\n      acc += 1;\n    }\n\n    return acc;\n  }, 0);\n\n  return total !== 0 ? Math.floor((completed / total) * 100) : 100;\n};\n\nconst columns = [\n  {\n    field: 'name',\n    headerName: 'Naam',\n    flex: 0.2,\n    valueGetter: (params) => params.row.student.name,\n  },\n  {\n    field: 'progress',\n    headerName: 'Voortgang (%)',\n    flex: 0.1,\n    valueGetter: (params) =>\n      calculateProgress(params.row.questionGroupAttempts),\n  },\n  {\n    field: 'duration',\n    headerName: 'Tijdsduur (minuten)',\n    flex: 0.15,\n  },\n  { field: 'correct', headerName: 'Correct', flex: 0.1, type: 'number' },\n  { field: 'incorrect', headerName: 'Incorrect', flex: 0.1, type: 'number' },\n  { field: 'performance', headerName: 'Cijfer', flex: 0.1, type: 'number' },\n];\n\nconst useStyles = makeStyles((theme) => ({\n  datagrid: {\n    marginTop: '1rem',\n    '& .MuiDataGrid-row:hover': {\n      cursor: 'pointer',\n    },\n  },\n}));\n\nconst InsightsAfter = (props) => {\n  const classes = useStyles();\n  const history = useHistory();\n  const params = useParams();\n\n  const { lessonStore } = props;\n\n  useEffect(() => {\n    lessonStore.loadLessonAttempts(params.lessonId);\n  }, [lessonStore, params.lessonId]);\n\n  if (lessonStore.isLoading) {\n    return <CircularProgress />;\n  }\n\n  const onClickStudent = (event) =>\n    history.push(`/dashboard/students/${event.row.student.id}`);\n\n  return (\n    <Grid container spacing={2}>\n      <Grid item xs={12} md={6}>\n        <Doughnut\n          lessonAttempts={lessonStore.lessonAttempts}\n          title=\"Algemene voortgang\"\n        />\n      </Grid>\n      <Grid item xs={12} md={6}>\n        <Histogram\n          lessonAttempts={lessonStore.lessonAttempts}\n          title=\"Cijferverdeling\"\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <Paper>\n          <DataGrid\n            className={classes.datagrid}\n            autoHeight\n            rows={lessonStore.lessonAttempts}\n            columns={columns}\n            pageSize={12}\n            onRowClick={onClickStudent}\n          />\n        </Paper>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default observer(InsightsAfter);\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport DoneRoundedIcon from '@material-ui/icons/DoneRounded';\nimport CloseRoundedIcon from '@material-ui/icons/CloseRounded';\nimport { DataGrid } from '@material-ui/data-grid';\nimport { useHistory } from 'react-router-dom';\nimport PageContainer from '../_shared/PageContainer';\nimport Title from '../_shared/Title';\n\nconst convertDateToReadableString = (date) => {\n  return `${date.substring(0, 10)} ${date.substring(11, 19)}`;\n};\n\nconst columns = [\n  {\n    field: 'updatedAt',\n    headerName: 'Datum',\n    flex: 0.2,\n  },\n  {\n    field: 'student',\n    headerName: 'Leerling',\n    flex: 0.2,\n  },\n  {\n    field: 'question',\n    headerName: 'Opdracht',\n    flex: 0.2,\n  },\n  {\n    field: 'isCompleted',\n    headerName: 'Voltooid',\n    flex: 0.2,\n    renderCell: (params) =>\n      params.row.isCompleted ? <DoneRoundedIcon /> : <CloseRoundedIcon />,\n  },\n];\n\nconst useStyles = makeStyles((theme) => ({\n  datagrid: {\n    marginTop: '1rem',\n    '& .MuiDataGrid-row:hover': {\n      cursor: 'pointer',\n    },\n  },\n}));\n\nconst getRows = (questionGroups) => {\n  const rows = [];\n  questionGroups.forEach((gp) => {\n    const index = gp.index + 1;\n\n    gp.questionGroupAttempts.forEach((qga) => {\n      rows.push({\n        id: qga.id,\n        updatedAt: convertDateToReadableString(qga.updatedAt),\n        student: qga.lessonAttempts.student.name,\n        question: index,\n        isCompleted: qga.isCompleted,\n        lessonAttempts: qga.lessonAttempts,\n      });\n    });\n  });\n\n  return rows;\n};\nconst Activity = (props) => {\n  const classes = useStyles();\n  const history = useHistory();\n  const { questionGroups } = props;\n\n  const onClickStudent = (event) =>\n    history.push(`/dashboard/students/${event.row.lessonAttempts.student.id}`);\n\n  return (\n    <PageContainer>\n      <Title>Recente leerlingen activiteit</Title>\n      <Grid item xs={12}>\n        <DataGrid\n          className={classes.datagrid}\n          autoHeight\n          rows={getRows(questionGroups)}\n          columns={columns}\n          pageSize={5}\n          onRowClick={onClickStudent}\n        />\n      </Grid>\n    </PageContainer>\n  );\n};\n\nexport default Activity;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { observer } from 'mobx-react-lite';\nimport Activity from './Activity';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Paper from '@material-ui/core/Paper';\nimport PercentageDoughnut from '../_shared/PercentageDoughnut';\nimport service from '../../service';\nimport { create, all } from 'mathjs';\nimport PaperWithHeader from '../_shared/PaperWithHeader';\nimport ProgressBar from '../_shared/ProgressBar';\n\nconst useStyles = makeStyles((theme) => ({\n  widget: {\n    padding: theme.spacing(3),\n  },\n  paper: {\n    borderBottomLeftRadius: 4,\n    borderBottomRightRadius: 4,\n    borderTopLeftRadius: 0,\n    borderTopRightRadius: 0,\n    height: 230,\n    padding: theme.spacing(3),\n  },\n}));\n\nconst convertCategoryToString = (category) => {\n  const conversion = {\n    learning_process: 'Leerproces',\n    recognizing_morphemes_sentence: 'Herkennen morfemen in een zin',\n    meaning_morphemes: 'Betekenis morfemen',\n    splitsing_morphemes: 'Splits morfemen',\n    create_morphemes_prefix: 'Creëren morfemen (voorvoegsel)',\n    background_morphemes: 'Alternatieve betekenis morfemen',\n    recognizing_morphemes_text: 'Herkennen morfemen in een tekst',\n    intuition: 'Intuïtie',\n    create_alternative_morphemes: 'Creëren alternatieve morfemen',\n    create_morphemes_suffix: 'Creëren morfemen (achtervoegsel)',\n    create_new_morphemes: 'Creëren nieuwe morfemen',\n  };\n\n  return conversion[category];\n};\n\nconst InsightsDuring = (props) => {\n  const math = create(all);\n  const { questionGroupIds, lessonId, classId, questionStore, studentStore } =\n    props;\n  const theme = useTheme();\n  const classes = useStyles();\n\n  const [loading, setLoading] = useState(false);\n  const [categories, setCategories] = useState([]);\n  let ratioCorrect = 0;\n  let ratioProgress = 0;\n  let averageTime = 0;\n\n  const getAverageValues = () => {\n    let totalCorrect = 0;\n    let totalNotComplete = 0;\n    let totalComplete = 0;\n    let totalScores = 0;\n    let totalTime = 0;\n    let acc = 0;\n    let elapsedTimes = [];\n\n    if (questionStore.questionGroups) {\n      questionStore.questionGroups.forEach((qg) => {\n        qg.questionGroupAttempts.forEach((qga) => {\n          if (qga.lessonAttempts.lessonId === lessonId) {\n            if (qga.isCompleted) {\n              totalComplete += 1;\n              totalCorrect += qga.correct;\n              totalScores += qga.correct + qga.incorrect + qga.missed;\n              elapsedTimes.push(qga.timeElapsedSeconds);\n            } else {\n              totalNotComplete += 1;\n            }\n          }\n        });\n      });\n\n      ratioCorrect = Math.round((totalCorrect / totalScores) * 100);\n      ratioProgress = Math.round(\n        (totalComplete / (totalComplete + totalNotComplete)) * 100\n      );\n\n      const sortedTimes = elapsedTimes.sort((a, b) => a - b);\n      const median = math.median(sortedTimes);\n      const std = math.std(sortedTimes);\n      const rangeMin = median - std;\n      const rangeMax = median + std;\n      for (const time in sortedTimes) {\n        if (time >= rangeMin && time <= rangeMax) {\n          totalTime += parseInt(time);\n          acc += 1;\n        }\n      }\n      averageTime = totalTime / acc;\n    }\n  };\n\n  const loadLessonCategories = useCallback(async () => {\n    const response = await service.loadLessonCategories(classId);\n    if (!response) return;\n    setCategories(response.body.data);\n  }, [classId]);\n\n  const loadStudents = useCallback(async () => {\n    await studentStore.loadStudents({ classId });\n  }, [studentStore, classId]);\n\n  const loadQuestionGroups = useCallback(async () => {\n    await questionStore.loadQuestionGroupsWithAttempts(questionGroupIds);\n  }, [questionStore, questionGroupIds]);\n\n  const loadAll = useCallback(async () => {\n    setLoading(true);\n    const promises = [\n      loadStudents(),\n      loadQuestionGroups(),\n      loadLessonCategories(),\n    ];\n    await Promise.all(promises);\n    setLoading(false);\n  }, [loadStudents, loadQuestionGroups, loadLessonCategories]);\n\n  useEffect(() => {\n    loadAll();\n  }, [loadAll]);\n\n  if (questionStore.isLoading || loading) {\n    return <CircularProgress />;\n  }\n\n  getAverageValues();\n\n  const convertToMinutes = (totalSeconds) => {\n    const minutes = Math.floor(totalSeconds / 60);\n    const seconds = totalSeconds % 60;\n    return `${minutes} min. ${seconds} sec.`;\n  };\n\n  const calculateRGB = (percentage) => {\n    const shade = 0.8;\n    const color = Math.floor(\n      (percentage <= 50 ? percentage / 50 : (100 - percentage) / 50) * 255\n    );\n    const rgb = (percentage <= 50 ? [255, color, 0] : [color, 255, 0]).map(\n      (color) => Math.round(color * shade)\n    );\n    return `rgb(${rgb.join(',')})`;\n  };\n\n  const getDoughnutData = (ratio) => {\n    return {\n      datasets: [\n        {\n          data: [100 - ratio, ratio],\n          backgroundColor: ['rgb(0, 0, 0, 0)', calculateRGB(ratio)],\n        },\n      ],\n    };\n  };\n\n  const getContent = () => {\n    return questionStore.questionGroups ? (\n      <Activity\n        questionGroups={questionStore.questionGroups}\n        lessonId={lessonId}\n        {...props}\n      />\n    ) : null;\n  };\n\n  const options = ({ color, text }) => ({\n    cutoutPercentage: 75,\n    tooltips: { enabled: false },\n    hover: { mode: null },\n    responsive: true,\n    elements: {\n      center: {\n        text,\n        color: color || '#FFFFFF',\n      },\n    },\n  });\n\n  return (\n    <Grid container spacing={3}>\n      {/* Average percentage statistics */}\n      <PercentageDoughnut\n        title=\"Gemiddelde correctheid\"\n        data={getDoughnutData(ratioCorrect)}\n        options={options({\n          color: 'black',\n          text: String(ratioCorrect) + '%',\n        })}\n      />\n      <PercentageDoughnut\n        title=\"Gemiddelde voortgang\"\n        data={getDoughnutData(ratioProgress)}\n        options={options({\n          color: 'black',\n          text: String(ratioProgress) + '%',\n        })}\n        titleColor={theme.widget.secondary.main}\n      />\n      <PercentageDoughnut\n        title=\"Gemiddelde tijdsduur\"\n        data={getDoughnutData({\n          averageTime,\n        })}\n        options={options({\n          color: 'black',\n          text: convertToMinutes(averageTime),\n        })}\n        titleColor={theme.widget.tertiary.main}\n      />\n      <Grid container spacing={3} className={classes.widget}>\n        <PaperWithHeader\n          headercolor={theme.widget.secondary.main}\n          headertitle=\"Topcategorieën\"\n        >\n          <Paper className={classes.paper}>\n            {categories.slice(0, 3).map((category, index) => (\n              <ProgressBar\n                key={category.key}\n                title={`${index + 1}. ${convertCategoryToString(category.key)}`}\n                value={category.correctness}\n              />\n            ))}\n          </Paper>\n        </PaperWithHeader>\n        <PaperWithHeader\n          headercolor={theme.widget.secondary.main}\n          headertitle=\"Probleemcategorieën\"\n        >\n          <Paper className={classes.paper}>\n            {categories.slice(-3).map((category, index) => (\n              <ProgressBar\n                key={category.key}\n                title={`${index + 1}. ${convertCategoryToString(category.key)}`}\n                value={category.correctness}\n              />\n            ))}\n          </Paper>\n        </PaperWithHeader>\n      </Grid>\n      <Grid item xs={12}>\n        <Paper>{getContent()}</Paper>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default observer(InsightsDuring);\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Grid from '@material-ui/core/Grid';\n\nimport { observer } from 'mobx-react-lite';\n\nimport InsightsAfter from './InsightsAfter';\nimport InsightsDuring from './InsightsDuring';\nimport Button from '@material-ui/core/Button';\n\nconst Lesson = (props) => {\n  const [showCategory, setShowCategory] = useState('after');\n  const { lessonStore } = props;\n  const params = useParams();\n\n  useEffect(() => {\n    lessonStore.loadLesson(params.lessonId);\n  }, [lessonStore, params.lessonId]);\n\n  if (lessonStore.isLoading) {\n    return <CircularProgress />;\n  }\n  const changeCategory = () => {\n    setShowCategory(showCategory === 'during' ? 'after' : 'during');\n  };\n\n  const getQuestionGroupIds = () => {\n    if (lessonStore.lesson) {\n      const ids = lessonStore.lesson.questionGroups.map((e) => e.id);\n      return ids;\n    }\n  };\n\n  const getContent = () => {\n    return showCategory === 'after' ? (\n      <InsightsAfter {...props} />\n    ) : (\n      <InsightsDuring\n        questionGroupIds={getQuestionGroupIds()}\n        lessonId={params.lessonId}\n        classId={params.classId}\n        {...props}\n      />\n    );\n  };\n\n  return (\n    <Grid container spacing={2}>\n      <Grid\n        container\n        spacing={2}\n        style={{ justifyContent: 'center', display: 'flex' }}\n      >\n        <Grid\n          item\n          xs={4}\n          style={{\n            display: 'flex',\n            direction: 'row',\n            justifyContent: 'center',\n            alignItems: 'center',\n            paddingBottom: '2rem',\n            paddingTop: '2rem',\n          }}\n        >\n          <Grid item style={{ paddingRight: '1rem' }}>\n            <Button\n              variant=\"contained\"\n              color={showCategory === 'during' ? 'primary' : 'default'}\n              onClick={changeCategory}\n            >\n              Tijdens de les\n            </Button>\n          </Grid>\n          <Grid item style={{ paddingLeft: '1rem' }}>\n            <Button\n              variant=\"contained\"\n              color={showCategory === 'after' ? 'primary' : 'default'}\n              onClick={changeCategory}\n            >\n              Achteraf\n            </Button>\n          </Grid>\n        </Grid>\n      </Grid>\n      <Grid item xs={12}>\n        {getContent()}\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default observer(Lesson);\n","import React, { useEffect } from 'react';\nimport { useParams, useHistory, useLocation } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { observer } from 'mobx-react-lite';\nimport { DataGrid } from '@material-ui/data-grid';\n\nconst typeLabels = {\n  open: 'Open',\n  clickTheRightWords: 'Selecteer het correcte antwoord',\n  multipleChoice: 'Meerkeuze',\n  divideTheWord: 'Verdeel het woord',\n  combineAndFillInTheBlanks: 'Combineer en vul in',\n};\n\nconst columns = [\n  {\n    field: 'name',\n    headerName: 'Naam',\n\n    flex: 0.2,\n  },\n  {\n    field: 'index',\n    headerName: 'Opdrachtnummer',\n    flex: 0.1,\n    type: 'number',\n    valueGetter: (params) => params.value + 1,\n  },\n  {\n    field: 'questionGroups',\n    headerName: 'Vragen',\n    flex: 0.1,\n    valueGetter: (params) => params.row.questions.length,\n    type: 'number',\n  },\n  {\n    field: 'type',\n    headerName: 'Type',\n    flex: 0.2,\n    valueGetter: (params) => {\n      const type = params.row.questions[0].type;\n      const label = typeLabels[type] || type;\n      return label;\n    },\n  },\n  {\n    field: 'averageScore',\n    headerName: 'Gem. score (%)',\n    flex: 0.1,\n    type: 'number',\n  },\n  {\n    field: 'averageElapsedTime',\n    headerName: 'Gem. tijdsduur (sec)',\n    flex: 0.1,\n    type: 'number',\n  },\n  {\n    field: 'completions',\n    headerName: 'Klaar',\n    flex: 0.1,\n    type: 'number',\n  },\n];\n\nconst useStyles = makeStyles((theme) => ({\n  datagrid: {\n    marginTop: '1rem',\n    '& .MuiDataGrid-row:hover': {\n      cursor: 'pointer',\n    },\n  },\n}));\n\nconst LessonContent = (props) => {\n  const { lessonStore } = props;\n  const location = useLocation();\n  const classes = useStyles();\n  const params = useParams();\n  const history = useHistory();\n\n  const onClickStudent = (event) =>\n    history.push(\n      `${location.pathname}/questionGroups/${event.row.id}/question_group_insights`\n    );\n\n  useEffect(() => {\n    lessonStore.loadLesson(params.lessonId);\n  }, [lessonStore, params.lessonId]);\n\n  if (lessonStore.isLoading || !lessonStore.lesson) {\n    return <CircularProgress />;\n  }\n\n  return (\n    <DataGrid\n      className={classes.datagrid}\n      autoHeight\n      rows={lessonStore.lesson.questionGroups}\n      columns={columns}\n      pageSize={12}\n      onRowClick={onClickStudent}\n      sortModel={[\n        {\n          field: 'index',\n          sort: 'asc',\n        },\n      ]}\n    />\n  );\n};\n\nexport default observer(LessonContent);\n","import React from 'react';\nimport { useParams, useHistory, useLocation } from 'react-router-dom';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\nimport EditIcon from '@material-ui/icons/Edit';\nimport { observer } from 'mobx-react-lite';\nimport Insights from './Insights';\nimport Questions from './LessonContent';\nimport TabContent from '../_shared/TabContent';\nimport Breadcrumbs from '../_shared/Breadcrumbs';\nimport PageContainer from '../_shared/PageContainer';\n\nconst Lesson = (props) => {\n  const { crumbs } = props;\n  const history = useHistory();\n  const params = useParams();\n  const location = useLocation();\n\n  const onClickTab = (event, newTab) => {\n    const currentTab = params.lessonTab;\n    const newPath = location.pathname.replace(currentTab, newTab);\n    history.push(newPath);\n  };\n\n  return (\n    <>\n      <AppBar position=\"static\">\n        <Tabs value={params.lessonTab} onChange={onClickTab}>\n          <Tab\n            label=\"Inzicht (les)\"\n            value=\"lesson_insights\"\n            icon={<EqualizerIcon />}\n          />\n          <Tab\n            label=\"Opdrachten\"\n            value=\"lesson_questions\"\n            icon={<EditIcon />}\n          />\n        </Tabs>\n      </AppBar>\n\n      <PageContainer maxWidth=\"lg\">\n        <Breadcrumbs crumbs={crumbs} />\n        <TabContent index=\"lesson_insights\" value={params.lessonTab}>\n          <Insights {...props} />\n        </TabContent>\n        <TabContent index=\"lesson_questions\" value={params.lessonTab}>\n          <Questions {...props} />\n        </TabContent>\n      </PageContainer>\n    </>\n  );\n};\n\nexport default observer(Lesson);\n","import React from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\n\nconst Lesson = (props) => {\n  const { name, id, prefix } = props;\n  const history = useHistory();\n  const location = useLocation();\n  const onClick = () => history.push(`${location.pathname}/lessons/${id}`);\n\n  return (\n    <ListItem\n      component=\"div\"\n      alignItems=\"flex-start\"\n      key={id}\n      button\n      onClick={onClick}\n    >\n      <ListItemText primary={`${prefix} - ${name}`} />\n      <ListItemSecondaryAction>\n        <IconButton edge=\"end\" aria-label=\"comments\">\n          <ArrowForwardIosIcon />\n        </IconButton>\n      </ListItemSecondaryAction>\n    </ListItem>\n  );\n};\n\nexport default Lesson;\n","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Lesson from './Lesson';\n\nconst useStyles = makeStyles((theme) => ({\n  fullWidth: {\n    width: '100%',\n  },\n}));\n\nconst Course = (props) => {\n  const { name, id, lessons } = props;\n  const classes = useStyles();\n  const [expanded, setExpanded] = useState(true);\n  const onChange = () => setExpanded(!expanded);\n  return (\n    <ListItem component=\"div\" alignItems=\"flex-start\" key={id}>\n      <Accordion\n        className={classes.fullWidth}\n        TransitionProps={{ unmountOnExit: true }}\n        expanded={expanded}\n        onChange={onChange}\n      >\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel1a-content\"\n          id=\"panel1a-header\"\n        >\n          <Typography>{name}</Typography>\n        </AccordionSummary>\n        <AccordionDetails>\n          <List\n            subheader={\n              <ListSubheader component=\"div\" id=\"nested-list-subheader\">\n                Lessen\n              </ListSubheader>\n            }\n            style={{ width: '100%' }}\n          >\n            {lessons.map((lesson) => (\n              <Lesson key={lesson.id} {...lesson} />\n            ))}\n          </List>\n        </AccordionDetails>\n      </Accordion>\n    </ListItem>\n  );\n};\n\nexport default Course;\n","import React from 'react';\nimport List from '@material-ui/core/List';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport Course from './Course';\n\nconst Courses = (props) => {\n  const { courses } = props;\n  return (\n    <List\n      subheader={\n        <ListSubheader component=\"div\" id=\"nested-list-subheader\">\n          Cursussen\n        </ListSubheader>\n      }\n    >\n      {courses.map((course) => (\n        <Course key={course.id} {...course} />\n      ))}\n    </List>\n  );\n};\n\nexport default Courses;\n","import React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport { Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(() => ({\n  title: {\n    textAlign: 'center',\n    background: 'black',\n    color: 'white',\n    alignItems: 'baseline',\n    display: 'flex',\n    justifyContent: 'center',\n  },\n}));\n\nconst ProfileHeader = (props) => {\n  const { name } = props;\n  const classes = useStyles();\n  return (\n    <Paper className={classes.title}>\n      <Typography style={{ variant: 'h5' }}> Naam Leerling: </Typography>\n      <Typography style={{ variant: 'h6', marginLeft: '10%' }}>\n        {name}\n      </Typography>\n    </Paper>\n  );\n};\n\nexport default ProfileHeader;\n","import React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport DoneIcon from '@material-ui/icons/Done';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport RestoreIcon from '@material-ui/icons/Restore';\n\nconst createRow = (courseName, lessonName, category) => ({\n  courseName,\n  lessonName,\n  category,\n});\n\nconst getIcon = (category) => {\n  switch (category) {\n    case 'progress':\n      return <RestoreIcon style={{ color: 'orange' }} />;\n    case 'completed':\n      return <DoneIcon style={{ color: 'green' }} />;\n    default:\n      return <ClearIcon style={{ color: 'red' }} />;\n  }\n};\n\nconst getRows = (courses) => {\n  const rows = [];\n\n  courses.forEach((course) => {\n    const courseName = course.name;\n    course.lessons.forEach((lesson) => {\n      const lessonName = lesson.name;\n      lesson.lessonAttempts.forEach((lessonAttempt) => {\n        if (lessonAttempt.isStarted && lessonAttempt.isCompleted) {\n          rows.push(createRow(courseName, lessonName, 'completed'));\n        } else if (lessonAttempt.isStarted && !lessonAttempt.isCompleted) {\n          rows.push(createRow(courseName, lessonName, 'progress'));\n        } else {\n          rows.push(createRow(courseName, lessonName, 'notstarted'));\n        }\n      });\n    });\n  });\n  return rows;\n};\n\nconst Progress = (props) => {\n  const { courses } = props;\n  const rows = getRows(courses);\n\n  return (\n    <TableContainer component={Paper}>\n      <Table aria-label=\"spanning table\">\n        <TableHead>\n          <TableRow>\n            <TableCell align=\"left\">Cursus</TableCell>\n            <TableCell align=\"left\">Les</TableCell>\n            <TableCell align=\"left\">Voortgang</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map((row, index) => (\n            <TableRow key={index}>\n              {index === 0 ? (\n                <TableCell rowSpan={rows.length}> {row.courseName}</TableCell>\n              ) : null}\n\n              <TableCell align=\"left\">{row.lessonName}</TableCell>\n              <TableCell> {getIcon(row.category)} </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n\nexport default Progress;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { observer } from 'mobx-react-lite';\nimport { useParams } from 'react-router-dom';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport PageContainer from '../_shared/PageContainer';\nimport service from '../../service';\nimport Courses from './Courses';\nimport ProfileHeader from './ProfileHeader';\nimport Progress from './Progress';\nimport PaperWithHeader from '../_shared/PaperWithHeader';\nimport ProgressBar from '../_shared/ProgressBar';\n\nconst useStyles = makeStyles((theme) => ({\n  widget: {\n    height: 230,\n    padding: theme.spacing(3),\n    marginBottom: theme.spacing(12),\n  },\n  paper: {\n    borderBottomLeftRadius: 4,\n    borderBottomRightRadius: 4,\n    borderTopLeftRadius: 0,\n    borderTopRightRadius: 0,\n    height: 230,\n    padding: theme.spacing(3),\n  },\n}));\n\n// TODO: this is duplicate code! Make sure to create store for this and then call shared _utils.js\nconst convertCategoryToString = (category) => {\n  const conversion = {\n    learning_process: 'Leerproces',\n    recognizing_morphemes_sentence: 'Herkennen morfemen in een zin',\n    meaning_morphemes: 'Betekenis morfemen',\n    splitsing_morphemes: 'Splits morfemen',\n    create_morphemes_prefix: 'Creëren morfemen (voorvoegsel)',\n    background_morphemes: 'Alternatieve betekenis morfemen',\n    recognizing_morphemes_text: 'Herkennen morfemen in een tekst',\n    intuition: 'Intuïtie',\n    create_alternative_morphemes: 'Creëren alternatieve morfemen',\n    create_morphemes_suffix: 'Creëren morfemen (achtervoegsel)',\n    create_new_morphemes: 'Creëren nieuwe morfemen',\n  };\n\n  return conversion[category];\n};\n\nconst Student = (props) => {\n  const classes = useStyles();\n  const params = useParams();\n  const theme = useTheme();\n  const [loading, setLoading] = useState(false);\n  const [student, setStudent] = useState([]);\n  const [courses, setCourses] = useState([]);\n  const [categories, setCategories] = useState([]);\n\n  const loadCourses = useCallback(async () => {\n    const studentId = params.studentId;\n    const response = await service.loadCourses({ studentId });\n    if (!response) {\n      return;\n    }\n    setCourses(response.body.data);\n  }, [params.studentId]);\n\n  const loadStudent = useCallback(async () => {\n    const studentId = params.studentId;\n    const response = await service.loadStudent(studentId);\n    if (!response) {\n      return;\n    }\n    setStudent(response.body.data);\n  }, [params.studentId]);\n\n  const loadStudentCategories = useCallback(async () => {\n    const studentId = params.studentId;\n    const response = await service.loadStudentCategories(studentId);\n    if (!response) {\n      return;\n    }\n    setCategories(response.body.data);\n  }, [params.studentId]);\n\n  const loadAll = useCallback(async () => {\n    setLoading(true);\n\n    const promises = [loadCourses(), loadStudent(), loadStudentCategories()];\n    await Promise.all(promises);\n\n    setLoading(false);\n  }, [loadCourses, loadStudent, loadStudentCategories]);\n\n  useEffect(() => {\n    loadAll();\n  }, [loadAll]);\n\n  if (loading) {\n    return <CircularProgress />;\n  }\n\n  return (\n    <PageContainer>\n      <Grid container spacing={2}>\n        <Grid item xs={12}>\n          <ProfileHeader {...student} />\n        </Grid>\n        <Grid container spacing={3} className={classes.widget}>\n          <Grid item xs={12}>\n            <Progress courses={courses} />\n          </Grid>\n\n          <PaperWithHeader\n            headercolor={theme.widget.secondary.main}\n            headertitle=\"Topcategorieën\"\n          >\n            <Paper className={classes.paper}>\n              {categories.slice(0, 3).map((category, index) => (\n                <ProgressBar\n                  key={category.key}\n                  title={`${index + 1}. ${convertCategoryToString(\n                    category.key\n                  )}`}\n                  value={category.correctness}\n                />\n              ))}\n            </Paper>\n          </PaperWithHeader>\n          <PaperWithHeader\n            headercolor={theme.widget.secondary.main}\n            headertitle=\"Probleemcategorieën\"\n          >\n            <Paper className={classes.paper}>\n              {categories.slice(-3).map((category, index) => (\n                <ProgressBar\n                  key={category.key}\n                  title={`${index + 1}. ${convertCategoryToString(\n                    category.key\n                  )}`}\n                  value={category.correctness}\n                />\n              ))}\n            </Paper>\n          </PaperWithHeader>\n          <Grid item xs={12}>\n            <Courses courses={courses} />\n          </Grid>\n        </Grid>\n      </Grid>\n    </PageContainer>\n  );\n};\n\nexport default observer(Student);\n","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { DataGrid } from '@material-ui/data-grid';\n\nimport Grid from '@material-ui/core/Grid';\nimport Modal from '@material-ui/core/Modal';\n\nimport Title from '../_shared/Title';\n\nconst convertDateToReadableString = (date) => {\n  return `${date.substring(0, 10)} ${date.substring(11, 19)}`;\n};\n\nconst columns = [\n  {\n    field: 'updatedAt',\n    headerName: 'Datum',\n    flex: 0.2,\n    renderCell: (params) => convertDateToReadableString(params.row.updatedAt),\n  },\n  {\n    field: 'questionGroup',\n    headerName: 'Opdracht',\n    flex: 0.4,\n    valueGetter: (params) => params.row.question.questions.name,\n  },\n  {\n    field: 'questionGroupIndex',\n    headerName: 'Opdracht index',\n    flex: 0.2,\n    valueGetter: (params) => params.row.question.questions.index + 1,\n  },\n  {\n    field: 'question',\n    headerName: 'Vraag nummer',\n    flex: 0.2,\n    valueGetter: (params) => params.row.question.index + 1,\n  },\n];\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: 'absolute',\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n  },\n  datagrid: {\n    marginTop: '1rem',\n    '& .MuiDataGrid-row:hover': {\n      cursor: 'pointer',\n    },\n  },\n}));\n\nconst QuestionAttempts = (props) => {\n  const classes = useStyles();\n  const { questionAttempts } = props;\n  const [modalOpen, setModalOpen] = useState(false);\n  const [modalContent, setModalContent] = useState({});\n\n  const handleModalOpen = (event) => {\n    setModalContent(event.row);\n    setModalOpen(true);\n  };\n\n  const handleModalClose = () => {\n    setModalOpen(false);\n    setModalContent({});\n  };\n\n  const Body = React.forwardRef((props, ref) => (\n    <div {...props} className={classes.paper} ref={ref}>\n      <h2 id=\"simple-modal-title\">Antwoord</h2>\n      <p id=\"simple-modal-description\">{JSON.stringify(modalContent.answer)}</p>\n    </div>\n  ));\n\n  return (\n    <React.Fragment>\n      <Modal\n        open={modalOpen}\n        onClose={handleModalClose}\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n      >\n        <Body />\n      </Modal>\n      <Title>Antwoorden</Title>\n      <Grid item xs={12}>\n        <DataGrid\n          className={classes.datagrid}\n          autoHeight\n          rows={questionAttempts}\n          columns={columns}\n          pageSize={5}\n          onRowClick={(event) => handleModalOpen(event)}\n        />\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default QuestionAttempts;\n","import React, { useEffect, useCallback } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\n// import BarGraph from './BarGraph'; // TODO (working on this): IF we want to implement all question types\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport PageContainer from '../_shared/PageContainer';\nimport QuestionAttempts from './QuestionAttempts';\nimport { useParams } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n}));\n\nconst StudentLesson = (props) => {\n  const { questionStore } = props;\n  const classes = useStyles();\n  const params = useParams();\n\n  const loadAll = useCallback(async () => {\n    await questionStore.loadQuestionAttemptsWithInfo(\n      params.studentId,\n      params.lessonId\n    );\n  }, [questionStore, params.studentId, params.lessonId]);\n\n  useEffect(() => {\n    loadAll();\n  }, [loadAll]);\n\n  if (questionStore.isLoading) {\n    return <CircularProgress />;\n  }\n\n  return (\n    <PageContainer>\n      {/* / TODO (working on this): IF we want to implement all question types\n      <Grid item xs={12} md={12}>\n        <BarGraph\n          questionAttempts={questionStore.questionAttempts}\n          title=\"Correctheid verdeling per vraag\"\n        />\n      </Grid> */}\n      <Grid item xs={12}>\n        <Paper className={classes.paper}>\n          <QuestionAttempts questionAttempts={questionStore.questionAttempts} />\n        </Paper>\n      </Grid>\n    </PageContainer>\n  );\n};\n\nexport default StudentLesson;\n","import React from 'react';\nimport { useTheme } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport { Bar } from 'react-chartjs-2';\nimport Title from '../_shared/Title';\n\nconst calculateDistribution = (\n  questionGroupAttempts,\n  amountQuestions,\n  questionIds\n) => {\n  const correctPerQuestion = Array(amountQuestions).fill(0);\n  const incorrectPerQuestion = Array(amountQuestions).fill(0);\n  const missedPerQuestion = Array(amountQuestions).fill(0);\n\n  questionGroupAttempts.forEach((questionGroupAttempt) => {\n    if (questionGroupAttempt.isCompleted) {\n      questionGroupAttempt.questionAttempts.forEach((questionAttempt) => {\n        const indexCorrect = questionIds.findIndex(\n          (el) => el === questionAttempt.questionId && questionAttempt.correct\n        );\n        correctPerQuestion[indexCorrect] += 1;\n        const indexIncorrect = questionIds.findIndex(\n          (el) => el === questionAttempt.questionId && questionAttempt.incorrect\n        );\n        incorrectPerQuestion[indexIncorrect] += 1;\n        const indexMissed = questionIds.findIndex(\n          (el) => el === questionAttempt.questionId && questionAttempt.missed\n        );\n        missedPerQuestion[indexMissed] += 1;\n      });\n    }\n  });\n  return [correctPerQuestion, incorrectPerQuestion, missedPerQuestion];\n};\n\nconst getLabels = (amountQuestions) => {\n  const labels = [];\n  for (let i = 0; i < amountQuestions; i++) {\n    labels.push('Vraag ' + parseInt(i + 1));\n  }\n  return labels;\n};\n\nconst BarGraph = (props) => {\n  const theme = useTheme();\n  const { questionGroup, title } = props;\n  const amountQuestions = questionGroup.questions.length;\n  const questionIds = [];\n  questionGroup.questions.forEach((question) => {\n    questionIds.push(question.id);\n  });\n\n  const distributions = calculateDistribution(\n    questionGroup.questionGroupAttempts,\n    amountQuestions,\n    questionIds\n  );\n  const data = {\n    datasets: [\n      {\n        label: 'Aantal juiste antwoorden',\n        data: distributions[0],\n        backgroundColor: distributions[0].map(\n          () => theme.statistics.green.main\n        ),\n      },\n      {\n        label: 'Aantal incorrect antwoorden',\n        data: distributions[1],\n        backgroundColor: distributions[1].map(() => theme.statistics.red.main),\n      },\n      {\n        label: 'Aantal gemiste antwoorden',\n        data: distributions[2],\n        backgroundColor: distributions[2].map(\n          () => theme.statistics.orange.main\n        ),\n      },\n    ],\n    labels: getLabels(amountQuestions),\n  };\n\n  return (\n    <Paper>\n      <Title>{title}</Title>\n      <Bar data={data} />\n    </Paper>\n  );\n};\n\nexport default BarGraph;\n","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Paper from '@material-ui/core/Paper';\nimport Title from '../_shared/Title';\nimport { Doughnut } from 'react-chartjs-2';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    textAlign: 'center',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 400,\n  },\n}));\n\nconst CustomDoughnut = (props) => {\n  const theme = useTheme();\n  const { questionGroupAttempts, title } = props;\n  const classes = useStyles();\n  let correct = 0;\n  let incorrect = 0;\n  let missed = 0;\n  questionGroupAttempts.forEach((qga) => {\n    qga.questionAttempts.forEach((qa) => {\n      correct += qa.correct;\n      incorrect += qa.incorrect;\n      missed += qa.missed;\n    });\n  });\n\n  const data = {\n    datasets: [\n      {\n        data: [correct, incorrect, missed],\n        backgroundColor: [\n          theme.statistics.green.main,\n          theme.statistics.red.main,\n          theme.statistics.orange.main,\n        ],\n      },\n    ],\n    labels: ['Correct', 'Incorrect', 'Gemist'],\n  };\n\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n  return (\n    <Paper className={fixedHeightPaper}>\n      <Title>{title}</Title>\n      <Doughnut data={data} />\n    </Paper>\n  );\n};\n\nexport default CustomDoughnut;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\nimport PropTypes from 'prop-types';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActionArea from '@material-ui/core/CardActionArea';\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    height: 180,\n    display: 'flex',\n    width: 600,\n  },\n  widget: {\n    height: '100%',\n    color: 'white',\n    display: 'flex',\n    justifyContent: 'center',\n    textAlign: 'center',\n\n    padding: theme.spacing(2),\n  },\n  widgetTop: {\n    fontWeight: 400,\n    padding: theme.spacing(2),\n  },\n  widgetBottom: {\n    fontWeight: 100,\n    padding: theme.spacing(2),\n  },\n}));\n\nconst Tile = (props) => {\n  const { questionGroup, title, number, color } = props;\n  const classes = useStyles();\n  const amountLessons = questionGroup.questions.length;\n  const averageElapsedTime = questionGroup.averageElapsedTime;\n  const value = number === 1 ? amountLessons : averageElapsedTime + ' sec.';\n\n  return (\n    <Card style={{ backgroundColor: color }} className={classes.card}>\n      <CardActionArea onClick={props.onClick}>\n        <CardContent>\n          <Grid container spacing={1} className={classes.widget}>\n            <Typography variant=\"h5\" className={classes.widgetTop}>\n              {title}\n            </Typography>\n            <Typography variant=\"h5\" className={classes.widgetBottom}>\n              {value}\n            </Typography>\n          </Grid>\n        </CardContent>\n      </CardActionArea>\n    </Card>\n  );\n};\n\nTile.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default Tile;\n","import React, { useEffect, useCallback } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useTheme } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport BarGraph from './BarGraph';\nimport Grid from '@material-ui/core/Grid';\nimport Doughnut from './Doughnut';\nimport Tile from './Tile';\nimport { observer } from 'mobx-react-lite';\n\nconst Insights = (props) => {\n  const { questionStore } = props;\n  const theme = useTheme();\n  const params = useParams();\n\n  const loadAll = useCallback(async () => {\n    await questionStore.loadQuestionGroupsWithAttempts(params.questionGroupId);\n  }, [questionStore, params.questionGroupId]);\n\n  useEffect(() => {\n    loadAll();\n  }, [loadAll]);\n\n  if (questionStore.isLoading || !questionStore.questionGroups) {\n    return <CircularProgress />;\n  }\n\n  return (\n    <Grid container spacing={2}>\n      <Grid item xs={12} md={6}>\n        <Doughnut\n          questionGroupAttempts={\n            questionStore.questionGroups[0].questionGroupAttempts\n          }\n          title=\"Correctheid verdeling van de vragen\"\n        />\n      </Grid>\n      <Grid item xs={12} md={6} style={{ padding: '1rem' }}>\n        <Tile\n          questionGroup={questionStore.questionGroups[0]}\n          title=\"Totaal aantal vragen: \"\n          number={1}\n          color={theme.widget.tertiary.main}\n        />\n        <Tile\n          questionGroup={questionStore.questionGroups[0]}\n          title=\"Gemiddelde tijdsduur opdracht: \"\n          number={2}\n          color={theme.widget.secondary.main}\n        />\n      </Grid>\n      <Grid item xs={12} md={12}>\n        <BarGraph\n          questionGroup={questionStore.questionGroups[0]}\n          title=\"Correctheid verdeling per vraag\"\n        />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default observer(Insights);\n","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ListItem from '@material-ui/core/ListItem';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport EditIcon from '@material-ui/icons/Edit';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport IconButton from '@material-ui/core/IconButton';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport CancelRoundedIcon from '@material-ui/icons/CancelRounded';\nimport ClearRoundedIcon from '@material-ui/icons/ClearRounded';\nimport CheckCircleRoundedIcon from '@material-ui/icons/CheckCircleRounded';\nimport TextField from '@material-ui/core/TextField';\nimport Popover from '@material-ui/core/Popover';\n\nconst useStyles = makeStyles((theme) => ({\n  fullWidth: {\n    width: '100%',\n  },\n  popover: {\n    pointerEvents: 'none',\n  },\n  paper: {\n    padding: theme.spacing(1),\n  },\n}));\n\nconst RemoveButton = ({ onClick }) => (\n  <label htmlFor=\"icon-button-file\">\n    <IconButton\n      color=\"primary\"\n      aria-label=\"upload picture\"\n      component=\"span\"\n      onClick={onClick}\n    >\n      <ClearRoundedIcon />\n    </IconButton>\n  </label>\n);\n\nconst MultipleChoice = (props) => {\n  const classes = useStyles();\n  const { id, instruction, data: originalData, save, setIsBlocking } = props;\n  const dataCopy = { ...originalData };\n  const [data, setData] = useState(dataCopy);\n  const [popoverText, setPopoverText] = useState('');\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [editing, setEditing] = useState(false);\n\n  const addOption = () => {\n    setIsBlocking(true);\n    const newOption = { isCorrect: false, value: '' };\n    const newOptions = [...data.options, newOption];\n    const newData = { ...data, options: newOptions };\n    setData(newData);\n  };\n\n  const removeOption = (optionToRemove) => {\n    setIsBlocking(true);\n    const newOptions = data.options.filter(\n      (option) => option !== optionToRemove\n    );\n    const newData = { ...data, options: newOptions };\n    setData(newData);\n  };\n\n  const editOption = (optionToEdit, event) => {\n    setIsBlocking(true);\n    const newOptions = data.options.map((option) => {\n      if (option === optionToEdit) {\n        return { ...option, value: event.target.value };\n      }\n      return option;\n    });\n    const newData = { ...data, options: newOptions };\n    setData(newData);\n  };\n\n  const editCorrect = (newCorrectOption, event) => {\n    setIsBlocking(true);\n    const newOptions = data.options.map((option) => {\n      if (option === newCorrectOption) {\n        return { ...newCorrectOption, isCorrect: !option.isCorrect };\n      }\n      return option;\n    });\n    const newData = { ...data, options: newOptions };\n    setData(newData);\n  };\n\n  const enableEdit = () => setEditing(true);\n\n  const saveEdit = () => {\n    handlePopoverClose();\n    setEditing(false);\n    save(data);\n    setIsBlocking(false);\n  };\n\n  const cancelEdit = () => {\n    handlePopoverClose();\n    setEditing(false);\n    setData(originalData);\n    setIsBlocking(false);\n  };\n\n  const handlePopoverOpen = (event, message) => {\n    setPopoverText(message);\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handlePopoverClose = () => {\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n\n  return (\n    <>\n      <Popover\n        id=\"mouse-over-popover\"\n        className={classes.popover}\n        classes={{\n          paper: classes.paper,\n        }}\n        open={open}\n        anchorEl={anchorEl}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'left',\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'left',\n        }}\n        onClose={handlePopoverClose}\n        disableRestoreFocus\n      >\n        <Typography>{popoverText}</Typography>\n      </Popover>\n      <ListItem component=\"div\" alignItems=\"flex-start\" key={id}>\n        <Grid container>\n          <Grid item xs={12}>\n            <Typography variant=\"body1\" className={classes.marginBottom}>\n              {instruction}\n            </Typography>\n          </Grid>\n          <Grid item xs={12}>\n            <Typography>{data.value}</Typography>\n          </Grid>\n          <Grid item xs={10}>\n            <FormControl component=\"fieldset\">\n              <FormLabel component=\"legend\">\n                Selecteer het juiste antwoord\n              </FormLabel>\n              <RadioGroup>\n                {data.options.map((option, index) => (\n                  <div key={index}>\n                    <FormControlLabel\n                      value={option.value}\n                      control={\n                        <Radio\n                          color=\"primary\"\n                          checked={option.isCorrect}\n                          onClick={(event) => editCorrect(option, event)}\n                        />\n                      }\n                      label={\n                        editing ? (\n                          <TextField\n                            value={option.value}\n                            onChange={(event) => editOption(option, event)}\n                            placeholder=\"Nieuw antwoord\"\n                          />\n                        ) : (\n                          option.value\n                        )\n                      }\n                      disabled={!editing}\n                    />\n                    {editing && (\n                      <RemoveButton onClick={() => removeOption(option)} />\n                    )}\n                  </div>\n                ))}\n              </RadioGroup>\n              {editing ? (\n                <label htmlFor=\"icon-button-file\">\n                  <IconButton\n                    color=\"primary\"\n                    aria-label=\"upload picture\"\n                    component=\"span\"\n                    onClick={addOption}\n                  >\n                    <AddCircleIcon />\n                  </IconButton>\n                  Antwoord toevoegen\n                </label>\n              ) : null}\n            </FormControl>\n          </Grid>\n          {editing ? (\n            <>\n              <Grid item xs={1}>\n                <IconButton\n                  color=\"primary\"\n                  aria-label=\"upload picture\"\n                  component=\"span\"\n                  onClick={saveEdit}\n                  onMouseEnter={(e) =>\n                    handlePopoverOpen(e, 'Aanpassingen opslaan')\n                  }\n                  onMouseLeave={handlePopoverClose}\n                  aria-owns={open ? 'mouse-over-popover' : undefined}\n                  aria-haspopup=\"true\"\n                >\n                  <CheckCircleRoundedIcon />\n                </IconButton>\n              </Grid>\n              <Grid item xs={1}>\n                <IconButton\n                  color=\"secondary\"\n                  component=\"span\"\n                  onClick={cancelEdit}\n                  onMouseEnter={(e) =>\n                    handlePopoverOpen(e, 'Aanpassingen ongedaan maken')\n                  }\n                  onMouseLeave={handlePopoverClose}\n                  aria-owns={open ? 'mouse-over-popover' : undefined}\n                  aria-haspopup=\"true\"\n                >\n                  <CancelRoundedIcon />\n                </IconButton>\n              </Grid>\n            </>\n          ) : (\n            <Grid item xs={2}>\n              <IconButton\n                color=\"primary\"\n                onClick={enableEdit}\n                onMouseEnter={(e) => handlePopoverOpen(e, 'Vraag aanpassen')}\n                onMouseLeave={handlePopoverClose}\n                aria-owns={open ? 'mouse-over-popover' : undefined}\n                aria-haspopup=\"true\"\n              >\n                <EditIcon />\n              </IconButton>\n            </Grid>\n          )}\n        </Grid>\n      </ListItem>\n    </>\n  );\n};\n\nexport default MultipleChoice;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ListItem from '@material-ui/core/ListItem';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport TextField from '@material-ui/core/TextField';\n\nconst useStyles = makeStyles((theme) => ({\n  fullWidth: {\n    width: '100%',\n  },\n}));\n\nconst MultipleChoiceGroup = (props) => {\n  const { id, index, data } = props;\n  const classes = useStyles();\n\n  return (\n    <ListItem component=\"div\" alignItems=\"flex-start\" key={id}>\n      <Grid container>\n        <Grid item xs={12} md={6} className={classes.fullWidth}>\n          <Typography>{`${index + 1}. ${data.word}`}</Typography>\n        </Grid>\n        {(data.morphemes || []).map((morpheme, index) => (\n          <Grid item xs={12} key={morpheme.value}>\n            <Typography>{morpheme.value}</Typography>\n            <RadioGroup>\n              {morpheme.options.map((option, index) => (\n                <div key={index}>\n                  <FormControlLabel\n                    value={option.value}\n                    disabled\n                    control={\n                      <Radio color=\"primary\" checked={option.isCorrect} />\n                    }\n                    label={\n                      <TextField\n                        value={option.value}\n                        placeholder=\"Nieuw antwoord\"\n                        disabled\n                      />\n                    }\n                  />\n                </div>\n              ))}\n            </RadioGroup>\n          </Grid>\n        ))}\n      </Grid>\n    </ListItem>\n  );\n};\n\nexport default MultipleChoiceGroup;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ListItem from '@material-ui/core/ListItem';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\n\nconst useStyles = makeStyles((theme) => ({\n  fullWidth: {\n    width: '100%',\n  },\n}));\n\nconst Open = (props) => {\n  const { id } = props;\n  const classes = useStyles();\n\n  return (\n    <ListItem component=\"div\" alignItems=\"flex-start\" key={id}>\n      <Grid container>\n        <Grid item xs={12} md={6} className={classes.fullWidth}>\n          <Typography variant=\"body1\">\n            {`${props.index + 1}. ${props.instruction}`}\n          </Typography>\n          <TextField\n            disabled\n            multiline\n            rows={4}\n            className={classes.fullWidth}\n          />\n        </Grid>\n      </Grid>\n    </ListItem>\n  );\n};\n\nexport default Open;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ListItem from '@material-ui/core/ListItem';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles((theme) => ({\n  fullWidth: {\n    width: '100%',\n  },\n}));\n\nconst insertDividers = (word, answer, divider = ' | ') => {\n  const spread = divider.length;\n\n  answer.forEach((slice, index) => {\n    const pre = word.slice(0, slice + index * spread);\n    const post = word.slice(slice + index * spread);\n    word = `${pre}${divider}${post}`;\n  });\n\n  return word;\n};\n\nconst DivideTheWord = (props) => {\n  const { id, data } = props;\n  const classes = useStyles();\n\n  return (\n    <ListItem component=\"div\" alignItems=\"flex-start\" key={id}>\n      <Grid container>\n        <Grid item xs={12} md={6} className={classes.fullWidth}>\n          <Typography variant=\"body1\">{`${props.index + 1}. ${\n            data.word\n          }`}</Typography>\n          <Typography>\n            {insertDividers(data.word, data.correctAnswer)}\n          </Typography>\n        </Grid>\n      </Grid>\n    </ListItem>\n  );\n};\n\nexport default DivideTheWord;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ListItem from '@material-ui/core/ListItem';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles((theme) => ({\n  fullWidth: {\n    width: '100%',\n  },\n}));\n\nconst ClickTheRightWords = (props) => {\n  const { id } = props;\n  const classes = useStyles();\n\n  return (\n    <ListItem component=\"div\" alignItems=\"flex-start\" key={id}>\n      <Grid container>\n        <Grid item xs={12}>\n          <Typography variant=\"body1\" className={classes.marginBottom}>\n            {/* {instruction} */}\n          </Typography>\n        </Grid>\n        <Grid item xs={12}>\n          <Typography>Oh oh, dit wordt nog niet ondersteund.</Typography>\n        </Grid>\n      </Grid>\n    </ListItem>\n  );\n};\n\nexport default ClickTheRightWords;\n","import React, { useState } from 'react';\nimport { Prompt } from 'react-router-dom';\nimport Paper from '@material-ui/core/Paper';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport MultipleChoice from '../_shared/questionTypes/MultipleChoice';\nimport MultipleChoiceGroup from '../_shared/questionTypes/MultipleChoiceGroup';\nimport Open from '../_shared/questionTypes/Open';\nimport DivideTheWord from '../_shared/questionTypes/DivideTheWord';\nimport ClickTheRightWords from '../_shared/questionTypes/clickTheRightWords';\n\nconst Question = (props) => {\n  const { type } = props;\n  switch (type) {\n    case 'multipleChoice':\n      return <MultipleChoice {...props} />;\n    case 'multipleChoiceGroup':\n      return <MultipleChoiceGroup {...props} />;\n    case 'open':\n      return <Open {...props} />;\n    case 'divideTheWord':\n      return <DivideTheWord {...props} />;\n    case 'clickTheRightWords':\n      return <ClickTheRightWords {...props} />;\n    default:\n      return (\n        <p>{`Er is iets fout gegaan, ${type} wordt niet herkend als vraag type`}</p>\n      );\n  }\n};\n\nconst QuestionGroup = (props) => {\n  const { questions, save } = props;\n  const [isBlocking, setIsBlocking] = useState(false);\n\n  questions.sort((el1, el2) => {\n    if (el1.index > el2.index) {\n      return 1;\n    } else {\n      return -1;\n    }\n  });\n\n  const saveQuestion = async (id, newData) => {\n    save(id, newData);\n  };\n\n  return (\n    <>\n      <Prompt\n        when={isBlocking}\n        message={(location) =>\n          'Je hebt je aanpassingen niet opgeslagen, weet je zeker dat je deze pagina wilt verlaten? (Uw aanpassingen zullen NIET opgeslagen worden!)'\n        }\n      />\n      <Paper>\n        <List\n          subheader={\n            <ListSubheader component=\"div\" id=\"nested-list-subheader\">\n              Instructie\n            </ListSubheader>\n          }\n        >\n          {questions.map((question, index) => (\n            <ListItem component=\"div\" key={question.id}>\n              <Question\n                {...question}\n                setIsBlocking={setIsBlocking}\n                index={index}\n                save={(newData) => saveQuestion(question.id, newData)}\n              />\n            </ListItem>\n          ))}\n        </List>\n      </Paper>\n    </>\n  );\n};\n\nexport default QuestionGroup;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Grid from '@material-ui/core/Grid';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport QuestionGroup from '../_shared/QuestionGroup';\nimport service from '../../service';\n\nconst Question = (props) => {\n  const { authStore } = props;\n  const [questionGroups, setQuestionGroup] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const params = useParams();\n\n  const loadQuestionGroups = useCallback(async () => {\n    setLoading(true);\n    const response = await service.loadQuestionGroups([params.questionGroupId]);\n    if (!response) {\n      return;\n    }\n    setQuestionGroup(response.body.data[0]);\n    setLoading(false);\n  }, [params.questionGroupId]);\n\n  useEffect(() => {\n    loadQuestionGroups();\n  }, [loadQuestionGroups]);\n\n  const save = async (questionId, newData) => {\n    setLoading(true);\n    const response = await service.updateQuestion(questionId, newData);\n    setLoading(false);\n    if (!response) {\n      return;\n    }\n    authStore.setSuccess('Vraag succesvol geüpdatet');\n    await loadQuestionGroups();\n  };\n\n  if (loading || !questionGroups) {\n    return <CircularProgress />;\n  }\n\n  return (\n    <Grid container spacing={2}>\n      <Grid item xs={12}></Grid>\n      <Grid item xs={12}>\n        <QuestionGroup {...questionGroups} save={save} />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Question;\n","import Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography, Box } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    display: 'flex',\n    textAlign: 'center',\n    overflow: 'auto',\n    justifyContent: 'center',\n    backgroundColor: theme.widget.secondary.main,\n    color: 'white',\n    alignItems: 'baseline',\n  },\n  fixedHeight: {\n    height: 400,\n  },\n}));\n\nconst CustomTitle = (props) => {\n  const { name, label } = props;\n  const classes = useStyles();\n\n  return (\n    <Paper className={classes.paper}>\n      <Typography variant=\"h6\">{name} </Typography>\n      <Box paddingLeft={2}>\n        <Typography variant=\"subtitle1\">({label})</Typography>\n      </Box>\n    </Paper>\n  );\n};\n\nexport default CustomTitle;\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  answer: (props) => ({\n    background: getColor(props.correct),\n\n    width: '90%',\n  }),\n}));\n\nconst getColor = (isCorrect) => {\n  if (isCorrect) {\n    return '#C5E6A6';\n  } else {\n    return 'white';\n  }\n};\n\nconst AnswerHighlight = (props) => {\n  const classes = useStyles(props);\n  return <Typography className={classes.answer}> {props.answer}</Typography>;\n};\n\nexport default AnswerHighlight;\n","import React, { useState } from 'react';\nimport { DataGrid } from '@material-ui/data-grid';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Grid from '@material-ui/core/Grid';\nimport CustomTitle from './CustomTitle';\nimport AnswerHighlight from './AnswerHighlight';\nimport Accordion from '@material-ui/core/Accordion';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport TextField from '@material-ui/core/TextField';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport FiberManualRecordOutlinedIcon from '@material-ui/icons/FiberManualRecordOutlined';\nimport { ListItemSecondaryAction } from '@material-ui/core';\nimport { observer } from 'mobx-react-lite';\n\nimport { useHistory } from 'react-router-dom';\n\nimport Divider from '@material-ui/core/Divider';\n\nconst useStyles = makeStyles((theme) => ({\n  questionName: {\n    display: 'flex',\n    flexGrow: 0,\n    backgroundColor: theme.widget.primary.main,\n    color: 'white',\n  },\n  grid: {\n    display: 'flex',\n\n    direction: 'column',\n    wrap: 'nowrap',\n    flexGrow: 1,\n  },\n  title: {\n    backgroundColor: theme.widget.tertiary.main,\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'fontWeightBold',\n  },\n}));\n\nconst Answers = (props) => {\n  const history = useHistory();\n  const classes = useStyles();\n  const { questionStore } = props;\n\n  const [filterValue, setFilterValue] = useState(null);\n  const [filterInputValue, setFilterInputValue] = useState('');\n\n  const typeLabels = {\n    open: 'Open',\n    clickTheRightWords: 'Selecteer het correcte antwoord',\n    multipleChoice: 'Meerkeuze',\n    divideTheWord: 'Verdeel het woord',\n    combineAndFillInTheBlanks: 'Combineer en vul in',\n  };\n\n  if (questionStore.isLoading || !questionStore.questionGroups) {\n    return <CircularProgress />;\n  }\n\n  const calculateDistribution = (questionId, index) => {\n    let acc = 0;\n    let total = 0;\n    questionStore.questionGroups[0].questionGroupAttempts.forEach((qga) => {\n      if (qga.isCompleted) {\n        qga.questionAttempts.forEach((qa) => {\n          if (qa.questionId === questionId) {\n            qa.content.forEach((attempt) => {\n              total += 1;\n              if (attempt === index) {\n                acc += 1;\n              }\n            });\n          }\n        });\n      }\n    });\n\n    return Math.round((acc / total) * 100);\n  };\n\n  const getRows = (questionId) => {\n    const rows = [];\n    questionStore.questionGroups[0].questionGroupAttempts.forEach((qga) => {\n      qga.questionAttempts.forEach((qa) => {\n        if (qa.questionId === questionId) {\n          rows.push({\n            id: qa.id,\n            studentName: qa.studentName,\n            answer: qa.answer,\n            studentId: qa.studentId,\n          });\n        }\n      });\n    });\n    return rows;\n  };\n\n  const getRowsFilter = (questionId, filterValue) => {\n    const rows = [];\n    questionStore.questionGroups[0].questionGroupAttempts.forEach((qga) => {\n      qga.questionAttempts.forEach((qa) => {\n        if (qa.questionId === questionId && qa.answer === filterValue.answer) {\n          rows.push({\n            id: qa.id,\n            studentName: qa.studentName,\n            answer: qa.answer,\n            studentId: qa.studentId,\n          });\n        }\n      });\n    });\n    return rows;\n  };\n\n  const getOptions = (questionId) => {\n    const options = [];\n    questionStore.questionGroups[0].questions.forEach((q) => {\n      if (q.id === questionId) {\n        q.data.options.forEach((option) => {\n          options.push({ answer: option.value });\n        });\n      }\n    });\n    return options;\n  };\n\n  const onClickStudent = (event) =>\n    history.push(`/dashboard/students/${event.row.studentId}`);\n\n  const onFilterInputChange = (event, newInputValue) => {\n    setFilterInputValue(newInputValue);\n  };\n\n  const onFilterChange = (event, newValue) => {\n    setFilterValue(newValue);\n  };\n\n  const categoryQuestions = questionStore.questionGroups[0].questions[0].type;\n  const nameQuestionGroup = questionStore.questionGroups[0].name;\n  const label = typeLabels[categoryQuestions] || categoryQuestions;\n\n  const columns = [\n    {\n      field: 'studentName',\n      headerName: 'Naam',\n      flex: 1.0,\n      valueGetter: (params) => params.row.studentName,\n    },\n\n    {\n      field: 'answer',\n      headerName: 'Antwoord',\n      flex: 1.0,\n      valueGetter: (params) => params.row.answer,\n    },\n  ];\n\n  return (\n    <Grid container spacing={2}>\n      <Grid item xs={12} md={12}>\n        <CustomTitle name={nameQuestionGroup} label={label} />\n      </Grid>\n\n      <Grid item xs={12} md={12}>\n        {questionStore.questionGroups[0].questions.map((item, index) => {\n          return (\n            <Accordion defaultExpanded key={item.id}>\n              <AccordionSummary\n                expandIcon={<ExpandMoreIcon />}\n                className={classes.questionName}\n              >\n                <Typography key={index} style={{ marginLeft: '45%' }}>\n                  {'Vraag ' + parseInt(index + 1)}\n                </Typography>\n              </AccordionSummary>\n              <AccordionDetails>\n                <Grid container spacing={1}>\n                  <Grid item xs={12} md={12}>\n                    <Typography key={index}>{item.instruction}</Typography>\n                  </Grid>\n                  <Grid item xs={6} md={3}>\n                    <List>\n                      {item.data.options.map((item2, index2) => {\n                        return (\n                          <ListItem key={index2}>\n                            <ListItemIcon>\n                              <FiberManualRecordOutlinedIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                              key={index}\n                              primary={\n                                <AnswerHighlight\n                                  answer={item2.value}\n                                  correct={item2.isCorrect}\n                                />\n                              }\n                            />\n                            <ListItemSecondaryAction>\n                              <Typography style={{ color: 'grey' }}>\n                                {calculateDistribution(item.id, index2)}%\n                              </Typography>\n                            </ListItemSecondaryAction>\n                          </ListItem>\n                        );\n                      })}\n                    </List>\n                  </Grid>\n                  <Divider style={{ margin: '1rem 0', width: '100%' }} />\n                  <Grid item xs={12} md={12}>\n                    <Grid item xs={12} md={12}>\n                      <Typography className={classes.title}>\n                        Filter op antoord :\n                      </Typography>\n                      <Autocomplete\n                        value={filterValue}\n                        onChange={onFilterChange}\n                        inputValue={filterInputValue}\n                        onInputChange={onFilterInputChange}\n                        options={getOptions(item.id)}\n                        getOptionLabel={(option) => option.answer}\n                        renderInput={(params) => (\n                          <TextField {...params} variant=\"outlined\" />\n                        )}\n                      />\n                    </Grid>\n                  </Grid>\n\n                  <Grid item xs={12} md={12}>\n                    <DataGrid\n                      autoHeight\n                      rows={\n                        filterValue\n                          ? getRowsFilter(item.id, filterValue)\n                          : getRows(item.id)\n                      }\n                      columns={columns}\n                      pageSize={12}\n                      onRowClick={onClickStudent}\n                    />\n                  </Grid>\n                </Grid>\n              </AccordionDetails>\n            </Accordion>\n          );\n        })}\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default observer(Answers);\n","import React, { useEffect, useCallback } from 'react';\nimport { useParams, useHistory, useLocation } from 'react-router-dom';\nimport AppBar from '@material-ui/core/AppBar';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\nimport Details from './Insights';\nimport Question from './Question';\nimport TabContent from '../_shared/TabContent';\nimport Breadcrumbs from '../_shared/Breadcrumbs';\nimport PageContainer from '../_shared/PageContainer';\nimport AssignmentTurnedInIcon from '@material-ui/icons/AssignmentTurnedIn';\nimport AnswersMultipleChoice from './AnswersMultipleChoice';\n\nconst Answers = (props) => {\n  const { questionStore } = props;\n  if (questionStore.questionGroups) {\n    const type = questionStore.questionGroups[0].questions[0].type;\n    switch (type) {\n      case 'multipleChoice':\n        return <AnswersMultipleChoice {...props} />;\n      default:\n        return (\n          <p>{`Er is iets fout gegaan, ${type} wordt niet herkend als vraag type`}</p>\n        );\n    }\n  } else {\n    return null;\n  }\n};\n\nconst QuestionStats = (props) => {\n  const history = useHistory();\n  const params = useParams();\n  const location = useLocation();\n  const { questionStore, crumbs } = props;\n\n  const loadAll = useCallback(async () => {\n    await questionStore.loadQuestionGroupsWithAttempts([\n      params.questionGroupId,\n    ]);\n  }, [questionStore, params.questionGroupId]);\n\n  useEffect(() => {\n    loadAll();\n  }, [loadAll]);\n\n  const onClickTab = (event, newTab) => {\n    const currentTab = params.questionGroupTab;\n    const newPath = location.pathname.replace(currentTab, newTab);\n    history.push(newPath);\n  };\n\n  return (\n    <>\n      <AppBar position=\"static\">\n        <Tabs value={params.questionGroupTab} onChange={onClickTab}>\n          <Tab\n            label=\"Inzicht (opdracht)\"\n            icon={<EqualizerIcon />}\n            value=\"question_group_insights\"\n          />\n          <Tab\n            label=\"Opdracht\"\n            icon={<VisibilityIcon />}\n            value=\"question_group_questions\"\n          />\n          <Tab\n            label=\"Antwoorden\"\n            icon={<AssignmentTurnedInIcon />}\n            value=\"question_group_answers\"\n          />\n        </Tabs>\n      </AppBar>\n      <PageContainer maxWidth=\"lg\">\n        <Breadcrumbs crumbs={crumbs} />\n        <TabContent\n          index=\"question_group_questions\"\n          value={params.questionGroupTab}\n        >\n          <Question {...props} />\n        </TabContent>\n        <TabContent\n          index=\"question_group_insights\"\n          value={params.questionGroupTab}\n        >\n          <Details {...props} />\n        </TabContent>\n        <TabContent\n          index=\"question_group_answers\"\n          value={params.questionGroupTab}\n        >\n          <Answers {...props} />\n        </TabContent>\n      </PageContainer>\n    </>\n  );\n};\n\nexport default QuestionStats;\n","import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { observer } from 'mobx-react-lite';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { useHistory } from 'react-router-dom';\nimport { DataGrid } from '@material-ui/data-grid';\nimport Paper from '@material-ui/core/Paper';\nimport service from '../../service';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport TextField from '@material-ui/core/TextField';\n\nconst columns = [\n  {\n    field: 'name',\n    headerName: 'Naam',\n    flex: 0.25,\n  },\n  {\n    field: 'classes',\n    headerName: 'Klas',\n    flex: 0.75,\n    valueGetter: (params) => params.row.classes[0].name, // TODO: Make this column not hardcoded to the first class\n  },\n];\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    padding: theme.spacing(4, 12, 4, 12),\n  },\n  datagrid: {\n    marginTop: '1rem',\n    '& .MuiDataGrid-row:hover': {\n      cursor: 'pointer',\n    },\n  },\n}));\n\nconst Students = () => {\n  const classes = useStyles();\n  const history = useHistory();\n  const [loading, setLoading] = useState(false);\n  const [students, setStudents] = useState([]);\n  const [studentFilterValue, setStudentFilterValue] = useState(null);\n  const [studentFilterInputValue, setStudentFilterInputValue] = useState('');\n\n  const loadStudents = async () => {\n    setLoading(true);\n    const response = await service.loadStudents();\n    setLoading(false);\n    if (!response) {\n      return;\n    }\n    setStudents(response.body.data);\n  };\n\n  const onStudentFilterInputChange = (event, newInputValue) => {\n    setStudentFilterInputValue(newInputValue);\n  };\n\n  const onStudentFilterChange = (event, newValue) => {\n    setStudentFilterValue(newValue);\n  };\n\n  const shownStudents = studentFilterValue ? [studentFilterValue] : students;\n\n  useEffect(() => {\n    loadStudents();\n  }, []);\n\n  const onClickStudent = (event) =>\n    history.push(`/dashboard/students/${event.row.id}`);\n\n  if (loading) {\n    return <CircularProgress />;\n  }\n\n  return (\n    <div className={classes.container}>\n      <Autocomplete\n        value={studentFilterValue}\n        onChange={onStudentFilterChange}\n        inputValue={studentFilterInputValue}\n        onInputChange={onStudentFilterInputChange}\n        options={students}\n        getOptionLabel={(option) => option.name}\n        renderInput={(params) => (\n          <TextField {...params} label=\"Leerling zoeken\" variant=\"outlined\" />\n        )}\n      />\n      <Grid container spacing={2}>\n        <Grid item xs={12}>\n          <Paper>\n            <DataGrid\n              className={classes.datagrid}\n              autoHeight\n              rows={shownStudents}\n              columns={columns}\n              pageSize={24}\n              onRowClick={onClickStudent}\n              components={{\n                ColumnMenuIcon: () => null, // We dont want to show anything for now\n              }}\n            />\n          </Paper>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default observer(Students);\n","// PAGES\nimport LessonView from './pages/home';\nimport Profile from './pages/profile';\nimport Class from './pages/class';\nimport Lesson from './pages/lesson';\nimport Student from './pages/student';\nimport StudentLesson from './pages/studentLesson';\nimport QuestionGroup from './pages/questionGroup';\nimport Students from './pages/students';\n\nconst routes = [\n  {\n    exact: true,\n    path: '/dashboard/home',\n    Component: LessonView,\n    name: 'Home',\n  },\n  {\n    exact: true,\n    path: '/dashboard/profile',\n    Component: Profile,\n    name: 'Profile',\n  },\n  {\n    exact: true,\n    path: '/dashboard/classes/:classId/:classTab',\n    Component: Class,\n    name: 'Klas',\n  },\n  {\n    exact: true,\n    path: '/dashboard/classes/:classId/:classTab/lessons/:lessonId/:lessonTab',\n    Component: Lesson,\n    name: 'Les',\n  },\n  {\n    exact: true,\n    path: '/dashboard/students/:studentId',\n    Component: Student,\n    name: 'Leerling',\n  },\n  {\n    exact: true,\n    path: '/dashboard/students/:studentId/lessons/:lessonId',\n    Component: StudentLesson,\n    name: 'Les Inzicht',\n  },\n  {\n    exact: true,\n    path: '/dashboard/classes/:classId/:classTab/lessons/:lessonId/:lessonTab/questionGroups/:questionGroupId/:questionGroupTab',\n    Component: QuestionGroup,\n    name: 'Opdracht',\n  },\n  {\n    exact: true,\n    path: '/dashboard/students',\n    Component: Students,\n    name: 'Leerlingen',\n  },\n];\n\nexport default routes;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TreeItem from '@material-ui/lab/TreeItem';\nimport Typography from '@material-ui/core/Typography';\n\nconst drawerWidth = 245;\n\nconst useTreeItemStyles = makeStyles((theme) => ({\n  root: {\n    width: drawerWidth,\n    color: theme.palette.text.secondary,\n    '&:hover > $content': {\n      backgroundColor: theme.palette.action.hover,\n    },\n    '&:focus > $content, &$selected > $content': {\n      backgroundColor: `var(--tree-view-bg-color, ${theme.palette.grey[400]})`,\n      color: 'var(--tree-view-color)',\n    },\n    '&:focus > $content $label, &:hover > $content $label, &$selected > $content $label':\n      {\n        backgroundColor: 'transparent',\n      },\n  },\n  content: {\n    color: theme.palette.text.secondary,\n    paddingRight: theme.spacing(1),\n    fontWeight: theme.typography.fontWeightMedium,\n    '$expanded > &': {\n      fontWeight: theme.typography.fontWeightRegular,\n    },\n  },\n  group: {\n    marginLeft: 0,\n    '& $content': {\n      paddingLeft: theme.spacing(2),\n    },\n  },\n  expanded: {},\n  selected: {},\n  label: {\n    fontWeight: 'inherit',\n    color: 'inherit',\n  },\n  labelRoot: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0.5, 0),\n  },\n  labelIcon: {\n    marginRight: theme.spacing(1),\n  },\n  labelText: {\n    fontWeight: 'inherit',\n    flexGrow: 1,\n  },\n}));\n\nconst MenuItem = (props) => {\n  const classes = useTreeItemStyles();\n  const {\n    labelText,\n    labelIcon: LabelIcon,\n    labelInfo,\n    color,\n    bgColor,\n    ...other\n  } = props;\n\n  return (\n    <TreeItem\n      label={\n        <div className={classes.labelRoot}>\n          {LabelIcon && (\n            <LabelIcon color=\"inherit\" className={classes.labelIcon} />\n          )}\n          <Typography variant=\"h6\" className={classes.labelText}>\n            {labelText}\n          </Typography>\n          <Typography variant=\"caption\" color=\"inherit\">\n            {labelInfo}\n          </Typography>\n        </div>\n      }\n      style={{\n        '--tree-view-color': color,\n        '--tree-view-bg-color': bgColor,\n      }}\n      classes={{\n        root: classes.root,\n        content: classes.content,\n        expanded: classes.expanded,\n        selected: classes.selected,\n        group: classes.group,\n        label: classes.label,\n      }}\n      {...other}\n    />\n  );\n};\n\nexport default MenuItem;\n","import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Divider from '@material-ui/core/Divider';\nimport TreeView from '@material-ui/lab/TreeView';\nimport GroupRoundedIcon from '@material-ui/icons/GroupRounded';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\nimport HomeRoundedIcon from '@material-ui/icons/HomeRounded';\nimport SchoolRoundedIcon from '@material-ui/icons/SchoolRounded';\nimport NoMeetingRoomRoundedIcon from '@material-ui/icons/NoMeetingRoomRounded';\nimport Drawer from '@material-ui/core/Drawer';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport MenuItem from './pages/_shared/MenuItem';\nimport service from './service';\nimport socket from './socket';\n\nconst drawerWidth = 245;\n\nconst useStyles = makeStyles(() => ({\n  drawer: {\n    marginRight: drawerWidth,\n  },\n  logoutButton: {\n    position: 'absolute',\n    bottom: 0,\n  },\n}));\n\nconst Menu = (props) => {\n  const { authStore } = props;\n  const classes = useStyles();\n  const history = useHistory();\n  const [classList, setClassList] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [dialogOpen, setDialogOpen] = useState(false);\n\n  const loadClasses = async () => {\n    setLoading(true);\n    const response = await service.loadClasses();\n    if (response) {\n      setClassList(response.body.data);\n    }\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    loadClasses();\n  }, []);\n\n  const onNodeSelect = (event, value) => {\n    switch (value) {\n      case '/':\n        handleDialogOpen();\n        break;\n      case '/dashboard/classes':\n        // do nothing\n        break;\n      default:\n        history.push(value);\n    }\n  };\n\n  const handleLogout = () => {\n    authStore.logout();\n    socket.disconnect();\n    history.push('/');\n    authStore.setSuccess('Succesvol uitgelogd!');\n  };\n\n  const handleDialogOpen = () => {\n    setDialogOpen(true);\n  };\n\n  const handleDialogClose = () => {\n    setDialogOpen(false);\n  };\n\n  return (\n    <Drawer variant=\"permanent\" className={classes.drawer}>\n      <TreeView\n        defaultExpanded={['/dashboard/classes']}\n        defaultCollapseIcon={<ArrowDropDownIcon />}\n        defaultExpandIcon={<ArrowRightIcon />}\n        defaultEndIcon={<div style={{ width: 24 }} />}\n        onNodeSelect={onNodeSelect}\n      >\n        <div style={{ marginTop: '64px', padding: 0 }} />\n        <Divider />\n        <MenuItem\n          nodeId=\"/dashboard/home\"\n          labelText=\"Overzicht\"\n          labelIcon={HomeRoundedIcon}\n        />\n        <MenuItem\n          nodeId=\"/dashboard/classes\"\n          labelText=\"Klassen\"\n          labelIcon={SchoolRoundedIcon}\n        >\n          {loading\n            ? null\n            : classList.map((classItem) => (\n                <MenuItem\n                  key={classItem.id}\n                  nodeId={`/dashboard/classes/${classItem.id}/class_insights`}\n                  labelText={classItem.name}\n                  color=\"#1a73e8\"\n                  bgColor=\"#e8f0fe\"\n                />\n              ))}\n        </MenuItem>\n        <MenuItem\n          nodeId=\"/dashboard/students\"\n          labelText=\"Leerlingen\"\n          labelIcon={GroupRoundedIcon}\n        />\n        <MenuItem\n          nodeId=\"/\"\n          labelText=\"Uitloggen\"\n          labelIcon={NoMeetingRoomRoundedIcon}\n          className={classes.logoutButton}\n        />\n      </TreeView>\n      <Dialog\n        open={dialogOpen}\n        onClose={handleDialogClose}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">Uitloggen</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Weet je zeker dat je wilt uitloggen?\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleDialogClose} color=\"primary\">\n            Annuleren\n          </Button>\n          <Button onClick={handleLogout} color=\"primary\">\n            Uitloggen\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Drawer>\n  );\n};\n\nexport default Menu;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { withStyles } from '@material-ui/core/styles';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport IconButton from '@material-ui/core/IconButton';\nimport Grid from '@material-ui/core/Grid';\nimport SchoolRoundedIcon from '@material-ui/icons/SchoolRounded';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Badge from '@material-ui/core/Badge';\nimport { observer } from 'mobx-react-lite';\n\nimport service from './service';\n\nconst StyledMenu = withStyles({\n  paper: {\n    border: '1px solid #d3d4d5',\n  },\n})((props) => (\n  <Menu\n    getContentAnchorEl={null}\n    anchorOrigin={{\n      vertical: 'bottom',\n      horizontal: 'left',\n    }}\n    transformOrigin={{\n      vertical: 'top',\n      horizontal: 'left',\n    }}\n    {...props}\n  />\n));\n\nconst StyledMenuItem = withStyles((theme) => ({\n  root: {\n    '&:focus': {\n      backgroundColor: theme.palette.primary.main,\n      '& .MuiListItemIcon-root, & .MuiListItemText-primary': {\n        color: theme.palette.common.white,\n      },\n    },\n  },\n}))(MenuItem);\n\nconst Notifications = (props) => {\n  const { notificationStore } = props;\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [classes, setClasses] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const history = useHistory();\n\n  const loadClasses = useCallback(async () => {\n    setLoading(true);\n\n    const response = await service.loadClasses();\n    if (!response) {\n      return;\n    }\n    setClasses(response.body.data);\n    setLoading(false);\n  }, []);\n\n  useEffect(() => {\n    loadClasses();\n  }, [loadClasses]);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const onClickNotification = (notification) => {\n    notificationStore.deleteNotification(notification.index);\n    history.push(notification.path);\n  };\n\n  if (loading || !classes) {\n    return <CircularProgress />;\n  }\n\n  return (\n    <Grid container>\n      <Grid item>\n        <IconButton color=\"inherit\" onClick={handleClick}>\n          <Badge\n            badgeContent={notificationStore.notifications.length}\n            color=\"secondary\"\n          >\n            <NotificationsIcon />\n          </Badge>\n        </IconButton>\n      </Grid>\n      <StyledMenu\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        {notificationStore.notifications.length ? (\n          notificationStore.notifications.map((notification) => (\n            <StyledMenuItem\n              key={notification.id}\n              onClick={() => onClickNotification(notification)}\n            >\n              <ListItemIcon>\n                <SchoolRoundedIcon fontSize=\"small\" />\n              </ListItemIcon>\n              <ListItemText primary={notification.value} />\n            </StyledMenuItem>\n          ))\n        ) : (\n          <StyledMenuItem onClick={handleClose}>\n            <ListItemText primary=\"Geen notificaties!\" />\n          </StyledMenuItem>\n        )}\n      </StyledMenu>\n    </Grid>\n  );\n};\nexport default observer(Notifications);\n","import React from 'react';\nimport clsx from 'clsx';\nimport { useHistory } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Notifications from './Notifications.jsx';\nimport IconButton from '@material-ui/core/IconButton';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\n\nconst drawerWidth = 245;\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  title: {\n    flexGrow: 1,\n  },\n  icons: {\n    display: 'flex',\n  },\n}));\n\nconst CustomAppBar = (props) => {\n  const classes = useStyles();\n  const history = useHistory();\n\n  const goToProfile = () => history.push('/dashboard/profile');\n  const goBack = () => history.goBack();\n\n  return (\n    <AppBar\n      position=\"absolute\"\n      className={clsx(classes.appBar, classes.appBarShift)}\n    >\n      <Toolbar className={classes.toolbar}>\n        <IconButton onClick={goBack}>\n          <ChevronLeftIcon style={{ color: 'white' }} />\n        </IconButton>\n        <Typography\n          component=\"h1\"\n          variant=\"h6\"\n          color=\"inherit\"\n          noWrap\n          className={classes.title}\n        ></Typography>\n        <div className={classes.icons}>\n          <Notifications {...props} />\n          <IconButton color=\"inherit\" onClick={goToProfile}>\n            <AccountCircle />\n          </IconButton>\n        </div>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default CustomAppBar;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport 'chartjs-plugin-colorschemes';\nimport routes from './routes';\nimport Menu from './Menu';\nimport AppBar from './AppBar';\n\nconst useStyles = makeStyles((theme) => ({\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n}));\n\nconst Dashboard = (props) => {\n  const {\n    authStore,\n    lessonStore,\n    questionStore,\n    notificationStore,\n    studentStore,\n  } = props;\n  const classes = useStyles();\n\n  return (\n    <Switch>\n      {routes.map(({ exact, path, name, Component }) => (\n        <Route\n          key={path}\n          exact={exact}\n          path={path}\n          render={(props) => {\n            const crumbs = routes\n              // Get all routes that contain the current one.\n              .filter(({ path }) => props.match.path.includes(path))\n              // Swap out any dynamic routes with their param values.\n              // E.g. \"/pizza/:pizzaId\" will become \"/pizza/1\"\n              .map(({ path, ...rest }) => ({\n                path: Object.keys(props.match.params).length\n                  ? Object.keys(props.match.params).reduce(\n                      (path, param) =>\n                        path.replace(`:${param}`, props.match.params[param]),\n                      path\n                    )\n                  : path,\n                ...rest,\n              }));\n\n            return (\n              <>\n                <AppBar notificationStore={notificationStore} {...props} />\n                <Menu authStore={authStore} />\n                <main className={classes.content}>\n                  <div className={classes.appBarSpacer} />\n                  <Component\n                    authStore={authStore}\n                    lessonStore={lessonStore}\n                    questionStore={questionStore}\n                    notificationStore={notificationStore}\n                    studentStore={studentStore}\n                    crumbs={crumbs}\n                    {...props}\n                  />\n                </main>\n              </>\n            );\n          }}\n          name={name}\n        />\n      ))}\n    </Switch>\n  );\n};\n\nexport default Dashboard;\n","export default __webpack_public_path__ + \"static/media/loginBanner.8df90453.jpg\";","import React, { useState } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useHistory } from 'react-router-dom';\nimport { observer } from 'mobx-react-lite';\nimport loginBanner from '../../assets/loginBanner.jpg';\n\nconst Copyright = () => {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Wordfactory\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100vh',\n  },\n  image: {\n    backgroundImage: `url(${loginBanner})`,\n    backgroundRepeat: 'no-repeat',\n    backgroundColor:\n      theme.palette.type === 'light'\n        ? theme.palette.grey[50]\n        : theme.palette.grey[900],\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nconst Login = (props) => {\n  const { authStore } = props;\n  const classes = useStyles();\n  const history = useHistory();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  const login = async (e) => {\n    setLoading(true);\n    e.preventDefault(); // Prevent reloading of page, due to \"submit\" role on button\n    const response = await authStore.login(email, password);\n    setLoading(false);\n    if (response) {\n      history.push('/dashboard/home');\n    }\n  };\n\n  return (\n    <Grid container component=\"main\" className={classes.root}>\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Log in\n          </Typography>\n          <form className={classes.form} noValidate>\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email Adres\"\n              name=\"email\"\n              autoComplete=\"email\"\n              autoFocus\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Wachtwoord\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            />\n            <FormControlLabel\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\n              label=\"Herinner mij\"\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n              disabled={loading}\n              onClick={login}\n            >\n              Inloggen\n            </Button>\n            <Grid container>\n              <Grid item xs>\n                <Link href=\"#\" variant=\"body2\">\n                  Wachtwoord vergeten?\n                </Link>\n              </Grid>\n              <Grid item>\n                <Link href=\"#\" variant=\"body2\">\n                  {'Geen account? Registreer hier.'}\n                </Link>\n              </Grid>\n            </Grid>\n            <Box mt={5}>\n              <Copyright />\n            </Box>\n          </form>\n        </div>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default observer(Login);\n","import { action, makeObservable, observable, computed } from 'mobx';\nimport service from '../service';\nimport utils from './_utils';\n\n// Tutorial on mobx state management: https://blog.logrocket.com/introduction-to-mobx-with-react/\nclass QuestionStore {\n  constructor() {\n    makeObservable(this, {\n      questionAttempts: observable,\n      questionGroups: observable,\n      loading: observable,\n      popLoad: action,\n      pushLoad: action,\n      isLoading: computed,\n    });\n  }\n\n  questionAttempts = [];\n  questionGroups = null;\n  loading = 0;\n\n  popLoad = () => (this.loading -= 1);\n  pushLoad = () => (this.loading += 1);\n\n  loadQuestionGroupsWithAttempts = async (questionGroupIds) => {\n    this.pushLoad();\n    const response = await service.loadQuestionGroups(questionGroupIds);\n    if (response) {\n      let questionGroups = response.body.data;\n      questionGroups.forEach((qg) => {\n        utils.addQuestionGroupAttemptStats(qg);\n        utils.addQuestionAttemptInformation(qg);\n        this.questionGroups = questionGroups;\n      });\n    }\n    this.popLoad();\n  };\n\n  loadQuestionAttemptsWithInfo = async (studentId, lessonId) => {\n    this.pushLoad();\n    const response = await service.loadQuestionAttempts({\n      studentId: studentId,\n      lessonId: lessonId,\n    });\n\n    if (response) {\n      let questionAttempts = response.body.data;\n      questionAttempts = utils.addInformation(questionAttempts);\n      this.questionAttempts = questionAttempts;\n    }\n    this.popLoad();\n  };\n\n  get isLoading() {\n    return this.loading > 0;\n  }\n}\n\nexport default new QuestionStore();\n","import _ from 'lodash';\nimport { action, makeObservable, observable, computed } from 'mobx';\n\nimport service from '../service';\n\nclass StudentStore {\n  constructor() {\n    makeObservable(this, {\n      topResults: observable,\n      students: observable,\n      bottomResults: observable,\n      loadStudents: action,\n      setTopResults: action,\n      setBottomResults: action,\n      popLoad: action,\n      pushLoad: action,\n      isLoading: computed,\n    });\n  }\n\n  students = null;\n  topResults = [];\n  bottomResults = [];\n\n  popLoad = () => (this.loading -= 1);\n\n  pushLoad = () => (this.loading += 1);\n\n  setTopResults = (topResults) => (this.topResults = topResults);\n\n  setBottomResults = (bottomResults) => (this.bottomResults = bottomResults);\n\n  loadStudents = async (classId) => {\n    this.pushLoad();\n    const response = await service.loadStudents(classId);\n    if (response) {\n      this.students = response.body.data;\n    }\n\n    const distribution = this.computeDistribution(this.students).sort(\n      (a, b) => a.correctness - b.correctness\n    );\n\n    const cutoffValue = Math.round(distribution.length * 0.25);\n    const bottomResults = distribution.slice(0, cutoffValue);\n    const topResults = distribution.slice(\n      Math.max(distribution.length - cutoffValue, 0)\n    );\n\n    this.setBottomResults(bottomResults);\n    this.setTopResults(topResults);\n    this.updateBottomStudents(bottomResults);\n    this.popLoad();\n  };\n\n  computeDistribution = (students) => {\n    const distribution = [];\n\n    students.forEach((student) => {\n      let total = { correct: 0, incorrect: 0, missed: 0 };\n      student.lessonAttempts.forEach((lessonAttempt) => {\n        const currentTotal = lessonAttempt.questionGroupAttempts.reduce(\n          (acc, curr) => ({\n            correct: acc.correct + curr.correct,\n            incorrect: acc.incorrect + curr.incorrect,\n            missed: acc.missed + curr.missed,\n          }),\n          { correct: 0, incorrect: 0, missed: 0 }\n        );\n\n        total = _.mergeWith({}, total, currentTotal, (obj1, obj2) =>\n          _.isNumber(obj1) ? obj1 + obj2 : obj2\n        );\n      });\n\n      const totalPoints = total.correct + total.incorrect + total.missed;\n      const ratio = total.correct / totalPoints;\n      distribution.push({\n        name: student.name,\n        id: student.id,\n        correctness: Math.round((ratio || 0) * 100),\n      });\n    });\n\n    return distribution;\n  };\n\n  updateBottomStudents = (bottomResults) => {\n    this.students = this.students\n      .map((student) => ({\n        ...student,\n        bottom: bottomResults.some((info) => student.id === info.id),\n      }))\n      .sort((a, b) => b.bottom - a.bottom);\n  };\n\n  get isLoading() {\n    return this.loading > 0;\n  }\n}\n\nexport default new StudentStore();\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { makeStyles, ThemeProvider } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { observer } from 'mobx-react-lite';\nimport { defaults } from 'react-chartjs-2';\nimport { Classic10 } from 'chartjs-plugin-colorschemes/src/colorschemes/colorschemes.tableau';\nimport 'chartjs-plugin-colorschemes';\n\nimport extendChart from './config/extendChart';\nimport theme from './theme';\nimport Dashboard from './Dashboard';\nimport Login from './pages/login';\n\n// STORES\nimport authStore from './stores/auth';\nimport lessonStore from './stores/lessonStore';\nimport questionStore from './stores/questionStore';\nimport notificationStore from './stores/notificationStore';\nimport studentStore from './stores/studentStore';\n\ndefaults.global.plugins.colorschemes.scheme = Classic10;\nextendChart();\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n}));\n\nconst Alert = (props) => {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n};\n\nconst ErrorPopup = observer((props) => {\n  const { authStore } = props;\n  return (\n    <Snackbar open={!!authStore.error}>\n      <Alert severity=\"warning\">{authStore.error}</Alert>\n    </Snackbar>\n  );\n});\n\nconst SuccessPopup = observer((props) => {\n  const { authStore } = props;\n  return (\n    <Snackbar open={!!authStore.success}>\n      <Alert severity=\"success\">{authStore.success}</Alert>\n    </Snackbar>\n  );\n});\n\nconst LoginPage = () => <Login authStore={authStore} />;\n\nconst App = () => {\n  const classes = useStyles();\n  return (\n    <ThemeProvider theme={theme}>\n      <div className={classes.root}>\n        <Router>\n          <CssBaseline />\n          {/* Two main routers, this top router checks if the user is logged in;\n        If logged in -> Delegate routing to the dashboard component.\n        Else -> Show login page */}\n          <Switch>\n            <Route path=\"/\" exact component={LoginPage} />\n            <Route\n              path=\"/dashboard\"\n              component={(props) => (\n                <Dashboard\n                  authStore={authStore}\n                  lessonStore={lessonStore}\n                  questionStore={questionStore}\n                  notificationStore={notificationStore}\n                  studentStore={studentStore}\n                  {...props}\n                />\n              )}\n            />\n          </Switch>\n        </Router>\n        <ErrorPopup authStore={authStore} />\n        <SuccessPopup authStore={authStore} />\n      </div>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}